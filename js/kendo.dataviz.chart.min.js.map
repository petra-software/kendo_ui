{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals","1","10","100","2","20","200","3","30","300","4","40","400","5","50","500","6","60","600","7","70","700","8","80","800","9","90","900","1000","values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","Math","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","returnSelf","DefaultAggregates","_defaults","intersection","b1","b2","ua","ua_t","y","u_b","Point2D","applySeriesDefaults","themeOptions","seriesType","baseOptions","series","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","type","data","tooltip","bar","column","rangeColumn","line","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","applySeriesColors","currentSeries","seriesColor","defaults","colors","seriesColors","resolveAxisAliases","alias","each","CATEGORY","VALUE","X","Y","applyAxisDefaults","themeAxisDefaults","axisDefaults","axisName","axes","concat","axisOptions","axisColor","labels","title","categoriesCount","seriesCount","categories","getField","row","getter","getDateField","toDate","STRING","parseDate","isArray","toTime","addDuration","date","unit","weekStartDay","hours","getHours","YEARS","getFullYear","adjustDST","MONTHS","getMonth","WEEKS","startOfWeek","DAYS","getDate","HOURS","setUTCMinutes","addTicks","TIME_PER_HOUR","MINUTES","TIME_PER_MINUTE","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","getMilliseconds","setMilliseconds","day","getDay","daysToSubtract","TIME_PER_DAY","floorDate","ceilDate","dateDiff","a","b","absoluteDateDiff","diff","offsetDiff","getTimezoneOffset","ticks","duration","floor","TIME_PER_UNIT","dateIndex","start","baseUnit","baseUnitStep","startDate","timeIndex","singleItemOrArray","axisGroupBox","axisBox","contentBox","wrap","clone","Box2D","equalsIgnoreCase","dateEquals","appendIfNotNull","lteDateIndex","sortedDates","currentDate","low","high","countNumbers","num","count","areNumbers","axisRanges","axis","ranges","range","evalOptions","context","state","dryRun","property","propValue","excluded","depth","needsEval","MAX_EXPAND_DEPTH","hasOwnProperty","isFn","OBJECT","groupSeries","nameTemplate","groupIx","seriesClone","legacyTemplate","groupNameTemplate","dataLength","visibleInLegend","_slotCount","_groupIx","group","filterSeriesByType","types","indexOf","item","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","isDateAxis","sampleCategory","dateCategory","DATE","transpose","rows","rowIx","colIx","colCount","rowCount","ensureTree","fieldName","target","path","setter","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","parseFloat","fields","visible","abs","hasGradientOverlay","overlay","gradient","anyHasZIndex","elements","zIndex","preventDefault","_defaultPrevented","pointByCategoryName","points","category","hasValue","toChartAxisRanges","axisRange","acceptKey","mouseKey","accept","ctrlKey","shiftKey","altKey","preloadFonts","fetchFonts","MAX_DEPTH","keys","forEach","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","isPlainObject","paneAnchor","pane","anchor","PlotAreaFactory","BarLabel","LegendItem","LegendLayout","Legend","CategoryAxis","DateCategoryAxis","DateValueAxis","ClusterLayout","StackWrap","PointEventsMixin","NoteMixin","Bar","BarChartAnimation","FadeInAnimation","ErrorRangeCalculator","CategoricalChart","BarChart","RangeBar","RangeBarChart","BulletChart","Bullet","Target","ErrorBarBase","CategoricalErrorBar","ScatterErrorBar","LinePoint","Bubble","LineSegment","LineChartMixin","ClipAnimationMixin","LineChart","ClipAnimation","StepLineSegment","SplineSegment","AreaSegmentMixin","AreaSegment","AreaChart","SplineAreaSegment","StepAreaSegment","ScatterChart","ScatterLineChart","BubbleChart","Candlestick","CandlestickChart","OHLCPoint","OHLCChart","BoxPlotChart","BoxPlot","VerticalBoxPlot","PieSegment","PieChartMixin","PieChart","DonutSegment","DonutChart","WaterfallChart","WaterfallSegment","Pane","ChartContainer","PlotAreaBase","PlotAreaEventsMixin","CategoricalPlotArea","AxisGroupRangeTracker","XYPlotArea","PiePlotArea","DonutPlotArea","PieAnimation","BubbleAnimation","Highlight","BaseTooltip","Tooltip","SharedTooltip","Crosshair","CrosshairTooltip","Aggregates","Selection","Pannable","ZoomSelection","MousewheelZoom","SeriesAggregator","ChartAxis","noop","proxy","Observable","DataSource","Widget","ui","isFunction","Axis","AxisLabel","BoxElement","ChartElement","Color","CurveProcessor","FloatElement","Note","LogarithmicAxis","NumericAxis","RootElement","Ring","ShapeElement","ShapeBuilder","TextBox","Title","alignPathToPixel","autoFormat","eventTargetElement","getSpacing","interpolate","interpolateValue","mwDelta","geom","geometry","draw","NS","ABOVE","AREA","AUTO","FIT","AXIS_LABEL_CLICK","BAR","BAR_ALIGN_MIN_WIDTH","BAR_BORDER_BRIGHTNESS","BELOW","BLACK","BOTH","BOTTOM","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","CENTER","CHANGE","CIRCLE","CONTEXTMENU_NS","CLIP","COLOR","COLUMN","COORD_PRECISION","CROSS","CSS_PREFIX","CUSTOM","DATABOUND","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_PRECISION","DEFAULT_WIDTH","DEFAULT_ERROR_BAR_WIDTH","DONUT","DONUT_SECTOR_ANIM_DELAY","DRAG","DRAG_END","DRAG_START","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","FADEIN","FIRST","FROM","FUNNEL","GLASS","HORIZONTAL","HORIZONTAL_WATERFALL","INITIAL_ANIMATION_DURATION","INSIDE_BASE","INSIDE_END","INTERPOLATE","LEAVE","LEFT","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LINE","LINE_MARKER_SIZE","LINEAR","LOGARITHMIC","MAX","MIN","MIN_VALUE","MOUSELEAVE_NS","MOUSEMOVE_TRACKING","MOUSEMOVE_NS","MOUSEMOVE_DELAY","MOUSEWHEEL_DELAY","MOUSEWHEEL_NS","NOTE_CLICK","NOTE_HOVER","NOTE_TEXT","OHLC","OUTSIDE_END","PIE","PIE_SECTOR_ANIM_DELAY","PLOT_AREA_CLICK","PLOT_AREA_HOVER","POINTER","RANGE_BAR","RANGE_COLUMN","RENDER","RIGHT","ROUNDED_BEVEL","ROUNDED_GLASS","SCATTER","SCATTER_LINE","SELECT_START","SELECT","SELECT_END","SERIES_CLICK","SERIES_HOVER","START_SCALE","STEP","SMOOTH","STD_ERR","STD_DEV","SUMMARY_FIELD","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","years","months","weeks","days","minutes","seconds","TO","TOP","TOOLTIP_ANIMATION_DURATION","TOOLTIP_OFFSET","TOOLTIP_SHOW_DELAY","TOOLTIP_HIDE_DELAY","TOOLTIP_INVERSE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","WHITE","ZERO","ZOOM_ACCELERATION","ZOOM_START","ZOOM","ZOOM_END","BASE_UNITS","EQUALLY_SPACED_SERIES","DateLabelFormats","Chart","userOptions","dataSource","chart","destroy","fn","call","addClass","css","_originalOptions","_initTheme","_initSurface","bind","events","wrapper","_initDataSource","notify","themes","themeName","theme","seriesCopies","_applyDefaults","_dataChangeHandler","_onDataChanged","_bindCategories","_hasDataSource","_redraw","_attachEvents","autoBind","fetch","setDataSource","unbind","_hasData","items","renderAs","chartArea","legend","categoryAxis","highlight","negativeValues","transitions","valueAxis","plotArea","xAxis","yAxis","panes","pannable","zoomable","refresh","_bindSeries","getSize","dimensions","_resize","t","redraw","paneName","_model","_plotArea","findPane","getAxis","toggleHighlight","show","filter","seriesName","categoryName","_highlight","firstSeries","srcSeries","filterPoints","pointsBySeriesName","charts","togglePointHighlight","surface","_surfaceWrap","clear","resize","Surface","view","model","_getModel","_destroyView","renderVisual","traverse","animation","setup","visual","play","_tooltip","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","exportVisual","originalChartArea","_sharedTooltip","shared","_pannable","selection","_zoomSelection","mousewheel","_mousewheelZoom","_tooltipleave","hideCrosshairs","hide","_modelOptions","buildTitle","_createPlotArea","reflow","skipSeries","selections","_selections","_selectStartHandler","_selectStart","_selectHandler","_select","_selectEndHandler","_selectEnd","select","vertical","justified","_mouseover","_mouseout","on","_click","_mousewheel","_mouseleave","_mousemove","throttle","_shouldAttachMouseMove","UserEvents","_userEvents","global","multiTouch","fastTap","tap","_tap","_start","move","_move","end","_end","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","_gestureDistance","distance","_unsetActivePoint","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","args","mousewheelZoom","delta","originalEvent","updateRanges","zoom","_drawingChartElement","leave","_events","coords","_eventCoordinates","backgroundContainsPoint","_startNavigation","currentAxis","_navState","pan","startLocation","location","translateRange","_endNavigation","prevented","totalDelta","origEvent","_mwTimeout","clearTimeout","setTimeout","scaleRange","chartEvent","findPointPane","slice","cancel","_suppressHover","_getChartElement","match","eventTarget","chartElement","parent","aliasFor","closest","isTouch","client","clientX","clientY","_toModelCoordinates","offset","paddingLeft","parseInt","paddingTop","win","left","scrollLeft","top","scrollTop","drawingElement","_activePoint","_propagateClick","_startHover","click","point","tooltipOptions","isHighlighted","hover","tooltipTracking","_mouseMoveTracking","seriesPoint","containsPoint","getNearestPoint","seriesIx","off","_trackCrosshairs","_trackSharedTooltip","crosshairs","showAt","pointArgs","hoverArgs","pointCategoryIndex","_tooltipCategoryIx","pointsByCategoryIndex","eventArgs","categoryPoints","relatedTarget","_sourceSeries","grouped","processedSeries","_isBindable","_deferRedraw","support","vml","_clearRedrawTimeout","_redrawTimeout","clearInterval","seriesData","axisIx","categoriesData","definitions","_bindCategoryAxis","categoryIx","dataItems","_bindCategoryAxisFromSeries","s","onAxis","dataIx","dataRow","getFn","dateAxis","uniqueCategories","categoryField","_legendItemClick","seriesIndex","pointIndex","transitionsState","originalSeries","_legendItemHover","pointsBySeriesIndex","setOptions","_setEvents","ExportMixin","PDFMixin","_registry","register","seriesTypes","registry","_valueFields","_otherFields","_nullValue","_undefinedValue","otherFields","binder","_makeValue","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","content","barLabel","textBox","position","margin","padding","background","border","aboveAxis","delay","createVisual","noclip","targetBox","children","align","vAlign","x1","y1","x2","y2","rotation","right","bottom","alignToClipBox","clipBox","parentBox","paddingBox","createContainer","createMarker","createLabel","container","markerOptions","markerColor","markers","labelOptions","renderComplete","cursor","eventSink","_itemOverlay","Path","fromRect","toRect","fill","opacity","stroke","appendVisual","widget","that","customVisual","active","renderChildren","defaultVisual","addVisual","render","legendItem","Layout","spacing","lineSpacing","orientation","rect","bbox","clippedBBox","rectToBox","createItems","offsetX","offsetY","userAlign","shrinkToFit","innerElement","isVertical","reverse","hasItems","containerCustomReflow","containerReflow","containerBox","alignTarget","translate","_initFields","_initCategories","_ticks","outOfRangeMin","outOfRangeMax","definedMin","definedMax","srcCategories","ceil","majorGridLines","rangeIndices","totalRange","totalRangeIndices","limit","_seriesMax","getScale","lineBox","scale","getTickPositions","stepSize","positions","getLabelsTickPositions","tickPositions","getMajorTickPositions","unshift","labelTickIndex","label","arrangeLabels","hideOutOfRangeLabels","firstLabel","lastLabel","getTicks","majorTicks","getMinorTickPositions","minorTicks","getHash","_hash","getSlot","from","to","p1","p2","lineStart","slotBox","singleSlot","startValue","lineEnd","getCategory","categoryIndex","zoomRange","rate","totalMax","totalMin","labelsCount","labelsRange","skip","step","createAxisLabel","dataItem","axisLabelText","shouldRenderNote","limitRange","pointsRange","diffStart","diffEnd","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","dateFormats","autoBaseUnitSteps","maxDateGroups","parseNoteValue","rounds","cat","lastCat","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","datesRange","panRange","totalLimits","indicesRange","baseUnitIndex","autoBaseUnitStep","maxDiff","rangeDiff","stepIndex","rangeMax","rangeMin","autoUnit","stepOptions","unitSteps","nextStep","autoUnitIx","span","units","totalUnits","_timeScale","timeRange","maxCategory","lineSize","_collapse","nextDate","groups","upper","roundToNext","roundedStep","roundedDate","unitFormat","format","seriesMin","seriesMax","axisCrossingValue","axisCrossingValues","applyDefaults","timeUnits","baseUnitTime","autoMin","autoMax","userMajorUnit","majorUnit","autoMajorUnit","actualUnits","unitsToAdd","head","tail","minorUnit","getDivisions","stepValue","dir","startEdge","divisions","getValue","exact","limittedRange","endValue","gap","childBox","cluster","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","percentage","runningTotal","total","createNote","notes","noteText","note","_rendered","errorBar","labelText","labelTemplate","formatValue","owner","formatPointValue","errorBars","rectVisual","sender","getChart","Group","createRect","strokeOpacity","getBorderColor","dashType","lineJoin","createGradientOverlay","baseColor","createHighlight","highlightVisual","highlightVisualArgs","borderColor","brightness","_brightness","toHex","tooltipAnchor","tooltipWidth","tooltipHeight","isStacked","overlapsBox","overlaps","Animation","fromScale","origin","Point","transform","abort","scaleX","scaleY","AnimationFactory","easing","fadeTo","errorValue","initGlobalRanges","prototype","percentRegex","standardDeviationRegex","RegExp","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","globalRange","getStandardError","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","seriesCategoryAxis","valueAxisRanges","seriesPoints","seriesOptions","_evalSeries","invertAxes","clip","traverseDataPoints","addValue","pointOptions","pointType","plotValue","categoryPts","categorySum","otherValues","other","stack","otherStack","isStacked100","plotRange","positive","prevValue","isStackedBar","otherValue","seriesValueAxis","categoryAxisCrossingValue","stackLimits","stackName","pIx","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","addErrorBar","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","updateRange","createPoint","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","categorySlot","valueSlot","pointSlot","reflowPoint","reflowCategories","crossingValues","axisIndex","slotX","slotY","currentCategory","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","clusterType","stackType","stackWrap","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","stackAxis","zeroSlot","childrenLength","createAnimation","_setAnimationOptions","_setChildrenAnimation","pointVisual","fromOptions","toOptions","labelFrom","_createLabel","labelTo","rangeBar","plotLimits","wrapData","seriesItem","bulletOptions","shape","targetSlot","targetValueSlot","targetSlotX","targetSlotY","set","bodyVisual","endCaps","linePoints","valueBox","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","boxSize","createDefaultVisual","lineOptions","moveTo","lineTo","seriesAxes","marker","markerBorder","markerBox","_childBox","noteTargetBox","reflowLabel","alignTo","defaultColor","shadow","getElement","halfSize","Rect","showTooltip","radius","Circle","segment","closed","visualPoints","fromPoints","close","renderSegments","sortedPoints","pointCount","lastSegment","_segments","sortPoints","seriesMissingValues","createSegment","_addSegment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","clipPath","root","getRoot","animationPoints","_setEnd","segments","topRight","bottomRight","setX","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","revDir","curveProcessor","curve","process","firstPoint","lastPoint","valueAxisLineBox","categoryAxisLineBox","stackPoints","_linePoints","createArea","createLine","lineCap","prevSegment","_gapStackPoints","stackPoint","_stackPoints","currentSeriesIx","gapStackPoint","startIdx","endIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","missingValue","_maxSize","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","mid","ocSlot","lhSlot","open","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","oSlot","cSlot","oPoints","cPoints","lhPoints","lower","q1","median","q3","filterOutliers","outliers","mean","extremes","whiskerSlot","boxSlot","medianSlot","meanSlot","reflowBoxSlot","reflowWhiskerSlot","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","markersBorder","outlierValue","outerFence","reflowOutliers","sector","animationDelay","lp","labelWidth","labelHeight","labelsOptions","labelsDistance","angle","middle","expand","startAngle","innerRadius","ir","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","createRing","adjacentBox","createLegendItem","itemLabelOptions","pointVisible","legendOptions","inactiveItems","inactiveItemsLabels","legendItems","connectors","anglePerValue","explode","currentAngle","colorsCount","evalSegmentOptions","segmentOptions","seriesConfig","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","seriesConfigs","boxCenter","leftSideLabels","rightSideLabels","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","firstBox","lr","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelDistance","boxY","hAlignLabel","connectorLine","connectorsColor","centerPoint","sr","crossing","_connectorLines","seriesId","pointInCircle","originalX","direction","cx","cy","holeSize","totalSize","seriesWithoutSize","currentSize","createSegments","summary","totalCategories","fromBox","toBox","guid","createTitle","chartContainer","titleOptions","appendAxis","appendChart","empty","removeAxis","removeChart","pop","visualStyle","createGridLines","stackRoot","clipRoot","gridLines","j","altAxis","allAxes","vGridLines","hGridLines","createGradient","chartsBox","axisValueField","shouldClip","_clipBox","clipRect","unclipLabels","initSeries","createPanes","createCrosshairs","setTitle","currentPane","paneOptions","panesLength","paneIndex","currentCrosshair","crosshair","removeCrosshairs","matchingPane","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","groupAxes","paneAxes","paneIx","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","crossingAxes","valuesToAdd","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slot","slotEdge","targetEdge","alignAxes","anchorCrossings","paneId","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","overflowY","shrinked","fitAxes","paneBox","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","remainingHeight","remainingPanes","autoHeightPanes","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","bg","_bgVisual","MultiPath","paneByPoint","_dispatchEvent","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","reset","paneSeries","visibleSeries","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","aggregateSeries","filterSeries","minCategory","outOfRangePoints","_outOfRangeMinPoint","_outOfRangeMaxPoint","aggregator","outOfRangeMinCategory","outOfRangeMaxCategory","srcData","srcPoints","aggregatorSeries","outOfRangeMinIdx","outOfRangeMaxIdx","aggregatePoints","categoriesToAdd","update","grep","defaultPaneName","stackableChartOptions","axisSeries","unique","categoryAxes","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","_deferLabels","isJustified","axisType","defaultAxisRange","tracker","defaultRange","query","roundToMajorUnit","eventType","pointPane","updateAxisOptions","axesOptions","chartAxisRanges","chartRange","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","createPieChart","pieChart","createDonutChart","donutChart","_points","hasHighlight","toggleHandler","toggle","mobileScrollerSelector","padding-top","padding-right","padding-bottom","padding-left","attr","_mobileScroller","_clearShowTimeout","remove","_offset","_ensureElement","stop","animate","showTimeout","_padding","_chartPadding","_measure","chartPadding","chartOffset","zoomLevel","viewport","pageYOffset","documentElement","pageXOffset","movable","_fit","outerHeight","outerWidth","setStyle","pointColor","percBrightness","toggleClass","backgroundColor","borderWidth","_hideElement","appendTo","contains","fadeOut","always","_pointContent","tooltipTemplate","xLow","xHigh","yLow","yHigh","_pointAnchor","viewPortSize","html","sharedTemplate","categoryFormat","_content","_slotAnchor","hCenter","categoryText","stickyMode","moveLine","getBox","dim","axisLineBox","getAnchor","halfWidth","halfHeight","bottomLeft","topLeft","sumOrNull","avg","aggregates","getValueAxis","selectorPrefix","_dateAxis","find","leftMask","rightMask","leftHandle","rightHandle","_index","cssText","userEvents","stopPropagation","press","_press","add","removeClass","_state","_rangeEventArgs","_value","moveTarget","parents","handle","oldRange","is","p0","touches","rightClick","which","_slot","leftMaskWidth","rightMaskWidth","zDir","lock","_active","_panAxes","updatedAxes","_marquee","zoomPane","elementOffset","_zoomPane","_elementOffset","_zoomPaneClipBox","selectionPosition","_selectionPosition","_updateAxisRanges","initialDelta","defaultAggregates","fieldAggregate","sa","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","srcValues","_bindPoints","firstDataItem","_bindField","_axis","easeOutElastic","asin","sin","plugin","errorLow","errorHigh"],"mappings":"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jZ,GACAiB,GACAqC,GACA6D,GACAvH,GACAoH,KACAva,KACAD,GACAwU,GACAqD,GACApC,GACAC,KAEJnM,GAAalS,QAAQo1B,UACjBnU,GACAD,KAEApC,GACAgE,KAEAja,GACAwU,GACAqD,KAEJtO,GAAalS,QAAQo1B,UACjB7R,GACAvE,KACApW,KACAD,GACAwU,GACAqD,GACA0B,KAEJ9c,EAAkBpF,QAAQo1B,UACtBjZ,GACAiB,GACAqC,GACA6D,GACAvH,GACAoH,GACAI,GACAvE,KAEAhpB,MAAO6pB,GACPnlB,MAAOikB,GACP6mB,SAAU7mB,GACV43C,SAAUz2C,GACV02C,UAAW32C,KAEfza,EAAkBpF,QAAQo1B,UACtBnU,GACAD,KAEA6c,KAAM/d,GACNge,GAAIje,GACJnlB,MAAOikB,GACP6mB,SAAU7mB,KAEdzM,GAAalS,QAAQo1B,UACjB9T,GACAC,GACA5E,KAEA9T,GACAC,KAEAqU,GACAqD,GACAlC,GACAC,GACAC,GACAC,KAEJvM,GAAalS,QAAQo1B,UAAUzY,KAC3B9T,GACAC,GACA,SAEAqU,GACAxU,GACA6X,KAEJtO,GAAalS,QAAQo1B,UACjBvY,GACA4D,KAEA,OACA,OACA,MACA,UAEA9X,GACAwU,GACA,YACAqD,KAEJpb,EAAkBpF,QAAQo1B,UACtBvY,GACA4D,KAEA+3B,KAAM34B,GACNxR,KAAMwR,GACNzR,IAAK0R,GACLmyB,MAAOpyB,GACPnlB,MAAOikB,GACP26B,UAAW36B,GACX6mB,SAAU7mB,KAEdzM,GAAalS,QAAQo1B,UACjB1Y,GACA0G,KAEA,QACA,KACA,SACA,KACA,QACA,OACA,aAEAza,GACAwU,GACAqD,KAEJpb,EAAkBpF,QAAQo1B,UACtB1Y,GACA0G,KAEAw2B,MAAO/5B,GACPg6B,GAAIh6B,GACJi6B,OAAQj6B,GACRk6B,GAAIl6B,GACJ6iB,MAAO7iB,GACPq6B,KAAMr6B,GACNo6B,SAAUt7B,GACVjkB,MAAOikB,GACP6mB,SAAU7mB,KAEdzM,GAAalS,QAAQo1B,UACjBxY,GACAyG,KAEA,UACA,WAEA1a,GACAwU,GACA,kBACAqD,KAEJpb,EAAkBpF,QAAQo1B,UACtBxY,GACAyG,KAEArjB,QAAS6f,GACTjO,OAAQiO,GACRnlB,MAAOikB,GACP6mB,SAAU7mB,KAEdzM,GAAalS,QAAQo1B,UACjBzU,GACA5C,KACAnV,KACAD,GACAwU,GACA,UACA,kBACA,YAEJ1e,GAAWS,IACP6kB,sBAAuBA,GACvB1K,WAAYA,GACZrC,UAAWA,GACXD,YAAaA,GACb0B,sBAAuBA,GACvBlD,IAAKA,GACLK,SAAUA,GACVhB,SAAUA,GACVyC,YAAaA,GACbrB,OAAQA,GACRD,YAAaA,GACbwB,iBAAkBA,GAClBD,YAAaA,GACb3B,iBAAkBA,GAClBQ,oBAAqBA,GACrBqC,oBAAqBA,GACrBxD,aAAcA,GACd2E,UAAWA,GACXtB,eAAgBA,GAChB1B,cAAeA,GACfxB,cAAeA,GACfgE,UAAWA,GACXC,iBAAkBA,GAClBnE,iBAAkBA,GAClBC,cAAeA,GACf9P,kBAAmBA,EACnB6S,WAAYA,GACZW,cAAeA,GACfZ,aAAcA,GACd9B,aAAcA,GACdR,qBAAsBA,GACtBqD,UAAWA,GACXG,cAAeA,GACfnE,OAAQA,GACRF,WAAYA,GACZC,aAAcA,GACd4B,UAAWA,GACXL,UAAWA,GACXE,YAAaA,GACb6B,KAAMA,GACNS,aAAcA,GACdd,SAAUA,GACVD,cAAeA,GACfa,YAAaA,GACbd,WAAYA,GACZS,aAAcA,GACdC,oBAAqBA,GACrB5D,gBAAiBA,GACjBU,iBAAkBA,GAClBQ,SAAUA,GACVC,cAAeA,GACfqB,aAAcA,GACdf,gBAAiBA,GACjBgB,iBAAkBA,GAClBkC,UAAWA,GACXI,iBAAkBA,GAClBxH,aAAcA,GACd6I,aAAcA,GACdlE,cAAeA,GACfI,kBAAmBA,GACnB7B,UAAWA,GACX6D,QAASA,GACTxB,UAAWA,GACXD,UAAWA,GACXU,eAAgBA,GAChBC,iBAAkBA,GAClBO,WAAYA,GACZe,eAAgBA,GAChBD,cAAeA,GACfD,SAAUA,GACVlP,YAAaA,EACboE,WAAYA,EACZjB,aAAcA,EACd/D,gBAAiBA,EACjB4C,SAAUA,EACViC,aAAcA,EACdxB,SAAUA,EACV4E,WAAYA,EACZlB,QAASA,EACTxZ,SAAUA,EACVoV,UAAWA,EACXkE,mBAAoBA,EACpB8C,SAAUA,EACVnF,aAAcA,EACda,YAAaA,EACbiD,YAAaA,EACbxE,kBAAmBA,EACnBmD,UAAWA,EACXzF,YAAaA,EACbmG,UAAWA,EACXpH,OAAQA,EACRI,OAAQA,EACR0G,YAAaA,KAEnBtS,OAAOhF,MAAMyJ,QACRzE,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                e = e || {};\n                e.element = this;\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function () {\n                this.trigger('geometryChange', { element: this });\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'kendo.color',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [\n            {\n                id: 'dataviz.chart-polar',\n                name: 'Polar & Radar',\n                description: 'Support for Polar and Radar charts.',\n                depends: ['dataviz.chart.polar'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-funnel',\n                name: 'Funnel chart',\n                description: 'Support for Funnel chart.',\n                depends: ['dataviz.chart.funnel'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var each = $.each, isArray = $.isArray, isPlainObject = $.isPlainObject, map = $.map, math = Math, noop = $.noop, extend = $.extend, proxy = $.proxy, kendo = window.kendo, Class = kendo.Class, Observable = kendo.Observable, DataSource = kendo.data.DataSource, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, getter = kendo.getter, isFn = kendo.isFunction, template = kendo.template, dataviz = kendo.dataviz, Axis = dataviz.Axis, AxisLabel = dataviz.AxisLabel, Box2D = dataviz.Box2D, BoxElement = dataviz.BoxElement, ChartElement = dataviz.ChartElement, Color = kendo.drawing.Color, CurveProcessor = dataviz.CurveProcessor, FloatElement = dataviz.FloatElement, Note = dataviz.Note, LogarithmicAxis = dataviz.LogarithmicAxis, NumericAxis = dataviz.NumericAxis, Point2D = dataviz.Point2D, RootElement = dataviz.RootElement, Ring = dataviz.Ring, ShapeElement = dataviz.ShapeElement, ShapeBuilder = dataviz.ShapeBuilder, TextBox = dataviz.TextBox, Title = dataviz.Title, alignPathToPixel = dataviz.alignPathToPixel, autoFormat = dataviz.autoFormat, dateComparer = dataviz.dateComparer, eventTargetElement = dataviz.eventTargetElement, getSpacing = dataviz.getSpacing, inArray = dataviz.inArray, interpolate = dataviz.interpolateValue, mwDelta = dataviz.mwDelta, round = dataviz.round, util = kendo.util, append = util.append, defined = util.defined, last = util.last, limitValue = util.limitValue, sparseArrayLimits = util.sparseArrayLimits, sparseArrayMin = util.sparseArrayMin, sparseArrayMax = util.sparseArrayMax, renderTemplate = util.renderTemplate, valueOrDefault = util.valueOrDefault, geom = dataviz.geometry, draw = dataviz.drawing;\n        var NS = '.kendoChart', ABOVE = 'above', AREA = 'area', AUTO = 'auto', FIT = 'fit', AXIS_LABEL_CLICK = dataviz.AXIS_LABEL_CLICK, BAR = 'bar', BAR_ALIGN_MIN_WIDTH = 6, BAR_BORDER_BRIGHTNESS = 0.8, BELOW = 'below', BLACK = '#000', BOTH = 'both', BOTTOM = 'bottom', BOX_PLOT = 'boxPlot', BUBBLE = 'bubble', BULLET = 'bullet', CANDLESTICK = 'candlestick', CATEGORY = 'category', CENTER = 'center', CHANGE = 'change', CIRCLE = 'circle', CONTEXTMENU_NS = 'contextmenu' + NS, CLIP = dataviz.CLIP, COLOR = 'color', COLUMN = 'column', COORD_PRECISION = dataviz.COORD_PRECISION, CROSS = 'cross', CSS_PREFIX = 'k-', CUSTOM = 'custom', DATABOUND = 'dataBound', DATE = 'date', DAYS = 'days', DEFAULT_FONT = dataviz.DEFAULT_FONT, DEFAULT_HEIGHT = dataviz.DEFAULT_HEIGHT, DEFAULT_PRECISION = dataviz.DEFAULT_PRECISION, DEFAULT_WIDTH = dataviz.DEFAULT_WIDTH, DEFAULT_ERROR_BAR_WIDTH = 4, DONUT = 'donut', DONUT_SECTOR_ANIM_DELAY = 50, DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', ERROR_LOW_FIELD = 'errorLow', ERROR_HIGH_FIELD = 'errorHigh', X_ERROR_LOW_FIELD = 'xErrorLow', X_ERROR_HIGH_FIELD = 'xErrorHigh', Y_ERROR_LOW_FIELD = 'yErrorLow', Y_ERROR_HIGH_FIELD = 'yErrorHigh', FADEIN = 'fadeIn', FIRST = 'first', FROM = 'from', FUNNEL = 'funnel', GLASS = 'glass', HORIZONTAL = 'horizontal', HORIZONTAL_WATERFALL = 'horizontalWaterfall', HOURS = 'hours', INITIAL_ANIMATION_DURATION = dataviz.INITIAL_ANIMATION_DURATION, INSIDE_BASE = 'insideBase', INSIDE_END = 'insideEnd', INTERPOLATE = 'interpolate', LEAVE = 'leave', LEFT = 'left', LEGEND_ITEM_CLICK = 'legendItemClick', LEGEND_ITEM_HOVER = 'legendItemHover', LINE = 'line', LINE_MARKER_SIZE = 8, LINEAR = 'linear', LOGARITHMIC = 'log', MAX = 'max', MAX_EXPAND_DEPTH = 5, MAX_VALUE = Number.MAX_VALUE, MIN = 'min', MIN_VALUE = -Number.MAX_VALUE, MINUTES = 'minutes', MONTHS = 'months', MOUSELEAVE_NS = 'mouseleave' + NS, MOUSEMOVE_TRACKING = 'mousemove.tracking', MOUSEMOVE_NS = 'mousemove' + NS, MOUSEMOVE_DELAY = 20, MOUSEWHEEL_DELAY = 150, MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, NOTE_CLICK = dataviz.NOTE_CLICK, NOTE_HOVER = dataviz.NOTE_HOVER, NOTE_TEXT = 'noteText', OBJECT = 'object', OHLC = 'ohlc', OUTSIDE_END = 'outsideEnd', PIE = 'pie', PIE_SECTOR_ANIM_DELAY = 70, PLOT_AREA_CLICK = 'plotAreaClick', PLOT_AREA_HOVER = 'plotAreaHover', POINTER = 'pointer', RANGE_BAR = 'rangeBar', RANGE_COLUMN = 'rangeColumn', RENDER = 'render', RIGHT = 'right', ROUNDED_BEVEL = 'roundedBevel', ROUNDED_GLASS = 'roundedGlass', SCATTER = 'scatter', SCATTER_LINE = 'scatterLine', SECONDS = 'seconds', SELECT_START = 'selectStart', SELECT = 'select', SELECT_END = 'selectEnd', SERIES_CLICK = 'seriesClick', SERIES_HOVER = 'seriesHover', START_SCALE = 0.001, STEP = 'step', SMOOTH = 'smooth', STD_ERR = 'stderr', STD_DEV = 'stddev', STRING = 'string', SUMMARY_FIELD = 'summary', TIME_PER_SECOND = 1000, TIME_PER_MINUTE = 60 * TIME_PER_SECOND, TIME_PER_HOUR = 60 * TIME_PER_MINUTE, TIME_PER_DAY = 24 * TIME_PER_HOUR, TIME_PER_WEEK = 7 * TIME_PER_DAY, TIME_PER_MONTH = 31 * TIME_PER_DAY, TIME_PER_YEAR = 365 * TIME_PER_DAY, TIME_PER_UNIT = {\n                'years': TIME_PER_YEAR,\n                'months': TIME_PER_MONTH,\n                'weeks': TIME_PER_WEEK,\n                'days': TIME_PER_DAY,\n                'hours': TIME_PER_HOUR,\n                'minutes': TIME_PER_MINUTE,\n                'seconds': TIME_PER_SECOND\n            }, TO = 'to', TOP = 'top', TOOLTIP_ANIMATION_DURATION = 150, TOOLTIP_OFFSET = 5, TOOLTIP_SHOW_DELAY = 100, TOOLTIP_HIDE_DELAY = 100, TOOLTIP_INVERSE = 'chart-tooltip-inverse', VALUE = 'value', VERTICAL_AREA = 'verticalArea', VERTICAL_BOX_PLOT = 'verticalBoxPlot', VERTICAL_BULLET = 'verticalBullet', VERTICAL_LINE = 'verticalLine', WATERFALL = 'waterfall', WEEKS = 'weeks', WHITE = '#fff', X = 'x', Y = 'y', YEARS = 'years', ZERO = 'zero', ZOOM_ACCELERATION = 3, ZOOM_START = 'zoomStart', ZOOM = 'zoom', ZOOM_END = 'zoomEnd', BASE_UNITS = [\n                SECONDS,\n                MINUTES,\n                HOURS,\n                DAYS,\n                WEEKS,\n                MONTHS,\n                YEARS\n            ], EQUALLY_SPACED_SERIES = [\n                BAR,\n                COLUMN,\n                OHLC,\n                CANDLESTICK,\n                BOX_PLOT,\n                VERTICAL_BOX_PLOT,\n                BULLET,\n                RANGE_COLUMN,\n                RANGE_BAR,\n                WATERFALL,\n                HORIZONTAL_WATERFALL\n            ];\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var chart = this, options, dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(chart, element);\n                chart.element.addClass(CSS_PREFIX + this.options.name.toLowerCase()).css('position', 'relative');\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    userOptions.dataSource = undefined;\n                }\n                options = deepExtend({}, chart.options, userOptions);\n                chart._originalOptions = deepExtend({}, options);\n                chart._initTheme(options);\n                chart._initSurface();\n                chart.bind(chart.events, chart.options);\n                chart.wrapper = chart.element;\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                chart._initDataSource(userOptions);\n                kendo.notify(chart, dataviz.ui);\n            },\n            _initTheme: function (options) {\n                var chart = this, themes = dataviz.ui.themes || {}, themeName = options.theme, theme = themes[themeName] || themes[themeName.toLowerCase()], themeOptions = themeName && theme ? theme.chart : {}, seriesCopies = [], series = options.series || [], i;\n                for (i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                chart._applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    options.seriesColors = undefined;\n                }\n                chart.options = deepExtend({}, themeOptions, options);\n                applySeriesColors(chart.options);\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind(CHANGE, chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                preloadFonts(userOptions, function () {\n                    chart._redraw();\n                    chart._attachEvents();\n                });\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            items: function () {\n                return $();\n            },\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {\n                    visible: true,\n                    labels: {}\n                },\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {\n                    type: COLUMN,\n                    data: [],\n                    highlight: { visible: true },\n                    labels: {},\n                    negativeValues: { visible: false }\n                },\n                series: [],\n                seriesColors: null,\n                tooltip: { visible: false },\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            refresh: function () {\n                var chart = this;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            _resize: function () {\n                var t = this.options.transitions;\n                this.options.transitions = false;\n                this._redraw();\n                this.options.transitions = t;\n            },\n            redraw: function (paneName) {\n                var chart = this, pane, plotArea;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                if (paneName) {\n                    plotArea = chart._model._plotArea;\n                    pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    chart._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var highlight = this._highlight;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var seriesName, categoryName, points;\n                if (kendo.isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    if (isPlainObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        highlight.togglePointHighlight(points[idx], show);\n                    }\n                }\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    wrap.css('width', chartArea.width);\n                }\n                if (chartArea.height) {\n                    wrap.css('height', chartArea.height);\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = draw.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var chart = this, model = chart._getModel(), view;\n                chart._destroyView();\n                chart._model = model;\n                chart._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                chart._initSurface();\n                chart.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                chart._tooltip = chart._createTooltip();\n                chart._highlight = new Highlight(view);\n                chart._setupSelection();\n                chart._createPannable();\n                chart._createZoomSelection();\n                chart._createMousewheelZoom();\n                if (!chart._hasDataSource || chart._hasData || !chart.options.autoBind) {\n                    chart.trigger(RENDER);\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                var chart = this, options = chart.options;\n                return chart._plotArea instanceof CategoricalPlotArea && options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var chart = this, options = chart.options, element = chart.element, tooltip;\n                if (chart._sharedTooltip()) {\n                    tooltip = new SharedTooltip(element, chart._plotArea, options.tooltip);\n                } else {\n                    tooltip = new Tooltip(element, options.tooltip);\n                }\n                tooltip.bind(LEAVE, proxy(chart._tooltipleave, chart));\n                return tooltip;\n            },\n            _tooltipleave: function () {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            _getModel: function () {\n                var chart = this, options = chart.options, model = new RootElement(chart._modelOptions()), plotArea;\n                model.chart = chart;\n                Title.buildTitle(options.title, model);\n                plotArea = model._plotArea = chart._createPlotArea();\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var chart = this, options = chart.options, element = chart.element, height = math.floor(element.height()), width = math.floor(element.width());\n                chart._size = null;\n                return deepExtend({\n                    width: width || DEFAULT_WIDTH,\n                    height: height || DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var chart = this, options = chart.options;\n                return PlotAreaFactory.current.create(skipSeries ? [] : options.series, options);\n            },\n            _setupSelection: function () {\n                var chart = this, plotArea = chart._plotArea, axes = plotArea.axes, selections = chart._selections = [], selection, i, axis, min, max, options;\n                if (!chart._selectStartHandler) {\n                    chart._selectStartHandler = proxy(chart._selectStart, chart);\n                    chart._selectHandler = proxy(chart._select, chart);\n                    chart._selectEndHandler = proxy(chart._selectEnd, chart);\n                }\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        min = 0;\n                        max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        selection = new Selection(chart, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selection.bind(SELECT_START, chart._selectStartHandler);\n                        selection.bind(SELECT, chart._selectHandler);\n                        selection.bind(SELECT_END, chart._selectEndHandler);\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _attachEvents: function () {\n                var chart = this, element = chart.element, surface = chart.surface;\n                surface.bind('mouseenter', proxy(chart._mouseover, chart));\n                surface.bind('mouseleave', proxy(chart._mouseout, chart));\n                element.on(CONTEXTMENU_NS, proxy(chart._click, chart));\n                element.on(MOUSEWHEEL_NS, proxy(chart._mousewheel, chart));\n                element.on(MOUSELEAVE_NS, proxy(chart._mouseleave, chart));\n                chart._mousemove = kendo.throttle(proxy(chart._mousemove, chart), MOUSEMOVE_DELAY);\n                if (chart._shouldAttachMouseMove()) {\n                    element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n                if (kendo.UserEvents) {\n                    chart._userEvents = new kendo.UserEvents(element, {\n                        global: true,\n                        multiTouch: true,\n                        fastTap: true,\n                        tap: proxy(chart._tap, chart),\n                        start: proxy(chart._start, chart),\n                        move: proxy(chart._move, chart),\n                        end: proxy(chart._end, chart),\n                        gesturestart: proxy(chart._gesturestart, chart),\n                        gesturechange: proxy(chart._gesturechange, chart),\n                        gestureend: proxy(chart._gestureend, chart)\n                    });\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function () {\n                if (this._zooming) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var chart = this;\n                var mousewheelZoom = chart._mousewheelZoom;\n                if (mousewheelZoom) {\n                    e.preventDefault();\n                    var previousGestureDistance = chart._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = math.round(scaleDelta * 10);\n                        chart._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(chart._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                            if (!chart._zooming) {\n                                chart._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !chart.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var chart = this, events = chart._events, coords = chart._eventCoordinates(e);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (defined(events[DRAG_START] || events[DRAG] || events[DRAG_END])) {\n                    chart._startNavigation(e, coords, DRAG_START);\n                }\n                if (chart._pannable && chart._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                }\n                if (chart._zoomSelection) {\n                    if (chart._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var chart = this, state = chart._navState, pannable = chart._pannable, axes, ranges = {}, i, currentAxis, axisName, axis, delta;\n                if (pannable) {\n                    e.preventDefault();\n                    ranges = pannable.move(e);\n                    if (ranges && !chart.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    e.preventDefault();\n                    axes = state.axes;\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        axisName = currentAxis.options.name;\n                        if (axisName) {\n                            axis = currentAxis.options.vertical ? e.y : e.x;\n                            delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges;\n                    chart.trigger(DRAG, {\n                        axisRanges: ranges,\n                        originalEvent: e\n                    });\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                this._endNavigation(e, DRAG_END);\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n                if (this._pannable && this._pannable.end(e)) {\n                    this.surface.resumeTracking();\n                }\n            },\n            _mousewheel: function (e) {\n                var chart = this, origEvent = e.originalEvent, prevented, delta = mwDelta(e), totalDelta, state = chart._navState, axes, i, currentAxis, axisName, ranges = {}, mousewheelZoom = chart._mousewheelZoom, coords = chart._eventCoordinates(origEvent);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!chart._zooming) {\n                            chart._unsetActivePoint();\n                            chart.surface.suspendTracking();\n                            chart._zooming = true;\n                        }\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        args.axisRanges = ranges = mousewheelZoom.updateRanges(delta);\n                        if (ranges && !chart.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart.trigger(ZOOM_END, args);\n                            chart._zooming = false;\n                            if (chart.surface) {\n                                chart.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    if (!state) {\n                        prevented = chart._startNavigation(origEvent, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = chart._navState;\n                        }\n                    }\n                    if (state) {\n                        totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        axes = chart._navState.axes;\n                        for (i = 0; i < axes.length; i++) {\n                            currentAxis = axes[i];\n                            axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        chart.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var chart = this, plotArea = chart._model._plotArea, pane = plotArea.findPointPane(coords), axes = plotArea.axes.slice(0), prevented;\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                prevented = chart.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    chart._userEvents.cancel();\n                } else {\n                    chart._suppressHover = true;\n                    chart._unsetActivePoint();\n                    chart._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                var chart = this;\n                if (chart._navState) {\n                    chart.trigger(chartEvent, {\n                        axisRanges: chart._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    chart._suppressHover = false;\n                    chart._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var chartElement;\n                while (element && !chartElement) {\n                    chartElement = element.chartElement;\n                    element = element.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var chart = this, isTouch = defined((e.x || {}).client), clientX = isTouch ? e.x.client : e.clientX, clientY = isTouch ? e.y.client : e.clientY;\n                return chart._toModelCoordinates(clientX, clientY);\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element, offset = element.offset(), paddingLeft = parseInt(element.css('paddingLeft'), 10), paddingTop = parseInt(element.css('paddingTop'), 10), win = $(window);\n                return new Point2D(clientX - offset.left - paddingLeft + win.scrollLeft(), clientY - offset.top - paddingTop + win.scrollTop());\n            },\n            _tap: function (e) {\n                var chart = this, drawingElement = chart.surface.eventTarget(e), element = chart._drawingChartElement(drawingElement, e);\n                if (chart._activePoint === element) {\n                    chart._propagateClick(element, e);\n                } else {\n                    if (!chart._startHover(drawingElement, e)) {\n                        chart._unsetActivePoint();\n                    }\n                    chart._propagateClick(element, e);\n                }\n            },\n            _click: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                chart._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                while (element) {\n                    if (element.click) {\n                        element.click(this, e);\n                    }\n                    element = element.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chart = this, chartElement = chart._drawingChartElement(element, e), tooltip = chart._tooltip, highlight = chart._highlight, tooltipOptions = chart.options.tooltip, point;\n                if (chart._suppressHover || !highlight || highlight.isHighlighted(chartElement) || chart._sharedTooltip()) {\n                    return;\n                }\n                point = chart._drawingChartElement(element, e, function (element) {\n                    return element.hover;\n                });\n                if (point && !point.hover(chart, e)) {\n                    chart._activePoint = point;\n                    tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point.tooltipTracking;\n                }\n            },\n            _mouseover: function (e) {\n                var chart = this;\n                if (chart._startHover(e.element, e.originalEvent)) {\n                    $(document).on(MOUSEMOVE_TRACKING, proxy(chart._mouseMoveTracking, chart));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var chart = this, options = chart.options, tooltip = chart._tooltip, highlight = chart._highlight, coords = chart._eventCoordinates(e), point = chart._activePoint, tooltipOptions, seriesPoint;\n                if (chart._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint != point) {\n                            seriesPoint.hover(chart, e);\n                            chart._activePoint = seriesPoint;\n                            tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    $(document).off(MOUSEMOVE_TRACKING);\n                    chart._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                this._plotArea.hover(this, e);\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs, i, current;\n                for (i = 0; i < crosshairs.length; i++) {\n                    current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var chart = this, options = chart.options, plotArea = chart._plotArea, categoryAxis = plotArea.categoryAxis, tooltip = chart._tooltip, tooltipOptions = options.tooltip, highlight = chart._highlight, index, points;\n                if (plotArea.box.containsPoint(coords)) {\n                    index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== chart._tooltipCategoryIx) {\n                        points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = $.map(points, function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        chart._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            _mouseleave: function (e) {\n                var chart = this, plotArea = chart._plotArea, tooltip = chart._tooltip, highlight = chart._highlight, target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length)) {\n                    chart._mousemove.cancel();\n                    plotArea.hideCrosshairs();\n                    highlight.hide();\n                    setTimeout(proxy(tooltip.hide, tooltip), TOOLTIP_HIDE_DELAY);\n                    chart._tooltipCategoryIx = null;\n                }\n            },\n            _unsetActivePoint: function () {\n                var chart = this, tooltip = chart._tooltip, highlight = chart._highlight;\n                chart._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _onDataChanged: function () {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], currentSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        append(processedSeries, groupSeries(currentSeries, data));\n                    } else {\n                        processedSeries.push(currentSeries || []);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart._hasData = true;\n                chart._deferRedraw();\n            },\n            _deferRedraw: function () {\n                var chart = this;\n                if (kendo.support.vml) {\n                    chart._clearRedrawTimeout();\n                    chart._redrawTimeout = setTimeout(function () {\n                        if (!chart.surface) {\n                            return;\n                        }\n                        chart.trigger(DATABOUND);\n                        chart._redraw();\n                    }, 0);\n                } else {\n                    chart.trigger(DATABOUND);\n                    chart._redraw();\n                }\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else {\n                    this._bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var chart = this, items = [], result, series = chart.options.series, seriesLength = series.length, seriesIx, s, onAxis, data, dataIx, dataLength, dataRow, category, uniqueCategories = {}, getFn, dateAxis;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    s = series[seriesIx];\n                    onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    data = s.data;\n                    dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        getFn = dateAxis ? getDateField : getField;\n                        for (dataIx = 0; dataIx < dataLength; dataIx++) {\n                            dataRow = data[dataIx];\n                            category = getFn(s.categoryField, dataRow);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dateComparer(a[0], b[0]);\n                        });\n                    }\n                    result = transpose(items);\n                    axis.categories = result[0];\n                    axis.dataItems = result[1];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], originalSeries = (chart._sourceSeries || [])[seriesIndex] || currentSeries, transitionsState, visible, point;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    point = originalSeries.data[pointIndex];\n                    if (!defined(point.visible)) {\n                        visible = false;\n                    } else {\n                        visible = !point.visible;\n                    }\n                    point.visible = visible;\n                } else {\n                    visible = !originalSeries.visible;\n                    originalSeries.visible = visible;\n                    currentSeries.visible = visible;\n                }\n                if (chart.options.transitions) {\n                    chart.options.transitions = false;\n                    transitionsState = true;\n                }\n                chart.redraw();\n                if (transitionsState) {\n                    chart.options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], index, items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    index = pointIndex;\n                } else {\n                    index = seriesIndex;\n                }\n                items = plotArea.pointsBySeriesIndex(index);\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                var chart = this;\n                var events = chart._events;\n                return chart._plotArea.crosshairs.length || chart._tooltip && chart._sharedTooltip() || defined(events[PLOT_AREA_HOVER]);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                options.dataSource = undefined;\n                clearMissingValues(chart._originalOptions, options);\n                chart._originalOptions = deepExtend(chart._originalOptions, options);\n                chart.options = deepExtend({}, chart._originalOptions);\n                chart._sourceSeries = null;\n                $(document).off(MOUSEMOVE_NS);\n                Widget.fn._setEvents.call(chart, options);\n                chart._initTheme(chart.options);\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                if (chart._shouldAttachMouseMove()) {\n                    chart.element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                $(document).off(MOUSEMOVE_TRACKING);\n                if (chart._userEvents) {\n                    chart._userEvents.destroy();\n                }\n                chart._destroyView();\n                chart.surface.destroy();\n                chart.surface = null;\n                chart._clearRedrawTimeout();\n                Widget.fn.destroy.call(chart);\n            },\n            _destroyView: function () {\n                var chart = this, model = chart._model, selections = chart._selections;\n                if (model) {\n                    model.destroy();\n                    chart._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                chart._unsetActivePoint();\n                if (chart._tooltip) {\n                    chart._tooltip.destroy();\n                }\n                if (chart._highlight) {\n                    chart._highlight.destroy();\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.destroy();\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options) {\n                var registry = this._registry, match = registry[0], i, entry, series;\n                for (i = 0; i < registry.length; i++) {\n                    entry = registry[i];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var binder = this, i, type;\n                valueFields = valueFields || [VALUE];\n                for (i = 0; i < seriesTypes.length; i++) {\n                    type = seriesTypes[i];\n                    binder._valueFields[type] = valueFields;\n                    binder._otherFields[type] = otherFields;\n                    binder._nullValue[type] = binder._makeValue(valueFields, null);\n                    binder._undefinedValue[type] = binder._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var binder = this, data = series.data, pointData = defined(item) ? item : data[pointIx], result = { valueFields: { value: pointData } }, fields, fieldData, srcValueFields, srcPointFields, valueFields = binder.valueFields(series), otherFields = binder._otherFields[series.type], value;\n                if (pointData === null) {\n                    value = binder._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = binder._undefinedValue[series.type];\n                } else if (isArray(pointData)) {\n                    fieldData = pointData.slice(valueFields.length);\n                    value = binder._bindFromArray(pointData, valueFields);\n                    fields = binder._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    srcPointFields = binder.sourceFields(series, otherFields);\n                    value = binder._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = binder._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {}, i, length = fields.length, fieldName;\n                for (i = 0; i < length; i++) {\n                    fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {}, i, length;\n                if (fields) {\n                    length = math.min(fields.length, array.length);\n                    for (i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                var value = {}, i, length, fieldName, srcFieldName;\n                if (fields) {\n                    length = fields.length;\n                    srcFields = srcFields || fields;\n                    for (i = 0; i < length; i++) {\n                        fieldName = fields[i];\n                        srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var i, length, fieldName, sourceFields, sourceFieldName;\n                if (canonicalFields) {\n                    length = canonicalFields.length;\n                    sourceFields = [];\n                    for (i = 0; i < length; i++) {\n                        fieldName = canonicalFields[i];\n                        sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                var barLabel = this;\n                ChartElement.fn.init.call(barLabel, options);\n                this.textBox = new TextBox(content, barLabel.options);\n                barLabel.append(this.textBox);\n            },\n            options: {\n                position: OUTSIDE_END,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                color: BLACK,\n                background: '',\n                border: {\n                    width: 1,\n                    color: ''\n                },\n                aboveAxis: true,\n                vertical: false,\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                zIndex: 2\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var barLabel = this, options = barLabel.options, vertical = options.vertical, aboveAxis = options.aboveAxis, text = barLabel.children[0], box = text.box, padding = text.options.padding;\n                text.options.align = vertical ? CENTER : LEFT;\n                text.options.vAlign = vertical ? TOP : CENTER;\n                if (options.position == INSIDE_END) {\n                    if (vertical) {\n                        text.options.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            text.options.vAlign = BOTTOM;\n                        }\n                    } else {\n                        text.options.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position == CENTER) {\n                    text.options.vAlign = CENTER;\n                    text.options.align = CENTER;\n                } else if (options.position == INSIDE_BASE) {\n                    if (vertical) {\n                        text.options.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        text.options.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position == OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        text.options.align = CENTER;\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (targetBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (targetBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(targetBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var barLabel = this, vertical = barLabel.options.vertical, field = vertical ? Y : X, start = field + '1', end = field + '2', text = barLabel.children[0], parentBox = barLabel.parent.box, targetBox;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    targetBox = text.paddingBox.clone();\n                    targetBox[start] = math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                var item = this;\n                BoxElement.fn.init.call(item, options);\n                item.createContainer();\n                item.createMarker();\n                item.createLabel();\n            },\n            createContainer: function () {\n                var item = this;\n                item.container = new FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                item.append(item.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var item = this, options = item.options, labelOptions = deepExtend({}, options.labels);\n                item.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                ChartElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = draw.Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                    widget._legendItemClick(args.seriesIndex, args.pointIndex);\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventTargetElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var that = this;\n                var options = that.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    that.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: that.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            that.createVisual();\n                            that.renderChildren();\n                            that.renderComplete();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    ChartElement.fn.renderVisual.call(that);\n                }\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            render: function () {\n                var legendItem, items = this.children;\n                var options = this.options;\n                var vertical = options.vertical;\n                this.visual = new draw.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < items.length; idx++) {\n                    legendItem = items[idx];\n                    legendItem.reflow(new Box2D());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box2D();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: noop\n        });\n        var Legend = ChartElement.extend({\n            init: function (options) {\n                var legend = this;\n                ChartElement.fn.init.call(legend, options);\n                if (!inArray(legend.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    legend.options.position = RIGHT;\n                }\n                legend.createContainer();\n                legend.createItems();\n            },\n            options: {\n                position: RIGHT,\n                items: [],\n                labels: { margin: { left: 6 } },\n                offsetX: 0,\n                offsetY: 0,\n                margin: getSpacing(5),\n                padding: getSpacing(5),\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                item: { cursor: POINTER },\n                spacing: 6,\n                background: '',\n                zIndex: 1,\n                markers: {\n                    border: { width: 1 },\n                    width: 7,\n                    height: 7,\n                    type: 'rect',\n                    align: LEFT,\n                    vAlign: CENTER\n                }\n            },\n            createContainer: function () {\n                var legend = this, options = legend.options, userAlign = options.align, position = options.position, align = position, vAlign = CENTER;\n                if (position == CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign == 'start') {\n                        align = LEFT;\n                    } else if (userAlign == 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign == 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign == 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                legend.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                legend.append(legend.container);\n            },\n            createItems: function () {\n                var legend = this, options = legend.options, items = options.items, count = items.length, vertical = legend.isVertical(), innerElement, i, item;\n                innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                });\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                for (i = 0; i < count; i++) {\n                    item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                legend.container.append(innerElement);\n            },\n            isVertical: function () {\n                var legend = this, options = legend.options, orientation = options.orientation, position = options.position, vertical = position == CUSTOM && orientation != HORIZONTAL || (defined(orientation) ? orientation != HORIZONTAL : inArray(position, [\n                        LEFT,\n                        RIGHT\n                    ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var legend = this, options = legend.options;\n                targetBox = targetBox.clone();\n                if (!legend.hasItems()) {\n                    legend.box = targetBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    legend.containerCustomReflow(targetBox);\n                    legend.box = targetBox;\n                } else {\n                    legend.containerReflow(targetBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var legend = this, options = legend.options, position = options.position, pos = position == TOP || position == BOTTOM ? X : Y, containerBox = targetBox.clone(), container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), alignTarget = targetBox.clone(), box;\n                if (position == LEFT || position == RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    legend.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                legend.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var legend = this, options = legend.options, offsetX = options.offsetX, offsetY = options.offsetY, container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(Box2D(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var CategoryAxis = Axis.extend({\n            init: function (options) {\n                var axis = this;\n                options = options || {};\n                this._initFields();\n                this._initCategories(options);\n                Axis.fn.init.call(axis, options);\n            },\n            _initFields: function () {\n                this._ticks = {};\n                this.outOfRangeMin = 0;\n                this.outOfRangeMax = 0;\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? math.floor(options.min) : 0;\n                    var max = definedMax ? options.justified ? math.floor(options.max) + 1 : math.ceil(options.max) : categories.length;\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            options: {\n                type: CATEGORY,\n                categories: [],\n                vertical: false,\n                majorGridLines: {\n                    visible: false,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { zIndex: 1 },\n                justified: false\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var range = this.rangeIndices();\n                var min = range.min;\n                var max = range.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var axis = this, options = axis.options, vertical = options.vertical, lineBox = axis.lineBox(), reverse = options.reverse, scale = axis.getScale(), range = axis.rangeIndices(), min = range.min, max = range.max, current = min % 1 !== 0 ? math.floor(min / 1) + stepSize : min, pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)], positions = [];\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var index = label.index;\n                var range = this.rangeIndices();\n                if (range.min > 0) {\n                    index = index - math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var box = this.box, labels = this.labels, valueAxis = this.options.vertical ? Y : X, start = box[valueAxis + 1], end = box[valueAxis + 2], firstLabel = labels[0], lastLabel = last(labels);\n                if (labels.length) {\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var axis = this, cache = axis._ticks, options = axis.options, range = axis.rangeIndices(), reverse = options.reverse, justified = options.justified, lineBox = axis.lineBox(), hash;\n                hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = axis.getTickPositions(1);\n                    cache.minorTicks = axis.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), min = range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)], slotBox = lineBox.clone(), p1, p2;\n                var singleSlot = !defined(to);\n                from = valueOrDefault(from, 0);\n                to = valueOrDefault(to, from);\n                to = math.max(to - 1, from);\n                to = math.max(from, to);\n                p1 = lineStart + (from - min) * scale;\n                p2 = lineStart + (to + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            pointCategoryIndex: function (point) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), startValue = reverse ? range.max : range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + 1], lineEnd = lineBox[valueAxis + 2], pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var size = pos - lineStart;\n                var value = size / scale;\n                value = startValue + value;\n                var diff = value % 1;\n                if (justified) {\n                    value = math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = indexOf(value, options.srcCategories || options.categories);\n                return index - math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = options.categories.length, scale = size / range, offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var totalRange = this.totalRange();\n                var totalMax = totalRange.max;\n                var totalMin = totalRange.min;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var axis = this, options = axis.options, range = options.categories.length, delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var justified = options.justified;\n                var range = this.totalRangeIndices(true);\n                var min = range.min;\n                var max = range.max;\n                var start = math.floor(min);\n                var skip;\n                if (!justified) {\n                    min = math.floor(min);\n                    max = math.ceil(max);\n                } else {\n                    min = math.ceil(min);\n                    max = math.floor(max);\n                }\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var axis = this, options = axis.options, dataItem = options.dataItems ? options.dataItems[index] : null, category = valueOrDefault(options.categories[index], ''), text = axis.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var categories = this.options.categories;\n                return categories.length && (categories.length > value && value >= 0);\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true), scale = this.getScale(), offset = round(delta / scale, DEFAULT_PRECISION), totalRange = this.totalRange(), min = range.min + offset, max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var axis = this, options = axis.options, reverse = options.reverse, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.totalRangeIndices(true), scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                return {\n                    min: math.min(min, max),\n                    max: math.max(min, max)\n                };\n            }\n        });\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (options) {\n                var axis = this, baseUnit, useDefault;\n                options = options || {};\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: toDate(options.categories),\n                    min: toDate(options.min),\n                    max: toDate(options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    baseUnit = (options.baseUnit || '').toLowerCase();\n                    useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = axis.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        axis.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    axis.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this._initFields();\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                labels: { dateFormats: DateLabelFormats },\n                autoBaseUnitSteps: {\n                    seconds: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    minutes: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    hours: [\n                        1,\n                        2,\n                        3\n                    ],\n                    days: [\n                        1,\n                        2,\n                        3\n                    ],\n                    weeks: [\n                        1,\n                        2\n                    ],\n                    months: [\n                        1,\n                        2,\n                        3,\n                        6\n                    ],\n                    years: [\n                        1,\n                        2,\n                        3,\n                        5,\n                        10,\n                        25,\n                        50\n                    ]\n                },\n                maxDateGroups: 10\n            },\n            shouldRenderNote: function (value) {\n                var axis = this, range = axis.range(), categories = axis.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return toDate(value);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / (range.max - range.min), offset = round(delta / scale, DEFAULT_PRECISION), from, to;\n                if (range.min && range.max) {\n                    from = addTicks(options.min || range.min, offset);\n                    to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var axis = this, rounds = math.abs(delta), range = axis.range(), from = range.min, to = range.max, step;\n                if (range.min && range.max) {\n                    while (rounds--) {\n                        range = dateDiff(from, to);\n                        step = math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    range = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return range;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories, count = defined(categories) ? categories.length : 0, categoryIx, cat, diff, minDiff = MAX_VALUE, lastCat, unit;\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    cat = categories[categoryIx];\n                    if (cat && lastCat) {\n                        diff = absoluteDateDiff(cat, lastCat);\n                        if (diff > 0) {\n                            minDiff = math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCat = cat;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categories = options.categories;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = math.floor(minIdx);\n                        maxIdx = options.justified ? math.floor(maxIdx) : math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = math.floor(range.min);\n                var max = math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = this.currentRange(), totalLimits = this.totalLimits(), min = range.min, max = range.max, scale = size / (max - min), offset = round(delta / scale, DEFAULT_PRECISION), panRange, from, to;\n                from = addTicks(min, offset);\n                to = addTicks(max, offset);\n                panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var currentRange = this.currentRange();\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var weekStartDay = options.weekStartDay;\n                var rangeMax = currentRange.max;\n                var rangeMin = currentRange.min;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit == FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var baseUnitIndex = indexOf(baseUnit, BASE_UNITS);\n                    var autoBaseUnitStep;\n                    var diff = dateDiff(max, min);\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== SECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (options) {\n                options = options || this.options;\n                var categories = options.categories, autoUnit = options.baseUnit === FIT, baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit, baseUnitStep = options.baseUnitStep || 1, stepOptions = {\n                        baseUnit: baseUnit,\n                        baseUnitStep: baseUnitStep,\n                        weekStartDay: options.weekStartDay\n                    }, categoryLimits = this._categoryRange(categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var axis = this, categoryLimits = this._categoryRange(options.categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max), autoUnit = options.baseUnit === FIT, autoUnitIx = 0, baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit, span = max - min, units = span / TIME_PER_UNIT[baseUnit], totalUnits = units, maxDateGroups = options.maxDateGroups || axis.options.maxDateGroups, autoBaseUnitSteps = deepExtend({}, axis.options.autoBaseUnitSteps, options.autoBaseUnitSteps), unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            _timeScale: function () {\n                var axis = this, range = axis.range(), options = axis.options, lineBox = axis.lineBox(), vertical = options.vertical, lineSize = vertical ? lineBox.height() : lineBox.width(), timeRange;\n                if (options.justified && options._collapse !== false) {\n                    var categoryLimits = this._categoryRange(options.categories);\n                    var maxCategory = toTime(categoryLimits.max);\n                    timeRange = toDate(maxCategory) - range.min;\n                } else {\n                    timeRange = range.max - range.min;\n                }\n                return lineSize / timeRange;\n            },\n            groupCategories: function (options) {\n                var axis = this, categories = options.categories, maxCategory = toDate(sparseArrayMax(categories)), baseUnit = options.baseUnit, baseUnitStep = options.baseUnitStep || 1, range = axis.range(options), max = range.max, date, nextDate, groups = [];\n                for (date = range.min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, options, upper, roundToNext) {\n                options = options || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? math.ceil(step) : math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                } else {\n                    return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options, dataItem = options.dataItems ? options.dataItems[index] : null, date = options.categories[index], baseUnit = options.baseUnit, visible = true, unitFormat = labelOptions.dateFormats[baseUnit];\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var axis = this;\n                var options = axis.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var axis = this;\n                if (typeof a === OBJECT) {\n                    a = axis.categoryIndex(a);\n                }\n                if (typeof b === OBJECT) {\n                    b = axis.categoryIndex(b);\n                }\n                return CategoryAxis.fn.getSlot.call(axis, a, b, limit);\n            }\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options) {\n                var axis = this;\n                options = options || {};\n                deepExtend(options, {\n                    min: toDate(options.min),\n                    max: toDate(options.max),\n                    axisCrossingValue: toDate(options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = axis.applyDefaults(toDate(seriesMin), toDate(seriesMax), options);\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                majorGridLines: {\n                    visible: true,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { dateFormats: DateLabelFormats }\n            },\n            applyDefaults: function (seriesMin, seriesMax, options) {\n                var axis = this, min = options.min || seriesMin, max = options.max || seriesMax, baseUnit = options.baseUnit || (max && min ? axis.timeUnits(absoluteDateDiff(max, min)) : HOURS), baseUnitTime = TIME_PER_UNIT[baseUnit], autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max), autoMax = ceilDate(toTime(max) + 1, baseUnit), userMajorUnit = options.majorUnit ? options.majorUnit : undefined, majorUnit = userMajorUnit || dataviz.ceil(dataviz.autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime, actualUnits = duration(autoMin, autoMax, baseUnit), totalUnits = dataviz.ceil(actualUnits, majorUnit), unitsToAdd = totalUnits - actualUnits, head = math.floor(unitsToAdd / 2), tail = unitsToAdd - head;\n                if (!options.baseUnit) {\n                    delete options.baseUnit;\n                }\n                options.baseUnit = options.baseUnit || baseUnit;\n                options.min = options.min || addDuration(autoMin, -head, baseUnit);\n                options.max = options.max || addDuration(autoMax, tail, baseUnit);\n                options.minorUnit = options.minorUnit || majorUnit / 5;\n                options.majorUnit = majorUnit;\n                this.totalMin = toTime(floorDate(toTime(seriesMin) - 1, baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(seriesMax) + 1, baseUnit));\n                return options;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.fn.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.fn.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            timeUnits: function (delta) {\n                var unit = HOURS;\n                if (delta >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (delta >= TIME_PER_MONTH) {\n                    unit = MONTHS;\n                } else if (delta >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (delta >= TIME_PER_DAY) {\n                    unit = DAYS;\n                }\n                return unit;\n            },\n            translateRange: function (delta, exact) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / dateDiff(range.max, range.min), offset = round(delta / scale, DEFAULT_PRECISION), from = addTicks(options.min, offset), to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var axis = this, options = axis.options, rounds = math.abs(delta), from = options.min, to = options.max, range, step;\n                while (rounds--) {\n                    range = dateDiff(from, to);\n                    step = math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = math.min(startValue, endValue);\n                var max = math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        var ClusterLayout = ChartElement.extend({\n            options: {\n                vertical: false,\n                gap: 0,\n                spacing: 0\n            },\n            reflow: function (box) {\n                var cluster = this, options = cluster.options, vertical = options.vertical, axis = vertical ? Y : X, children = cluster.children, gap = options.gap, spacing = options.spacing, count = children.length, slots = count + gap + spacing * (count - 1), slotSize = (vertical ? box.height() : box.width()) / slots, position = box[axis + 1] + slotSize * (gap / 2), childBox, i;\n                for (i = 0; i < count; i++) {\n                    childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        var StackWrap = ChartElement.extend({\n            options: { vertical: true },\n            reflow: function (targetBox) {\n                var options = this.options, vertical = options.vertical, positionAxis = vertical ? X : Y, children = this.children, box = this.box = new Box2D(), childrenCount = children.length, i;\n                for (i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i], childBox;\n                    if (currentChild.visible !== false) {\n                        childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventTargetElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var element = this, options = element.options.notes, text = element.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    element.note = new Note(element.value, text, element.dataItem, element.category, element.series, element.options.notes);\n                    element.append(element.note);\n                }\n            }\n        };\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                var bar = this;\n                ChartElement.fn.init.call(bar);\n                bar.options = options;\n                bar.color = options.color || WHITE;\n                bar.aboveAxis = valueOrDefault(bar.options.aboveAxis, true);\n                bar.value = value;\n            },\n            defaults: {\n                border: { width: 1 },\n                vertical: true,\n                overlay: { gradient: GLASS },\n                labels: {\n                    visible: false,\n                    format: '{0}'\n                },\n                opacity: 1,\n                notes: { label: {} }\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                } else {\n                    this._rendered = true;\n                }\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                var labelText;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, options.labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var bar = this, label = bar.label;\n                bar.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = bar.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (bar.note) {\n                    bar.note.reflow(targetBox);\n                }\n                if (bar.errorBars) {\n                    for (var i = 0; i < bar.errorBars.length; i++) {\n                        bar.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var bar = this;\n                var box = bar.box;\n                var options = bar.options;\n                var customVisual = options.visual;\n                if (bar.visible !== false) {\n                    ChartElement.fn.createVisual.call(bar);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: bar.category,\n                            dataItem: bar.dataItem,\n                            value: bar.value,\n                            sender: bar.getChart(),\n                            series: bar.series,\n                            percentage: bar.percentage,\n                            runningTotal: bar.runningTotal,\n                            total: bar.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                bar.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            bar.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        bar.createRect(bar.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = draw.Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    visual.append(this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = draw.Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var bar = this, options = bar.options, color = bar.color, border = options.border, borderColor = border.color, brightness = border._brightness || BAR_BORDER_BRIGHTNESS;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var bar = this, options = bar.options, box = bar.box, vertical = options.vertical, aboveAxis = bar.aboveAxis, clipBox = bar.owner.pane.clipBox() || box, x, y;\n                if (vertical) {\n                    x = math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    y = aboveAxis ? math.max(box.y1, clipBox.y1) : math.min(box.y2, clipBox.y2) - tooltipHeight;\n                } else {\n                    var x1 = math.max(box.x1, clipBox.x1), x2 = math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        x = aboveAxis ? x2 - tooltipWidth : x1;\n                        y = math.max(box.y1, clipBox.y1) - tooltipHeight - TOOLTIP_OFFSET;\n                    } else {\n                        x = aboveAxis ? x2 + TOOLTIP_OFFSET : x1 - tooltipWidth - TOOLTIP_OFFSET;\n                        y = math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return new Point2D(x, y);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.fn, PointEventsMixin);\n        deepExtend(Bar.fn, NoteMixin);\n        var BarChartAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                var element = this.element;\n                var options = this.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new geom.Point(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(geom.transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = interpolate(this.fromScale.x, 1, pos);\n                var scaleY = interpolate(this.fromScale.y, 1, pos);\n                this.element.transform(geom.transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                draw.Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR, BarChartAnimation);\n        var FadeInAnimation = draw.Animation.extend({\n            options: {\n                duration: 200,\n                easing: LINEAR\n            },\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        draw.AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var ErrorRangeCalculator = function (errorValue, series, field) {\n            var that = this;\n            that.initGlobalRanges(errorValue, series, field);\n        };\n        ErrorRangeCalculator.prototype = ErrorRangeCalculator.fn = {\n            percentRegex: /percent(?:\\w*)\\((\\d+)\\)/,\n            standardDeviationRegex: new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$'),\n            initGlobalRanges: function (errorValue, series, field) {\n                var that = this, data = series.data, deviationMatch = that.standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var average = that.getAverage(data), deviation = that.getStandardDeviation(data, average, false), multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1, errorRange = {\n                            low: average.value - deviation * multiple,\n                            high: average.value + deviation * multiple\n                        };\n                    that.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var standardError = that.getStandardError(data, that.getAverage(data));\n                    that.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data, binder = SeriesBinder.current, valueFields = binder.valueFields(series), item = defined(data[0]) ? data[0] : {}, idx, srcValueFields, valueGetter;\n                if (isArray(item)) {\n                    idx = field ? indexOf(field, valueFields) : 0;\n                    valueGetter = getter('[' + idx + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[indexOf(field, valueFields)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var that = this, low, high, value;\n                if (!defined(errorValue)) {\n                    return;\n                }\n                if (that.globalRange) {\n                    return that.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = that.percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - math.abs(percentValue);\n                    high = pointValue + math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var squareDifferenceSum = 0, length = data.length, total = isSample ? average.count - 1 : average.count, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += math.pow(value - average.value, 2);\n                    }\n                }\n                return math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var sum = 0, count = 0, length = data.length, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        };\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                chart.valueAxisRanges = {};\n                chart.points = [];\n                chart.categoryPoints = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                invertAxes: false,\n                isStacked: false,\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    var categorySum = 0;\n                    var otherValues = [];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += math.abs(other.value);\n                                otherValues.push(math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var categoryIx = point.categoryIx;\n                var categoryPts = this.categoryPoints[categoryIx];\n                if (this.options.isStacked) {\n                    startValue = startValue || 0;\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this.options.isStacked100) {\n                                plotValue = math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPts = this.categoryPoints[i];\n                    if (!categoryPts) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPts.length; pIx++) {\n                        var point = categoryPts[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = math.max(max, to);\n                                    min = math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var chart = this;\n                var chartSeries = chart.options.series;\n                var isStacked = chart.options.isStacked;\n                var limits;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        limits = limitsCache[key];\n                        if (!limits) {\n                            limits = chart.stackLimits(axisName, series.stack);\n                            var errorTotals = chart.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = math.min(limits.min, sparseArrayMin(errorTotals.negative));\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = math.max(limits.max, sparseArrayMax(errorTotals.positive));\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            chart.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var chart = this, value = point.value, series = point.series, seriesIx = point.seriesIx, errorBars = point.options.errorBars, errorRange, lowValue = data.fields[ERROR_LOW_FIELD], highValue = data.fields[ERROR_HIGH_FIELD];\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    chart.seriesErrorRanges = chart.seriesErrorRanges || [];\n                    chart.seriesErrorRanges[seriesIx] = chart.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = chart.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    chart.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var chart = this, series = point.series, low = point.low, high = point.high, isVertical = !chart.options.invertAxes, options = point.options.errorBars, errorBar, stackedErrorRange;\n                if (chart.options.isStacked) {\n                    stackedErrorRange = chart.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    chart.updateRange({ value: low }, fields);\n                    chart.updateRange({ value: high }, fields);\n                }\n                errorBar = new CategoricalErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var chart = this, plotValue = chart.plotRange(point, 0)[1] - point.value, low = point.low + plotValue, high = point.high + plotValue;\n                chart.errorTotals = chart.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    chart.errorTotals.negative[categoryIx] = math.min(chart.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    chart.errorTotals.positive[categoryIx] = math.max(chart.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = chart.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    chart.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = chart.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = chart;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    chart.addErrorBar(point, data, categoryIx);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                chart.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return options;\n            },\n            updateRange: function (data, fields) {\n                var chart = this, axisName = fields.series.axis, value = data.value, axisRange = chart.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, value);\n                    axisRange.max = math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea, axisName = series.axis, axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var chart = this, pointIx = 0, categorySlots = chart.categorySlots = [], chartPoints = chart.points, categoryAxis = chart.categoryAxis, value, valueAxis, point;\n                chart.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    value = chart.pointValue(data);\n                    valueAxis = chart.seriesValueAxis(currentSeries);\n                    point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = chart.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = chart.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !chart.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = chart.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = chart.aboveAxis(point, valueAxis);\n                            if (chart.options.isStacked100) {\n                                point.percentage = chart.plotValue(point);\n                            }\n                            chart.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.reflowCategories(categorySlots);\n                chart.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis, options = valueAxis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var chart = this, options = chart.options, invertAxes = options.invertAxes, slotX = invertAxes ? valueSlot : categorySlot, slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, categories = chart.categoryAxis.options.categories || [], count = categoriesCount(series), categoryIx, seriesIx, pointData, currentCategory, currentSeries, seriesCount = series.length;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                        currentSeries = series[seriesIx];\n                        currentCategory = categories[categoryIx];\n                        pointData = this._bindPoint(currentSeries, seriesIx, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx\n                        });\n                    }\n                }\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMaxPoint', seriesIx, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        var BarChart = CategoricalChart.extend({\n            options: { animation: { type: BAR } },\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = chart.pointValue(data);\n                var options = chart.options;\n                var children = chart.children;\n                var isStacked = chart.options.isStacked;\n                var point;\n                var pointType = chart.pointType();\n                var pointOptions;\n                var cluster;\n                var clusterType = chart.clusterType();\n                pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position == OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new pointType(value, pointOptions);\n                point.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = chart.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var chart = this, options = chart.options, categorySlot = categoryAxis.getSlot(categoryIx), startValue = valueAxis.startValue(), stackAxis, zeroSlot;\n                if (options.isStacked) {\n                    zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                ChartElement.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var points = this.points;\n                var point, pointVisual;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (this.options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new geom.Point(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        var RangeBar = Bar.extend({\n            defaults: {\n                labels: { format: '{0} - {1}' },\n                tooltip: { format: '{1}' }\n            },\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = template(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var rangeBar = this, labelFrom = rangeBar.labelFrom, labelTo = rangeBar.labelTo;\n                rangeBar.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = rangeBar.value.from > rangeBar.value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = rangeBar.value.to > rangeBar.value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (rangeBar.note) {\n                    rangeBar.note.reflow(targetBox);\n                }\n            }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value.from, point.value.to);\n            },\n            plotLimits: CategoricalChart.fn.plotLimits,\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, from = value.from, to = value.to, axisRange = chart.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, from);\n                    axisRange.max = math.max(axisRange.max, from);\n                    axisRange.min = math.min(axisRange.min, to);\n                    axisRange.max = math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                chart.wrapData(options);\n                CategoricalChart.fn.init.call(chart, plotArea, options);\n            },\n            options: { animation: { type: BAR } },\n            wrapData: function (options) {\n                var series = options.series, i, data, seriesItem;\n                for (i = 0; i < series.length; i++) {\n                    seriesItem = series[i];\n                    data = seriesItem.data;\n                    if (data && !isArray(data[0]) && typeof data[0] != OBJECT) {\n                        seriesItem.data = [data];\n                    }\n                }\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var options = chart.options;\n                var children = chart.children;\n                var bullet;\n                var bulletOptions;\n                var cluster;\n                bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = chart.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, current = value.current, target = value.target, axisRange = chart.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min.apply(math, [\n                        axisRange.min,\n                        current,\n                        target\n                    ]);\n                    axisRange.max = math.max.apply(math, [\n                        axisRange.max,\n                        current,\n                        target\n                    ]);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var points = this.points;\n                var point;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    point.options.animation = this.options.animation;\n                    point.createAnimation();\n                }\n            },\n            _setAnimationOptions: BarChart.fn._setAnimationOptions\n        });\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                var bullet = this;\n                ChartElement.fn.init.call(bullet, options);\n                bullet.aboveAxis = bullet.options.aboveAxis;\n                bullet.color = options.color || WHITE;\n                bullet.value = value;\n            },\n            options: {\n                border: { width: 1 },\n                vertical: false,\n                opacity: 1,\n                target: {\n                    shape: '',\n                    border: {\n                        width: 0,\n                        color: 'green'\n                    },\n                    line: { width: 2 }\n                },\n                tooltip: { format: 'Current: {0}</br>Target: {1}' }\n            },\n            render: function () {\n                var bullet = this, options = bullet.options;\n                if (!bullet._rendered) {\n                    bullet._rendered = true;\n                    if (defined(bullet.value.target)) {\n                        bullet.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || bullet.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        bullet.target.value = this.value;\n                        bullet.target.dataItem = this.dataItem;\n                        bullet.target.series = this.series;\n                        bullet.append(bullet.target);\n                    }\n                    bullet.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var bullet = this, options = bullet.options, chart = bullet.owner, target = bullet.target, invertAxes = options.invertAxes, valueAxis = chart.seriesValueAxis(bullet.options), categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis), targetValueSlot = valueAxis.getSlot(bullet.value.target), targetSlotX = invertAxes ? targetValueSlot : categorySlot, targetSlotY = invertAxes ? categorySlot : targetValueSlot, targetSlot;\n                if (target) {\n                    targetSlot = new Box2D(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (bullet.note) {\n                    bullet.note.reflow(box);\n                }\n                bullet.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = draw.Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            tooltipAnchor: Bar.fn.tooltipAnchor,\n            createHighlight: function (style) {\n                return draw.Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                var bullet = this;\n                return bullet.owner.formatPointValue(bullet, format);\n            }\n        });\n        deepExtend(Bullet.fn, PointEventsMixin);\n        deepExtend(Bullet.fn, NoteMixin);\n        var Target = ShapeElement.extend();\n        deepExtend(Target.fn, PointEventsMixin);\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                var errorBar = this;\n                errorBar.low = low;\n                errorBar.high = high;\n                errorBar.isVertical = isVertical;\n                errorBar.chart = chart;\n                errorBar.series = series;\n                ChartElement.fn.init.call(errorBar, options);\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                endCaps: true,\n                line: { width: 1 },\n                zIndex: 1\n            },\n            getAxis: function () {\n            },\n            reflow: function (targetBox) {\n                var linePoints, errorBar = this, endCaps = errorBar.options.endCaps, isVertical = errorBar.isVertical, axis = errorBar.getAxis(), valueBox = axis.getSlot(errorBar.low, errorBar.high), centerBox = targetBox.center(), capsWidth = errorBar.getCapsWidth(targetBox, isVertical), capValue = isVertical ? centerBox.x : centerBox.y, capStart = capValue - capsWidth, capEnd = capValue + capsWidth;\n                if (isVertical) {\n                    linePoints = [\n                        Point2D(centerBox.x, valueBox.y1),\n                        Point2D(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(capStart, valueBox.y1), Point2D(capEnd, valueBox.y1), Point2D(capStart, valueBox.y2), Point2D(capEnd, valueBox.y2));\n                    }\n                    errorBar.box = Box2D(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        Point2D(valueBox.x1, centerBox.y),\n                        Point2D(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(valueBox.x1, capStart), Point2D(valueBox.x1, capEnd), Point2D(valueBox.x2, capStart), Point2D(valueBox.x2, capEnd));\n                    }\n                    errorBar.box = Box2D(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                errorBar.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height(), capsWidth = math.min(math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var that = this;\n                var options = that.options;\n                var visual = options.visual;\n                if (visual) {\n                    that.visual = visual({\n                        low: that.low,\n                        high: that.high,\n                        rect: that.box.toRect(),\n                        sender: that.getChart(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            that.createDefaultVisual();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    that.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var errorBar = this, options = errorBar.options, lineOptions = {\n                        stroke: {\n                            color: options.color,\n                            width: options.line.width,\n                            dashType: options.line.dashType\n                        }\n                    }, linePoints = errorBar.linePoints;\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new draw.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    this.visual.append(line);\n                }\n            }\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axis = chart.seriesValueAxis(series);\n                return axis;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axes = chart.seriesAxes(series), axis = errorBar.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point);\n                point.value = value;\n                point.options = options;\n                point.aboveAxis = valueOrDefault(point.options.aboveAxis, true);\n                point.tooltipTracking = true;\n            },\n            defaults: {\n                vertical: true,\n                markers: {\n                    visible: true,\n                    background: WHITE,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    border: { width: 2 },\n                    opacity: 1\n                },\n                labels: {\n                    visible: false,\n                    position: ABOVE,\n                    margin: getSpacing(3),\n                    padding: getSpacing(4),\n                    animation: {\n                        type: FADEIN,\n                        delay: INITIAL_ANIMATION_DURATION\n                    }\n                },\n                notes: { label: {} },\n                highlight: { markers: { border: {} } }\n            },\n            render: function () {\n                var point = this, options = point.options, markers = options.markers, labels = options.labels, labelText = point.value;\n                if (point._rendered) {\n                    return;\n                } else {\n                    point._rendered = true;\n                }\n                if (markers.visible && markers.size) {\n                    point.marker = point.createMarker();\n                    point.append(point.marker);\n                }\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: point.dataItem,\n                            category: point.category,\n                            value: point.value,\n                            percentage: point.percentage,\n                            series: point.series\n                        });\n                    } else if (labels.format) {\n                        labelText = point.formatValue(labels.format);\n                    }\n                    point.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    point.append(point.label);\n                }\n                point.createNote();\n                if (point.errorBar) {\n                    point.append(point.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: noop,\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var point = this, options = point.options, vertical = options.vertical, aboveAxis = point.aboveAxis, childBox, center;\n                point.render();\n                point.box = targetBox;\n                childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                point._childBox = childBox;\n                if (point.marker) {\n                    point.marker.reflow(childBox);\n                }\n                point.reflowLabel(childBox);\n                if (point.errorBars) {\n                    for (var i = 0; i < point.errorBars.length; i++) {\n                        point.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (point.note) {\n                    var noteTargetBox = point.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        center = noteTargetBox.center();\n                        noteTargetBox = Box2D(center.x, center.y, center.x, center.y);\n                    }\n                    point.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var point = this, options = point.options, label = point.label, anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(point.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var markers = highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual;\n                var rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geom.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var point = this, markerBox = point.markerBox(), aboveAxis = point.aboveAxis, x = markerBox.x2 + TOOLTIP_OFFSET, y = aboveAxis ? markerBox.y1 - tooltipHeight : markerBox.y2, clipBox = point.owner.pane.clipBox(), showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    return Point2D(x, y);\n                }\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        deepExtend(LinePoint.fn, PointEventsMixin);\n        deepExtend(LinePoint.fn, NoteMixin);\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                var point = this;\n                LinePoint.fn.init.call(point, value, options);\n                point.category = value.category;\n            },\n            defaults: {\n                labels: { position: CENTER },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    }\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = markers.size / 2 - border.width / 2;\n                var overlay = new draw.Circle(new geom.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                return overlay;\n            }\n        });\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.linePoints = linePoints;\n                segment.series = series;\n                segment.seriesIx = seriesIx;\n            },\n            options: { closed: false },\n            points: function (visualPoints) {\n                var segment = this, linePoints = segment.linePoints.concat(visualPoints || []), points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var options = this.options;\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = draw.Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                var segment = this, seriesIx = segment.seriesIx;\n                return segment.parent.getNearestPoint(coords.x, coords.y, seriesIx);\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, currentSeries, seriesIx, seriesCount = seriesPoints.length, sortedPoints, linePoints, point, pointIx, pointCount, lastSegment;\n                this._segments = [];\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    sortedPoints = chart.sortPoints(seriesPoints[seriesIx]);\n                    pointCount = sortedPoints.length;\n                    linePoints = [];\n                    for (pointIx = 0; pointIx < pointCount; pointIx++) {\n                        point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (chart.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues, assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point2D(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = draw.Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                var point;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n                chart.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields.value;\n                var missingValues = chart.seriesMissingValues(series);\n                var point;\n                var pointOptions;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this.plotValue(other);\n                        if (this.options.isStacked100) {\n                            plotValue = math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.fn, LineChartMixin, ClipAnimationMixin);\n        var ClipAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(interpolate(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        draw.AnimationFactory.current.register(CLIP, ClipAnimation);\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var segment = this, points;\n                points = segment.calculateStepPoints(segment.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(segment.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, categoryAxis = plotArea.seriesCategoryAxis(segment.series), isInterpolate = chart.seriesMissingValues(segment.series) === INTERPOLATE, length = points.length, reverse = categoryAxis.options.reverse, vertical = categoryAxis.options.vertical, dir = reverse ? 2 : 1, revDir = reverse ? 1 : 2, prevPoint, point, i, prevMarkerBoxCenter, markerBoxCenter, result = [];\n                for (i = 1; i < length; i++) {\n                    prevPoint = points[i - 1];\n                    point = points[i];\n                    prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new geom.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new geom.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new geom.Point(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new geom.Point(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new geom.Point(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new geom.Point(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new geom.Point(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new draw.Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var AreaSegmentMixin = {\n            points: function () {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, stackPoints = segment.stackPoints, points = segment._linePoints(stackPoints), pos = invertAxes ? X : Y, firstPoint, lastPoint;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!segment.stackPoints && points.length > 1) {\n                    firstPoint = points[0];\n                    lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new geom.Point(end, firstPoint.y));\n                        points.push(new geom.Point(end, lastPoint.y));\n                    } else {\n                        points.unshift(new geom.Point(firstPoint.x, end));\n                        points.push(new geom.Point(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = draw.Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = draw.Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: LineSegment.fn.points\n        });\n        deepExtend(AreaSegment.fn, AreaSegmentMixin);\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var chart = this, options = chart.options, isStacked = options.isStacked, stackPoints, pointType, style = (currentSeries.line || {}).style;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues != 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    var stackPoint, pointSlot;\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        stackPoint = stackPoints[idx];\n                        pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var endIdx = startIdx + linePoints.length;\n                var stackPoints = [];\n                var currentSeriesIx;\n                var point, gapStackPoint;\n                this._stackPoints = this._stackPoints || [];\n                for (var idx = startIdx; idx < endIdx; idx++) {\n                    currentSeriesIx = seriesIx;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][idx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        gapStackPoint = this._createGapStackPoint(idx);\n                        this._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var point;\n                while (seriesIdx > 0 && !point) {\n                    seriesIdx--;\n                    point = seriesPoints[seriesIdx][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[seriesIdx][categoryIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                var segment = this;\n                segment.prevSegment = prevSegment;\n                segment.isStacked = isStacked;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.fn.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new draw.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = $.map(prevStrokeSegments, function (segment) {\n                        return new draw.Segment(segment.anchor(), segment.controlOut(), segment.controlIn());\n                    }).reverse();\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new draw.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new draw.Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var segment = this, chart = segment.parent, prevSegment = segment.prevSegment, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, pos = invertAxes ? X : Y, segments = segment.strokeSegments(), firstPoint = segments[0].anchor(), lastPoint = last(segments).anchor();\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new draw.Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                StepLineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: StepLineSegment.fn.points\n        });\n        deepExtend(StepAreaSegment.fn, AreaSegmentMixin);\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.xAxisRanges = {};\n                chart.yAxisRanges = {};\n                chart.points = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                tooltip: { format: '{0}, {1}' },\n                labels: { format: '{0}, {1}' },\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            addErrorBar: function (point, field, fields) {\n                var errorRange, chart = this, value = point.value[field], valueErrorField = field + 'Value', lowField = field + 'ErrorLow', highField = field + 'ErrorHigh', seriesIx = fields.seriesIx, series = fields.series, errorBars = point.options.errorBars, lowValue = fields[lowField], highValue = fields[highField];\n                if (isNumber(value)) {\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        chart.seriesErrorRanges = chart.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        chart.seriesErrorRanges[field][seriesIx] = chart.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = chart.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        chart.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var chart = this, low = errorRange.low, high = errorRange.high, series = point.series, isVertical = field === Y, options = point.options.errorBars, item = {}, errorBar;\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                errorBar = new ScatterErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                chart.updateRange(item, series);\n                item[field] = high;\n                chart.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var chart = this, point, x = value.x, y = value.y, seriesIx = fields.seriesIx, series = this.options.series[seriesIx], missingValues = this.seriesMissingValues(series), seriesPoints = chart.seriesPoints[seriesIx];\n                if (!(hasValue(x) && hasValue(y))) {\n                    value = this.createMissingValue(value, missingValues);\n                }\n                if (value) {\n                    point = chart.createPoint(value, fields);\n                    if (point) {\n                        extend(point, fields);\n                        chart.addErrorBar(point, X, fields);\n                        chart.addErrorBar(point, Y, fields);\n                    }\n                    chart.updateRange(value, fields.series);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: noop,\n            updateRange: function (value, series) {\n                var chart = this, x = value.x, y = value.y, xAxisName = series.xAxis, yAxisName = series.yAxis, xAxisRange = chart.xAxisRanges[xAxisName], yAxisRange = chart.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = chart.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof x === STRING) {\n                        x = toDate(x);\n                    }\n                    xAxisRange.min = math.min(xAxisRange.min, x);\n                    xAxisRange.max = math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = chart.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof y === STRING) {\n                        y = toDate(y);\n                    }\n                    yAxisRange.min = math.min(yAxisRange.min, y);\n                    yAxisRange.max = math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'tempate',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return options;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, point;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var plotArea = this.plotArea, xAxisName = series.xAxis, xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX, yAxisName = series.yAxis, yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var chart = this, chartPoints = chart.points, pointIx = 0, point, seriesAxes, limit = !chart.options.clip;\n                chart.traverseDataPoints(function (value, fields) {\n                    point = chartPoints[pointIx++];\n                    seriesAxes = chart.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit), slotY = seriesAxes.y.getSlot(value.y, value.y, limit), pointSlot;\n                    if (point) {\n                        if (slotX && slotY) {\n                            pointSlot = chart.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, pointIx, seriesIx, currentSeries, currentSeriesPoints, pointData, value, fields;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        pointData = this._bindPoint(currentSeries, seriesIx, pointIx);\n                        value = pointData.valueFields;\n                        fields = pointData.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: chart\n                        }, fields));\n                    }\n                }\n            },\n            _bindPoint: CategoricalChart.fn._bindPoint,\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        deepExtend(ScatterChart.fn, ClipAnimationMixin);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                var chart = this;\n                ScatterChart.fn.render.call(chart);\n                chart.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.fn, LineChartMixin);\n        var BubbleChart = ScatterChart.extend({\n            init: function (plotArea, options) {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn.init.call(this, plotArea, options);\n            },\n            options: {\n                tooltip: { format: '{3}' },\n                labels: { format: '{3}' }\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = math.max(this._maxSize, math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                var chart = this;\n                chart.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(chart, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, pointsCount = series.data.length, delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount), animationOptions = {\n                        delay: delay,\n                        duration: INITIAL_ANIMATION_DURATION - delay,\n                        type: BUBBLE\n                    }, point, pointOptions;\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                point = new Bubble(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var chart = this, options = chart.options, series = options.series, boxSize = math.min(box.width(), box.height()), seriesIx, pointIx;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx], seriesPoints = chart.seriesPoints[seriesIx], minSize = currentSeries.minSize || math.max(boxSize * 0.02, 10), maxSize = currentSeries.maxSize || boxSize * 0.2, minR = minSize / 2, maxR = maxSize / 2, minArea = math.PI * minR * minR, maxArea = math.PI * maxR * maxR, areaRange = maxArea - minArea, areaRatio = areaRange / chart._maxSize;\n                    for (pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = math.abs(point.value.size) * areaRatio, r = math.sqrt((minArea + area) / math.PI), baseZIndex = valueOrDefault(point.options.zIndex, 0), zIndex = baseZIndex + (1 - r / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: r * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: noop,\n            createVisual: noop\n        });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            options: {\n                vertical: true,\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{4:d}</th>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), points = [], mid, ocSlot, lhSlot;\n                ocSlot = valueAxis.getSlot(value.open, value.close);\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                point.realBody = ocSlot;\n                mid = lhSlot.center().x;\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                point.lines = points;\n                point.box = lhSlot.clone().wrap(ocSlot);\n                if (!point._rendered) {\n                    point._rendered = true;\n                    point.createNote();\n                }\n                point.reflowNote();\n            },\n            reflowNote: function () {\n                var point = this;\n                if (point.note) {\n                    point.note.reflow(point.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new draw.Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = draw.Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = draw.Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var point = this, options = point.options, border = options.border, borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(point.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var point = this, box = point.box, clipBox = point.owner.pane.clipBox() || box;\n                return new Point2D(box.x2 + TOOLTIP_OFFSET, math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Candlestick.fn, PointEventsMixin);\n        deepExtend(Candlestick.fn, NoteMixin);\n        var CandlestickChart = CategoricalChart.extend({\n            options: {},\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var value = data.valueFields;\n                var children = chart.children;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var pointType = chart.pointType();\n                var color = data.fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type == CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !chart.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value);\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.fn, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), oPoints = [], cPoints = [], lhPoints = [], mid, oSlot, cSlot, lhSlot;\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                oSlot = valueAxis.getSlot(value.open, value.open);\n                cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                point.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                point.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                point.reflowNote();\n            },\n            createBody: $.noop\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var children = chart.children;\n                var value = data.valueFields;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value).concat(chart.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length, result = [], i, item;\n                for (i = 0; i < length; i++) {\n                    item = items[i];\n                    if (defined(item)) {\n                        appendIfNotNull(result, item);\n                    }\n                }\n                return result;\n            }\n        });\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point, options);\n                point.value = value;\n                point.createNote();\n            },\n            options: {\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                mean: {\n                    width: 2,\n                    dashType: 'dash'\n                },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{6:d}</th>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                },\n                outliers: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CROSS,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                },\n                extremes: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), whiskerSlot, boxSlot, medianSlot, meanSlot;\n                point.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                point.realBody = boxSlot;\n                point.reflowBoxSlot(box);\n                point.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                point.reflowWhiskerSlot(box);\n                medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    meanSlot = valueAxis.getSlot(value.mean);\n                    point.meanPoints = point.calcMeanPoints(box, meanSlot);\n                }\n                point.whiskerPoints = point.calcWhiskerPoints(boxSlot, whiskerSlot);\n                point.medianPoints = point.calcMedianPoints(box, medianSlot);\n                point.box = whiskerSlot.clone().wrap(boxSlot);\n                point.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var point = this, markers = options.markers || {}, value = point.value, outliers = value.outliers || [], outerFence = math.abs(value.q3 - value.q1) * 3, markersBorder, shape, outlierValue, i;\n                var elements = [];\n                for (i = 0; i < outliers.length; i++) {\n                    outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(point.color)) {\n                            markersBorder.color = point.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this.box = this.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.line);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.getBorderColor.call(this);\n            }\n        });\n        deepExtend(BoxPlot.fn, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                var segment = this;\n                segment.value = value;\n                segment.sector = sector;\n                ChartElement.fn.init.call(segment, options);\n            },\n            options: {\n                color: WHITE,\n                overlay: { gradient: ROUNDED_BEVEL },\n                border: { width: 0.5 },\n                labels: {\n                    visible: false,\n                    distance: 35,\n                    font: DEFAULT_FONT,\n                    margin: getSpacing(0.5),\n                    align: CIRCLE,\n                    zIndex: 1,\n                    position: OUTSIDE_END\n                },\n                animation: { type: PIE },\n                highlight: {\n                    visible: true,\n                    border: { width: 1 }\n                },\n                visible: true\n            },\n            render: function () {\n                var segment = this, options = segment.options, labels = options.labels, labelText = segment.value, labelTemplate;\n                if (segment._rendered || segment.visible === false) {\n                    return;\n                } else {\n                    segment._rendered = true;\n                }\n                if (labels.template) {\n                    labelTemplate = template(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: segment.dataItem,\n                        category: segment.category,\n                        value: segment.value,\n                        series: segment.series,\n                        percentage: segment.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = autoFormat(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    segment.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: segment.animationDelay\n                        }\n                    }));\n                    segment.append(segment.label);\n                }\n            },\n            reflow: function (targetBox) {\n                var segment = this;\n                segment.render();\n                segment.box = targetBox;\n                segment.reflowLabel();\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, labelsDistance = labelsOptions.distance, angle = sector.middle(), lp, x1, labelWidth, labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    labelWidth = label.box.width();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r = math.abs((sector.r - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position == INSIDE_END) {\n                        sector.r = sector.r - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.c.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(Box2D(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var segment = this, sector = segment.sector, options = segment.options;\n                ChartElement.fn.createVisual.call(this);\n                if (segment.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: segment.category,\n                            dataItem: segment.dataItem,\n                            value: segment.value,\n                            series: segment.series,\n                            percentage: segment.percentage,\n                            center: new geom.Point(sector.c.x, sector.c.y),\n                            radius: sector.r,\n                            innerRadius: sector.ir,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                segment.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            segment.visual.append(visual);\n                        }\n                    } else {\n                        segment.createSegmentVisual(segment.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var segment = this, sector = segment.sector, options = segment.options, borderOptions = options.border || {}, border = borderOptions.width > 0 ? {\n                        stroke: {\n                            color: borderOptions.color,\n                            width: borderOptions.width,\n                            opacity: borderOptions.opacity,\n                            dashType: borderOptions.dashType\n                        }\n                    } : {}, color = options.color, fill = {\n                        color: color,\n                        opacity: options.opacity\n                    }, visual;\n                visual = segment.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.c.x,\n                            sector.c.y\n                        ],\n                        innerRadius: sector.ir,\n                        radius: sector.r,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new draw.Circle(new geom.Circle(new geom.Point(sector.c.x, sector.c.y), sector.r), options);\n                } else {\n                    return ShapeBuilder.current.createRing(sector, options);\n                }\n            },\n            createAnimation: function () {\n                var options = this.options;\n                var center = this.sector.c;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var segment = this, highlight = segment.options.highlight || {}, border = highlight.border || {};\n                return segment.createSegment(segment.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.r,\n                    innerRadius: sector.ir,\n                    center: new geom.Point(sector.c.x, sector.c.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function (width, height) {\n                var point = this, box = point.sector.adjacentBox(TOOLTIP_OFFSET, width, height);\n                return new Point2D(box.x1, box.y1);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        deepExtend(PieSegment.fn, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var chart = this, legendOptions = chart.options.legend || {}, labelsOptions = legendOptions.labels || {}, inactiveItems = legendOptions.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, text, labelTemplate, markerColor, itemLabelOptions, pointVisible;\n                if (options && options.visibleInLegend !== false) {\n                    pointVisible = options.visible !== false;\n                    text = options.category || '';\n                    labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        chart.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.points = [];\n                chart.legendItems = [];\n                chart.render();\n            },\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                },\n                inactiveItems: {\n                    markers: {},\n                    labels: {}\n                }\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, colors = chart.plotArea.options.seriesColors || [], colorsCount = colors.length, series = options.series, seriesCount = series.length, currentSeries, pointData, fields, seriesIx, angle, data, anglePerValue, value, plotValue, explode, total, currentAngle, i, pointIx = 0;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    data = currentSeries.data;\n                    total = seriesTotal(currentSeries);\n                    anglePerValue = 360 / total;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx != seriesCount - 1) {\n                        if (currentSeries.labels.position == OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (i = 0; i < data.length; i++) {\n                        pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        value = pointData.valueFields.value;\n                        plotValue = math.abs(value);\n                        fields = pointData.fields;\n                        angle = plotValue * anglePerValue;\n                        explode = data.length != 1 && !!fields.explode;\n                        if (!isFn(currentSeries.color)) {\n                            currentSeries.color = fields.color || colors[i % colorsCount];\n                        }\n                        callback(value, new Ring(null, 0, 0, currentAngle, angle), {\n                            owner: chart,\n                            category: fields.category || '',\n                            index: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: fields.visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: chart.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (pointData.fields.visible !== false) {\n                            currentAngle += angle;\n                        }\n                        pointIx++;\n                    }\n                    pointIx = 0;\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                segment = new PieSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), newBox = Box2D(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth), newBoxCenter = newBox.center(), seriesConfigs = chart.seriesConfigs || [], boxCenter = box.center(), points = chart.points, count = points.length, seriesCount = options.series.length, leftSideLabels = [], rightSideLabels = [], seriesConfig, seriesIndex, label, segment, sector, r, i, c;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                r = halfMinWidth - padding;\n                c = Point2D(r + newBox.x1 + padding, r + newBox.y1 + padding);\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    sector.r = r;\n                    sector.c = c;\n                    seriesIndex = segment.seriesIx;\n                    if (seriesConfigs.length) {\n                        seriesConfig = seriesConfigs[seriesIndex];\n                        sector.ir = seriesConfig.ir;\n                        sector.r = seriesConfig.r;\n                    }\n                    if (seriesIndex == seriesCount - 1 && segment.explode) {\n                        sector.c = sector.clone().radius(sector.r * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex == seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(chart.labelComparator(true));\n                    chart.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(chart.labelComparator(false));\n                    chart.rightLabelsReflow(rightSideLabels);\n                }\n                chart.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, firstBox = labels[0].box, count = labels.length - 1, lr = sector.r + segment.options.labels.distance, distances = [], secondBox, distance, i;\n                distance = round(firstBox.y1 - (sector.c.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (i = 0; i < count; i++) {\n                    firstBox = labels[i].box;\n                    secondBox = labels[i + 1].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.c.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var chart = this, count = distances.length, remaining, left, right, i;\n                for (i = 0; i < count; i++) {\n                    left = right = i;\n                    remaining = -distances[i];\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = chart._takeDistance(distances, i, --left, remaining);\n                        remaining = chart._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                chart.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                if (distances[position] > 0) {\n                    var available = math.min(distances[position], amount);\n                    amount -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return amount;\n            },\n            reflowLabels: function (distances, labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, labelsCount = labels.length, labelOptions = segment.options.labels, labelDistance = labelOptions.distance, boxY = sector.c.y - (sector.r + labelDistance) - labels[0].box.height(), label, boxX, box, i;\n                distances[0] += 2;\n                for (i = 0; i < labelsCount; i++) {\n                    label = labels[i];\n                    boxY += distances[i];\n                    box = label.box;\n                    boxX = chart.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation == RIGHT);\n                    if (label.orientation == RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.r + sector.c.x + labelDistance;\n                        }\n                        label.reflow(Box2D(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.c.x - sector.r - labelDistance;\n                        }\n                        label.reflow(Box2D(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var chart = this, options = chart.options, connectors = options.connectors, points = chart.points, connectorLine, count = points.length, space = 4, connectorsColor, sector, angle, segment, seriesIx, label, i;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    angle = sector.middle();\n                    label = segment.label;\n                    seriesIx = { seriesId: segment.seriesIx };\n                    connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        connectorLine = new draw.Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box, centerPoint = sector.c, start = sector.point(angle), middle = Point2D(box.x1, box.center().y), sr, end, crossing;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation == RIGHT) {\n                                end = Point2D(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.min(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x < sector.c.x) {\n                                    sr = sector.c.x + sector.r + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = Point2D(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.max(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x > sector.c.x) {\n                                    sr = sector.c.x - sector.r - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this._connectorLines.push(connectorLine);\n                            this.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                reverse = reverse ? -1 : 1;\n                return function (a, b) {\n                    a = (a.parent.sector.middle() + 270) % 360;\n                    b = (b.parent.sector.middle() + 270) % 360;\n                    return (a - b) * reverse;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var cx = sector.c.x, cy = sector.c.y, r = sector.r, t = math.min(math.abs(cy - y1), math.abs(cy - y2));\n                if (t > r) {\n                    return originalX;\n                } else {\n                    return cx + math.sqrt(r * r - t * t) * (direction ? 1 : -1);\n                }\n            },\n            pointInCircle: function (point, c, r) {\n                return sqr(c.x - point.x) + sqr(c.y - point.y) < sqr(r);\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        deepExtend(PieChart.fn, PieChartMixin);\n        var DonutSegment = PieSegment.extend({\n            options: {\n                overlay: { gradient: ROUNDED_GLASS },\n                labels: { position: CENTER },\n                animation: { type: PIE }\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, lp, angle = sector.middle(), labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r -= (sector.r - sector.ir) / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(segment);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        deepExtend(DonutSegment.fn, PointEventsMixin);\n        var DonutChart = PieChart.extend({\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                }\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                segment = new DonutSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), series = options.series, currentSeries, seriesCount = series.length, seriesWithoutSize = 0, holeSize, totalSize, size, margin = 0, i, r, ir = 0, currentSize = 0;\n                chart.seriesConfigs = [];\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                totalSize = halfMinWidth - padding;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i != seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                ir = holeSize;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    size = valueOrDefault(currentSeries.size, totalSize / seriesWithoutSize);\n                    ir += margin;\n                    r = ir + size;\n                    chart.seriesConfigs.push({\n                        ir: ir,\n                        r: r\n                    });\n                    margin = currentSeries.margin || 0;\n                    ir = r;\n                }\n                PieChart.fn.reflow.call(chart, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.from = from;\n                segment.to = to;\n                segment.series = series;\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            linePoints: function () {\n                var points = [];\n                var from = this.from;\n                var fromBox = from.box;\n                var toBox = this.to.box;\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = draw.Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        function returnSelf() {\n            return this;\n        }\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                var pane = this;\n                BoxElement.fn.init.call(pane, options);\n                options = pane.options;\n                pane.id = kendo.guid();\n                pane.createTitle();\n                pane.content = new ChartElement();\n                pane.chartContainer = new ChartContainer({}, pane);\n                pane.append(pane.content);\n                pane.axes = [];\n                pane.charts = [];\n            },\n            options: {\n                zIndex: -1,\n                shrinkToFit: true,\n                title: { align: LEFT },\n                visible: true\n            },\n            createTitle: function () {\n                var pane = this;\n                var titleOptions = pane.options.title;\n                if (typeof titleOptions === OBJECT) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                pane.title = Title.buildTitle(titleOptions, pane, Pane.fn.options.title);\n            },\n            appendAxis: function (axis) {\n                var pane = this;\n                pane.content.append(axis);\n                pane.axes.push(axis);\n                axis.pane = pane;\n            },\n            appendChart: function (chart) {\n                var pane = this;\n                if (pane.chartContainer.parent !== pane.content) {\n                    pane.content.append(pane.chartContainer);\n                }\n                pane.charts.push(chart);\n                pane.chartContainer.append(chart);\n                chart.pane = pane;\n            },\n            empty: function () {\n                var pane = this, plotArea = pane.parent, i;\n                if (plotArea) {\n                    for (i = 0; i < pane.axes.length; i++) {\n                        plotArea.removeAxis(pane.axes[i]);\n                    }\n                    for (i = 0; i < pane.charts.length; i++) {\n                        plotArea.removeChart(pane.charts[i]);\n                    }\n                }\n                pane.axes = [];\n                pane.charts = [];\n                pane.content.destroy();\n                pane.content.children = [];\n                pane.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var pane = this;\n                var content;\n                if (last(pane.children) === pane.content) {\n                    content = pane.children.pop();\n                }\n                BoxElement.fn.reflow.call(pane, targetBox);\n                if (content) {\n                    pane.children.push(content);\n                }\n                if (pane.title) {\n                    pane.contentBox.y1 += pane.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: returnSelf,\n            clipRoot: returnSelf,\n            createGridLines: function () {\n                var pane = this, axes = pane.axes, allAxes = axes.concat(pane.parent.axes), vGridLines = [], hGridLines = [], gridLines, i, j, axis, vertical, altAxis;\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    vertical = axis.options.vertical;\n                    gridLines = vertical ? vGridLines : hGridLines;\n                    for (j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = $.proxy(this.createGradient, this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes, length = axes.length, chartsBox = new Box2D(), axisValueField, lineBox, axis, idx;\n                for (idx = 0; idx < length; idx++) {\n                    axis = axes[idx];\n                    axisValueField = axis.options.vertical ? Y : X;\n                    lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    length = allAxes.length;\n                    for (idx = 0; idx < length; idx++) {\n                        axis = allAxes[idx];\n                        if (!axis.options.vertical) {\n                            lineBox = axis.lineBox();\n                            chartsBox.x1 = lineBox.x1;\n                            chartsBox.x2 = lineBox.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                var container = this;\n                ChartElement.fn.init.call(container, options);\n                container.pane = pane;\n            },\n            shouldClip: function () {\n                var container = this, children = container.children, length = children.length, i;\n                for (i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new draw.Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = draw.Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: returnSelf,\n            unclipLabels: function () {\n                var container = this, charts = container.children, clipBox = container.clipBox, points, point, i, j, length, label, note;\n                for (i = 0; i < charts.length; i++) {\n                    points = charts[i].points || {};\n                    length = points.length;\n                    for (j = 0; j < length; j++) {\n                        point = points[j];\n                        if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            label = point.label;\n                            note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                ChartElement.fn.init.call(plotArea, options);\n                plotArea.series = series;\n                plotArea.initSeries();\n                plotArea.charts = [];\n                plotArea.options.legend.items = [];\n                plotArea.axes = [];\n                plotArea.crosshairs = [];\n                plotArea.createPanes();\n                plotArea.render();\n                plotArea.createCrosshairs();\n            },\n            options: {\n                series: [],\n                plotArea: { margin: {} },\n                background: '',\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                legend: {\n                    inactiveItems: {\n                        labels: { color: '#919191' },\n                        markers: { color: '#919191' }\n                    }\n                }\n            },\n            initSeries: function () {\n                var series = this.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    currentSeries.index = i;\n                }\n            },\n            createPanes: function () {\n                var plotArea = this, defaults = { title: { color: (plotArea.options.title || {}).color } }, panes = [], paneOptions = plotArea.options.panes || [], i, panesLength = math.max(paneOptions.length, 1), currentPane;\n                function setTitle(options, defaults) {\n                    if (typeof options.title === 'string') {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    plotArea.append(currentPane);\n                }\n                plotArea.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var plotArea = this, i, j, pane, axis, currentCrosshair;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    for (j = 0; j < pane.axes.length; j++) {\n                        axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            currentCrosshair = new Crosshair(axis, axis.options.crosshair);\n                            plotArea.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var plotArea = this, crosshairs = plotArea.crosshairs, axes = pane.axes, i, j;\n                for (i = crosshairs.length - 1; i >= 0; i--) {\n                    for (j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var plotArea = this, pane = plotArea.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                plotArea.axes.push(axis);\n                axis.plotArea = plotArea;\n            },\n            removeAxis: function (axisToRemove) {\n                var plotArea = this, i, axis, filteredAxes = [];\n                for (i = 0; i < plotArea.axes.length; i++) {\n                    axis = plotArea.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                plotArea.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    plotArea.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var plotArea = this, i, chart, filteredCharts = [];\n                for (i = 0; i < plotArea.charts.length; i++) {\n                    chart = plotArea.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                plotArea.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length, data = [], i, currentSeries, text, legend = this.options.legend, labels = legend.labels || {}, inactiveItems = legend.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, color, itemLabelOptions, markerColor, defaults, seriesVisible, labelTemplate;\n                for (i = 0; i < count; i++) {\n                    currentSeries = series[i];\n                    seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    text = currentSeries.name || '';\n                    labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    color = currentSeries.color;\n                    defaults = currentSeries._defaults;\n                    if (isFn(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [], yAxes = [], paneAxes, axis, paneIx, axisIx;\n                for (paneIx = 0; paneIx < panes.length; paneIx++) {\n                    paneAxes = panes[paneIx].axes;\n                    for (axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var plotArea = this, series = plotArea.series, seriesByPane = {}, i, pane, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    pane = plotArea.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var i, currentSeries, result = [];\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var plotArea = this, options = plotArea.options.plotArea, panes = plotArea.panes, margin = getSpacing(options.margin);\n                plotArea.box = targetBox.clone().unpad(margin);\n                plotArea.reflowPanes();\n                plotArea.reflowAxes(panes);\n                plotArea.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var plotArea = this, i;\n                panes = [].concat(panes);\n                this.initSeries();\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.removeCrosshairs(panes[i]);\n                    panes[i].empty();\n                }\n                plotArea.render(panes);\n                plotArea.reflowAxes(plotArea.panes);\n                plotArea.reflowCharts(panes);\n                plotArea.createCrosshairs(panes);\n                for (i = 0; i < panes.length; i++) {\n                    panes[i].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue), valuesToAdd = crossingAxes.length - crossingValues.length, defaultValue = crossingValues[0] || 0, i;\n                for (i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true), slotEdge = axis.options.reverse ? 2 : 1, targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true), targetEdge = targetAxis.options.reverse ? 2 : 1, axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var plotArea = this, xAnchor = xAxes[0], yAnchor = yAxes[0], xAnchorCrossings = plotArea.axisCrossingValues(xAnchor, yAxes), yAnchorCrossings = plotArea.axisCrossingValues(yAnchor, xAxes), anchor, anchorCrossings, leftAnchors = {}, rightAnchors = {}, topAnchors = {}, bottomAnchors = {}, pane, paneId, axis, i;\n                for (i = 0; i < yAxes.length; i++) {\n                    axis = yAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, yAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (i = 0; i < xAxes.length; i++) {\n                    axis = xAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(yAxes, pane) || yAnchor;\n                    anchorCrossings = yAnchorCrossings;\n                    if (anchor !== yAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, xAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().y1) === round(anchor.lineBox().y1)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                        if (topAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(topAnchors[paneId].box, TOP).translate(0, -axis.options.margin));\n                        }\n                        topAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().y2, COORD_PRECISION) === round(anchor.lineBox().y2, COORD_PRECISION)) {\n                        if (bottomAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(bottomAnchors[paneId].box, BOTTOM).translate(0, axis.options.margin));\n                        }\n                        bottomAnchors[paneId] = axis;\n                    }\n                    if (i !== 0) {\n                        axis.alignTo(xAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, axisBox = axisGroupBox(axes), overflowX = 0, i, currentPane, currentAxis;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var i, currentPane, axes, overflowY, j, currentAxis, shrinked;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    axes = currentPane.axes;\n                    overflowY = math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (j = 0; j < axes.length; j++) {\n                            currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, offsetX = 0, paneAxes, paneBox, axisBox, offsetY, currentPane, currentAxis, i, j;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    paneAxes = currentPane.axes;\n                    paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        axisBox = axisGroupBox(paneAxes);\n                        offsetX = math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        offsetY = math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        for (j = 0; j < paneAxes.length; j++) {\n                            currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (i = 0; i < axes.length; i++) {\n                    currentAxis = axes[i];\n                    currentAxis.reflow(currentAxis.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var plotArea = this, i, axes = plotArea.groupAxes(panes);\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    plotArea.alignAxes(axes.x, axes.y);\n                    plotArea.shrinkAxisWidth(panes);\n                    plotArea.autoRotateAxisLabels(axes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisWidth(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.shrinkAxisHeight(panes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisHeight(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var axes = this.axes;\n                var panes = this.panes;\n                var axis, idx, rotated;\n                for (idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (idx = 0; idx < panes.length; idx++) {\n                        this.reflowPaneAxes(panes[idx]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes, i, length = axes.length;\n                if (length > 0) {\n                    for (i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var plotArea = this, charts = plotArea.charts, count = charts.length, box = plotArea.box, chartPane, i;\n                for (i = 0; i < count; i++) {\n                    chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var plotArea = this, box = plotArea.box, panes = plotArea.panes, panesLength = panes.length, i, currentPane, paneBox, remainingHeight = box.height(), remainingPanes = panesLength, autoHeightPanes = 0, top = box.y1, height, percents;\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    if (!currentPane.options.height) {\n                        currentPane.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    paneBox = box.clone().move(box.x1, top);\n                    currentPane.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var plotArea = this, axes = plotArea.axes, axesCount = axes.length, lineBox, box, i, j, axisA, axisB;\n                for (i = 0; i < axesCount; i++) {\n                    axisA = axes[i];\n                    for (j = 0; j < axesCount; j++) {\n                        axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || plotArea.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(draw.Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var border = options.border || {};\n                var background = options.background;\n                var opacity = options.opacity;\n                if (util.isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new draw.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts, result = [], i, j, points, point, chart;\n                if (categoryIndex !== null) {\n                    for (i = 0; i < charts.length; i++) {\n                        chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (j = 0; j < points.length; j++) {\n                                point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && point.options.index === seriesIndex) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            paneByPoint: function (point) {\n                var plotArea = this, panes = plotArea.panes, pane, i;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedCategoryAxes = {};\n                plotArea.namedValueAxes = {};\n                plotArea.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    plotArea.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            plotArea.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                categoryAxis: { categories: [] },\n                valueAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this;\n                panes = panes || plotArea.panes;\n                plotArea.createCategoryAxes(panes);\n                plotArea.aggregateCategories(panes);\n                plotArea.createCategoryAxesLabels(panes);\n                plotArea.createCharts(panes);\n                plotArea.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete plotArea.namedCategoryAxes[axisName];\n                } else {\n                    plotArea.valueAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedValueAxes[axisName];\n                }\n                if (axis === plotArea.categoryAxis) {\n                    delete plotArea.categoryAxis;\n                }\n                if (axis === plotArea.valueAxis) {\n                    delete plotArea.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this.addToLegend(paneSeries);\n                    var visibleSeries = this.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var plotArea = this, series = plotArea.srcSeries || plotArea.series, processedSeries = [], i, currentSeries, categoryAxis, axisPane, dateAxis;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    categoryAxis = plotArea.seriesCategoryAxis(currentSeries);\n                    axisPane = plotArea.findPane(categoryAxis.options.pane);\n                    dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = plotArea.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = plotArea.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                plotArea.srcSeries = series;\n                plotArea.series = processedSeries;\n            },\n            filterSeries: function (currentSeries, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(currentSeries.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var categoryIx;\n                range.min = isNumber(categoryAxis.options.min) ? math.floor(range.min) : 0;\n                range.max = isNumber(categoryAxis.options.max) ? justified ? math.floor(range.max) + 1 : math.ceil(range.max) : currentSeries.data.length;\n                currentSeries = deepExtend({}, currentSeries);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        categoryIx = minCategory;\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        categoryIx = range.max;\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var axisOptions = categoryAxis.options, dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE), categories = axisOptions.categories, srcCategories = axisOptions.srcCategories || categories, srcData = series.data, srcPoints = [], result = deepExtend({}, series), aggregatorSeries = deepExtend({}, series), dataItems = axisOptions.dataItems || [], i, category, categoryIx, data, aggregator, getFn = getField, outOfRangeMinIdx = util.MIN_NUM, outOfRangeMinCategory, outOfRangeMaxCategory, outOfRangeMaxIdx = util.MAX_NUM, outOfRangePoints = inArray(series.type, [\n                        LINE,\n                        VERTICAL_LINE,\n                        AREA,\n                        VERTICAL_AREA\n                    ]);\n                result.data = data = [];\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (i = 0; i < srcData.length; i++) {\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i]);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx == outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx == outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                for (i = 0; i < categories.length; i++) {\n                    data[i] = aggregator.aggregatePoints(srcPoints[i], categories[i]);\n                    if (srcPoints[i]) {\n                        dataItems[i] = data[i];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this, series = chart.options.series, categoryAxis = plotArea.seriesCategoryAxis(series[0]), categories = categoryAxis.options.categories, categoriesToAdd = math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                plotArea.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, axisName = series.axis, axisOptions = [].concat(options.valueAxis), axis = $.grep(axisOptions, function (a) {\n                        return a.name === axisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = (panes[0] || {}).name || 'default', paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var plotArea = this, axisName = series.categoryAxis, axis = axisName ? plotArea.namedCategoryAxes[axisName] : plotArea.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack, isStacked100 = stack && stack.type === '100%', clip;\n                if (defined(pane.options.clip)) {\n                    clip = pane.options.clip;\n                } else if (isStacked100) {\n                    clip = false;\n                }\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var unique = {};\n                var categoryAxes = $.map(series, function (s) {\n                    var name = s.categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        return name;\n                    }\n                });\n                function groupSeries(axis, axisIx) {\n                    return $.grep(series, function (s) {\n                        return axisIx === 0 && !s.categoryAxis || s.categoryAxis == axis;\n                    });\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], barChart = new BarChart(plotArea, extend({\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], rangeColumnChart = new RangeBarChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], bulletChart = new BulletChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], lineChart = new LineChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], areaChart = new AreaChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new OHLCChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new CandlestickChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new BoxPlotChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], waterfallChart = new WaterfallChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, centeredSeries = filterSeriesByType(plotArea.series, EQUALLY_SPACED_SERIES), seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < plotArea.series.length; seriesIx++) {\n                    var currentSeries = plotArea.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (seriesIx = 0; seriesIx < centeredSeries.length; seriesIx++) {\n                    seriesAxis = centeredSeries[seriesIx].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, series = plotArea.series, seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var plotArea = this, invertAxes = plotArea.invertAxes, definitions = [].concat(plotArea.options.categoryAxis), i, axisOptions, axisPane, categories, type, name, categoryAxis, axes = [], primaryAxis;\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        categories = axisOptions.categories || [];\n                        type = axisOptions.type || '';\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0,\n                            _deferLabels: true\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = plotArea.isJustified();\n                        }\n                        if (plotArea.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions);\n                        }\n                        if (name) {\n                            if (plotArea.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        plotArea.appendAxis(categoryAxis);\n                    }\n                }\n                primaryAxis = plotArea.categoryAxis || axes[0];\n                plotArea.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisY = primaryAxis;\n                } else {\n                    plotArea.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var plotArea = this, series = plotArea.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var plotArea = this, tracker = plotArea.valueAxisRangeTracker, defaultRange = tracker.query(), definitions = [].concat(plotArea.options.valueAxis), invertAxes = plotArea.invertAxes, baseOptions = { vertical: !invertAxes }, axisOptions, axisPane, valueAxis, primaryAxis, axes = [], range, axisType, defaultAxisRange, name, i;\n                if (plotArea.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = math.min(range.min, defaultRange.min);\n                            range.max = math.max(range.max, defaultRange.max);\n                        }\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = LogarithmicAxis;\n                        } else {\n                            axisType = NumericAxis;\n                        }\n                        valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions));\n                        if (name) {\n                            if (plotArea.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        plotArea.appendAxis(valueAxis);\n                    }\n                }\n                primaryAxis = plotArea.valueAxis || axes[0];\n                plotArea.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisX = primaryAxis;\n                } else {\n                    plotArea.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), pane = plotArea.pointPane(point), allAxes, i, axis, categories = [], values = [];\n                if (!pane) {\n                    return;\n                }\n                allAxes = pane.axes;\n                for (i = 0; i < allAxes.length; i++) {\n                    axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, plotArea.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, currentPane, i;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        deepExtend(CategoricalPlotArea.fn, PlotAreaEventsMixin);\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                var tracker = this;\n                tracker.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var tracker = this, axisRanges = tracker.axisRanges, range, chartRange, axisName;\n                for (axisName in chartAxisRanges) {\n                    range = axisRanges[axisName];\n                    chartRange = chartAxisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = math.min(range.min, chartRange.min);\n                    range.max = math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var XYPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedXAxes = {};\n                plotArea.namedYAxes = {};\n                plotArea.xAxisRangeTracker = new AxisGroupRangeTracker();\n                plotArea.yAxisRangeTracker = new AxisGroupRangeTracker();\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                xAxis: {},\n                yAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this, seriesByPane = plotArea.groupSeriesByPane(), i, pane, paneSeries, filteredSeries;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    plotArea.addToLegend(paneSeries);\n                    filteredSeries = plotArea.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    plotArea.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    plotArea.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    plotArea.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                plotArea.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.xAxisRangeTracker.update(chart.xAxisRanges);\n                plotArea.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis.options.vertical) {\n                    plotArea.yAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedYAxes[axisName];\n                } else {\n                    plotArea.xAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedXAxes[axisName];\n                }\n                if (axis === plotArea.axisX) {\n                    delete plotArea.axisX;\n                }\n                if (axis === plotArea.axisY) {\n                    delete plotArea.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, xAxisName = series.xAxis, xAxisOptions = [].concat(options.xAxis), xAxis = $.grep(xAxisOptions, function (a) {\n                        return a.name === xAxisName;\n                    })[0], yAxisName = series.yAxis, yAxisOptions = [].concat(options.yAxis), yAxis = $.grep(yAxisOptions, function (a) {\n                        return a.name === yAxisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = panes[0].name || 'default', paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterLineChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new BubbleChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var plotArea = this, axisName = options.name, namedAxes = vertical ? plotArea.namedYAxes : plotArea.namedXAxes, tracker = vertical ? plotArea.yAxisRangeTracker : plotArea.xAxisRangeTracker, axisOptions = deepExtend({}, options, { vertical: vertical }), isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC), defaultRange = tracker.query(), defaultAxisRange = isLog ? {\n                        min: 0.1,\n                        max: 1\n                    } : {\n                        min: 0,\n                        max: 1\n                    }, range = tracker.query(axisName) || defaultRange || defaultAxisRange, axis, axisType, seriesIx, series = plotArea.series, currentSeries, seriesAxisName, firstPointValue, typeSamples = [\n                        axisOptions.min,\n                        axisOptions.max\n                    ], inferredDate, i;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName == axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = math.min(range.min, defaultRange.min);\n                    range.max = math.max(range.max, defaultRange.max);\n                }\n                for (i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = DateValueAxis;\n                } else if (isLog) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n                axis = new axisType(range.min, range.max, axisOptions);\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                plotArea.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var plotArea = this, options = plotArea.options, axisPane, xAxesOptions = [].concat(options.xAxis), xAxes = [], yAxesOptions = [].concat(options.yAxis), yAxes = [];\n                each(xAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(plotArea.createXYAxis(this, false, i));\n                    }\n                });\n                each(yAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        yAxes.push(plotArea.createXYAxis(this, true, i));\n                    }\n                });\n                plotArea.axisX = plotArea.axisX || xAxes[0];\n                plotArea.axisY = plotArea.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), allAxes = plotArea.axes, i, length = allAxes.length, axis, xValues = [], yValues = [], currentValue, values;\n                for (i = 0; i < length; i++) {\n                    axis = allAxes[i];\n                    values = axis.options.vertical ? yValues : xValues;\n                    currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = indexOf(axis, vertical ? axes.y : axes.x);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        deepExtend(XYPlotArea.fn, PlotAreaEventsMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createPieChart(series);\n            },\n            createPieChart: function (series) {\n                var plotArea = this, firstSeries = series[0], pieChart = new PieChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        startAngle: firstSeries.startAngle,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createDonutChart(series);\n            },\n            createDonutChart: function (series) {\n                var plotArea = this, firstSeries = series[0], donutChart = new DonutChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(donutChart);\n            }\n        });\n        var PieAnimation = draw.Animation.extend({\n            options: {\n                easing: 'easeOutElastic',\n                duration: INITIAL_ANIMATION_DURATION\n            },\n            setup: function () {\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(PIE, PieAnimation);\n        var BubbleAnimation = draw.Animation.extend({\n            options: { easing: 'easeOutElastic' },\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.center));\n            }\n        });\n        draw.AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                points = [].concat(points);\n                this.hide();\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this.togglePointHighlight(point, true);\n                        this._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var points = this._points;\n                while (points.length) {\n                    this.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element == point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        var BaseTooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                tooltip.options = deepExtend({}, tooltip.options, options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = BaseTooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = BaseTooltip.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'tooltip ' + CSS_PREFIX + 'chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + 'border: #= d.border.width #px solid;' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>');\n                }\n                var padding = getSpacing(tooltip.options.padding || {}, 'auto');\n                tooltip.element = $(tooltip.template(tooltip.options)).css({\n                    'padding-top': padding.top,\n                    'padding-right': padding.right,\n                    'padding-bottom': padding.bottom,\n                    'padding-left': padding.left\n                });\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            options: {\n                border: { width: 1 },\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION }\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            _padding: function () {\n                if (!this._chartPadding) {\n                    var chartElement = this.chartElement;\n                    this._chartPadding = {\n                        top: parseInt(chartElement.css('paddingTop'), 10),\n                        left: parseInt(chartElement.css('paddingLeft'), 10)\n                    };\n                }\n                return this._chartPadding;\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.anchor, chartPadding = tooltip._padding(), chartOffset = tooltip.chartElement.offset(), top = round(anchor.y + chartPadding.top + chartOffset.top), left = round(anchor.x + chartPadding.left + chartOffset.left), zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, viewport.outerHeight() / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, viewport.outerWidth() / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            setStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                if (!defined(options.color)) {\n                    var brightness = new Color(background).percBrightness();\n                    this.element.toggleClass(CSS_PREFIX + TOOLTIP_INVERSE, brightness > 180);\n                }\n                this.element.css({\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: options.border.width\n                });\n            },\n            show: function () {\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: this.element.outerWidth(),\n                    height: this.element.outerHeight()\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _pointAnchor: function (point) {\n                var size = this._measure();\n                return point.tooltipAnchor(size.width, size.height);\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip);\n                if (!point || !point.tooltipAnchor || !tooltip.element) {\n                    return;\n                }\n                tooltip.element.html(tooltip._pointContent(point));\n                tooltip.anchor = tooltip._pointAnchor(point);\n                if (tooltip.anchor) {\n                    tooltip.setStyle(options, point);\n                    BaseTooltip.fn.show.call(tooltip, point);\n                } else {\n                    tooltip.hide();\n                }\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (element, plotArea, options) {\n                var tooltip = this;\n                BaseTooltip.fn.init.call(tooltip, element, options);\n                tooltip.plotArea = plotArea;\n            },\n            options: {\n                sharedTemplate: '<table>' + '<th colspan=\\'2\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(point.series.name) { # ' + '<td> #= point.series.name #:</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            showAt: function (points, coords) {\n                var tooltip = this, options = tooltip.options, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, index = axis.pointCategoryIndex(coords), category = axis.getCategory(coords), slot = axis.getSlot(index), content;\n                points = $.grep(points, function (p) {\n                    var tooltip = p.series.tooltip, excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (points.length > 0) {\n                    content = tooltip._content(points, category);\n                    tooltip.element.html(content);\n                    tooltip.anchor = tooltip._slotAnchor(coords, slot);\n                    tooltip.setStyle(options, points[0]);\n                    BaseTooltip.fn.show.call(tooltip);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var tooltip = this, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, anchor, size = this._measure(), hCenter = point.y - size.height / 2;\n                if (axis.options.vertical) {\n                    anchor = Point2D(point.x, hCenter);\n                } else {\n                    anchor = Point2D(slot.center().x, hCenter);\n                }\n                return anchor;\n            },\n            _content: function (points, category) {\n                var tooltip = this, template, content;\n                template = kendo.template(tooltip.options.sharedTemplate);\n                content = template({\n                    points: points,\n                    category: category,\n                    categoryText: autoFormat(tooltip.options.categoryFormat, category),\n                    content: tooltip._pointContent\n                });\n                return content;\n            }\n        });\n        var Crosshair = ChartElement.extend({\n            init: function (axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n            },\n            options: {\n                color: BLACK,\n                width: 1,\n                zIndex: -1,\n                tooltip: { visible: false }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    if (!this.tooltip) {\n                        this.tooltip = new CrosshairTooltip(this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                    }\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var crosshair = this, axis = crosshair.axis, vertical = axis.options.vertical, box = crosshair.getBox(), point = crosshair.point, dim = vertical ? Y : X, slot, lineStart, lineEnd;\n                lineStart = new geom.Point(box.x1, box.y1);\n                if (vertical) {\n                    lineEnd = new geom.Point(box.x2, box.y1);\n                } else {\n                    lineEnd = new geom.Point(box.x1, box.y2);\n                }\n                if (point) {\n                    if (crosshair.stickyMode) {\n                        slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                crosshair.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var crosshair = this, axis = crosshair.axis, axes = axis.pane.axes, length = axes.length, vertical = axis.options.vertical, box = axis.lineBox().clone(), dim = vertical ? X : Y, axisLineBox, currentAxis, i;\n                for (i = 0; i < length; i++) {\n                    currentAxis = axes[i];\n                    if (currentAxis.options.vertical != vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new draw.Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                var crosshair = this;\n                if (crosshair.tooltip) {\n                    crosshair.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(crosshair);\n            }\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (crosshair, options) {\n                var tooltip = this, chartElement = crosshair.axis.getRoot().chart.element;\n                tooltip.crosshair = crosshair;\n                BaseTooltip.fn.init.call(tooltip, chartElement, deepExtend({}, tooltip.options, { background: crosshair.axis.plotArea.options.seriesColors[0] }, options));\n                tooltip.setStyle(tooltip.options);\n            },\n            options: { padding: 10 },\n            showAt: function (point) {\n                var tooltip = this, element = tooltip.element;\n                if (element) {\n                    tooltip.point = point;\n                    tooltip.element.html(tooltip.content(point));\n                    tooltip.anchor = tooltip.getAnchor();\n                    tooltip.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (point) {\n                var tooltip = this, options = tooltip.options, axis = tooltip.crosshair.axis, axisOptions = axis.options, content, value, tooltipTemplate;\n                value = content = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({ value: value });\n                } else if (options.format) {\n                    content = autoFormat(options.format, value);\n                } else {\n                    if (axisOptions.type === DATE) {\n                        content = autoFormat(axisOptions.labels.dateFormats[axisOptions.baseUnit], value);\n                    }\n                }\n                return content;\n            },\n            getAnchor: function () {\n                var tooltip = this, options = tooltip.options, position = options.position, crosshair = this.crosshair, vertical = !crosshair.axis.options.vertical, lineBox = crosshair.line.bbox(), size = this._measure(), halfWidth = size.width / 2, halfHeight = size.height / 2, padding = options.padding, anchor;\n                if (vertical) {\n                    if (position === BOTTOM) {\n                        anchor = lineBox.bottomLeft().translate(-halfWidth, padding);\n                    } else {\n                        anchor = lineBox.topLeft().translate(-halfWidth, -size.height - padding);\n                    }\n                } else {\n                    if (position === LEFT) {\n                        anchor = lineBox.topLeft().translate(-size.width - padding, -halfHeight);\n                    } else {\n                        anchor = lineBox.topRight().translate(padding, -halfHeight);\n                    }\n                }\n                return anchor;\n            },\n            hide: function () {\n                this.element.hide();\n                this.point = null;\n            },\n            destroy: function () {\n                BaseTooltip.fn.destroy.call(this);\n                this.point = null;\n            }\n        });\n        var Aggregates = {\n            min: function (values) {\n                var min = MAX_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        min = math.min(min, n);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var max = MIN_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        max = math.max(max, n);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length, sum = 0, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        sum += n;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length, count = 0, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var result = values[0], count = countNumbers(values);\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        return val;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function DefaultAggregates() {\n            this._defaults = {};\n        }\n        DefaultAggregates.prototype = {\n            register: function (seriesTypes, aggregates) {\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        };\n        DefaultAggregates.current = new DefaultAggregates();\n        var Selection = Observable.extend({\n            init: function (chart, categoryAxis, options) {\n                var that = this, chartElement = chart.element, categoryAxisLineBox = categoryAxis.lineBox(), valueAxis = that.getValueAxis(categoryAxis), valueAxisLineBox = valueAxis.lineBox(), selectorPrefix = '.' + CSS_PREFIX, wrapper, padding;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({}, that.options, options);\n                options = that.options;\n                that.chart = chart;\n                that.chartElement = chartElement;\n                that.categoryAxis = categoryAxis;\n                that._dateAxis = that.categoryAxis instanceof DateCategoryAxis;\n                that.valueAxis = valueAxis;\n                if (that._dateAxis) {\n                    deepExtend(options, {\n                        min: toDate(options.min),\n                        max: toDate(options.max),\n                        from: toDate(options.from),\n                        to: toDate(options.to)\n                    });\n                }\n                that.template = Selection.template;\n                if (!that.template) {\n                    that.template = Selection.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'selector\\' ' + 'style=\\'width: #= d.width #px; height: #= d.height #px;' + ' top: #= d.offset.top #px; left: #= d.offset.left #px;\\'>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'selection\\'>' + '<div class=\\'' + CSS_PREFIX + 'selection-bg\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'leftHandle\\'><div></div></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'rightHandle\\'><div></div></div>' + '</div></div>');\n                }\n                padding = {\n                    left: parseInt(chartElement.css('paddingLeft'), 10),\n                    right: parseInt(chartElement.css('paddingTop'), 10)\n                };\n                that.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height(),\n                    padding: padding,\n                    offset: {\n                        left: valueAxisLineBox.x2 + padding.left,\n                        top: valueAxisLineBox.y1 + padding.right\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n                if (that.options.visible) {\n                    that.wrapper = wrapper = $(that.template(that.options)).appendTo(chartElement);\n                    that.selection = wrapper.find(selectorPrefix + 'selection');\n                    that.leftMask = wrapper.find(selectorPrefix + 'mask').first();\n                    that.rightMask = wrapper.find(selectorPrefix + 'mask').last();\n                    that.leftHandle = wrapper.find(selectorPrefix + 'leftHandle');\n                    that.rightHandle = wrapper.find(selectorPrefix + 'rightHandle');\n                    that.options.selection = {\n                        border: {\n                            left: parseFloat(that.selection.css('border-left-width'), 10),\n                            right: parseFloat(that.selection.css('border-right-width'), 10)\n                        }\n                    };\n                    that.leftHandle.css('top', (that.selection.height() - that.leftHandle.height()) / 2);\n                    that.rightHandle.css('top', (that.selection.height() - that.rightHandle.height()) / 2);\n                    that.set(that._index(options.from), that._index(options.to));\n                    that.bind(that.events, that.options);\n                    that.wrapper[0].style.cssText = that.wrapper[0].style.cssText;\n                    that.wrapper.on(MOUSEWHEEL_NS, proxy(that._mousewheel, that));\n                    if (kendo.UserEvents) {\n                        that.userEvents = new kendo.UserEvents(that.wrapper, {\n                            global: true,\n                            stopPropagation: true,\n                            multiTouch: true,\n                            fastTap: true,\n                            press: proxy(that._press, that),\n                            start: proxy(that._start, that),\n                            move: proxy(that._move, that),\n                            end: proxy(that._end, that),\n                            tap: proxy(that._tap, that),\n                            gesturestart: proxy(that._gesturechange, that),\n                            gesturechange: proxy(that._gesturechange, that)\n                        });\n                    } else {\n                        that.leftHandle.add(that.rightHandle).removeClass(CSS_PREFIX + 'handle');\n                    }\n                }\n            },\n            events: [\n                SELECT_START,\n                SELECT,\n                SELECT_END\n            ],\n            options: {\n                visible: true,\n                mousewheel: { zoom: BOTH },\n                min: MIN_VALUE,\n                max: MAX_VALUE\n            },\n            destroy: function () {\n                var that = this, userEvents = that.userEvents;\n                if (userEvents) {\n                    userEvents.destroy();\n                }\n                clearTimeout(that._mwTimeout);\n                that._state = null;\n                if (that.wrapper) {\n                    that.wrapper.remove();\n                }\n            },\n            _rangeEventArgs: function (range) {\n                var that = this;\n                return {\n                    axis: that.categoryAxis.options,\n                    from: that._value(range.from),\n                    to: that._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var that = this, options = that.options, target = $(e.event.target), args;\n                if (that._state || !target) {\n                    return;\n                }\n                that.chart._unsetActivePoint();\n                that._state = {\n                    moveTarget: target.parents('.k-handle').add(target).first(),\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: that._index(options.from),\n                        to: that._index(options.to)\n                    }\n                };\n                args = that._rangeEventArgs({\n                    from: that._index(options.from),\n                    to: that._index(options.to)\n                });\n                if (that.trigger(SELECT_START, args)) {\n                    that.userEvents.cancel();\n                    that._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    var target = $(e.event.target);\n                    handle = target.parents('.k-handle').add(target).first();\n                }\n                handle.addClass('k-handle-active');\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, state = that._state, options = that.options, categories = that.categoryAxis.options.categories, from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), delta = state.startLocation - e.x.location, range = state.range, oldRange = {\n                        from: range.from,\n                        to: range.to\n                    }, span = range.to - range.from, target = state.moveTarget, scale = that.wrapper.width() / (categories.length - 1), offset = math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                e.preventDefault();\n                if (target.is('.k-selection, .k-selection-bg')) {\n                    range.from = math.min(math.max(min, from - offset), max - span);\n                    range.to = math.min(range.from + span, max);\n                } else if (target.is('.k-leftHandle')) {\n                    range.from = math.min(math.max(min, from - offset), max - 1);\n                    range.to = math.max(range.from + 1, range.to);\n                } else if (target.is('.k-rightHandle')) {\n                    range.to = math.min(math.max(min + 1, to - offset), max);\n                    range.from = math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.move(range.from, range.to);\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                var range = this._state.range;\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        moveTarget.removeClass('k-handle-active');\n                    }\n                    delete this._state;\n                }\n                this.set(range.from, range.to);\n                this.trigger(SELECT_END, this._rangeEventArgs(range));\n            },\n            _gesturechange: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, chart = that.chart, state = that._state, options = that.options, categoryAxis = that.categoryAxis, range = state.range, p0 = chart._toModelCoordinates(e.touches[0].x.location).x, p1 = chart._toModelCoordinates(e.touches[1].x.location).x, left = math.min(p0, p1), right = math.max(p0, p1);\n                e.preventDefault();\n                state.moveTarget = null;\n                range.from = categoryAxis.pointCategoryIndex(new dataviz.Point2D(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new dataviz.Point2D(right)) || options.max;\n                that.move(range.from, range.to);\n            },\n            _tap: function (e) {\n                var that = this, options = that.options, coords = that.chart._eventCoordinates(e), categoryAxis = that.categoryAxis, categoryIx = categoryAxis.pointCategoryIndex(new dataviz.Point2D(coords.x, categoryAxis.box.y1)), from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), span = to - from, mid = from + span / 2, offset = math.round(mid - categoryIx), range = {}, rightClick = e.event.which === 3;\n                if (that._state || rightClick) {\n                    return;\n                }\n                e.preventDefault();\n                that.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = math.min(math.max(min, from - offset), max - span);\n                range.to = math.min(range.from + span, max);\n                that._start(e);\n                if (that._state) {\n                    that._state.range = range;\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                    that._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var that = this, options = that.options, delta = mwDelta(e);\n                that._start({ event: { target: that.selection } });\n                if (that._state) {\n                    var range = that._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (that.expand(delta)) {\n                        that.trigger(SELECT, {\n                            axis: that.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: that._value(range.from),\n                            to: that._value(range.to)\n                        });\n                    }\n                    if (that._mwTimeout) {\n                        clearTimeout(that._mwTimeout);\n                    }\n                    that._mwTimeout = setTimeout(function () {\n                        that._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var that = this, options = that.options, offset = options.offset, padding = options.padding, border = options.selection.border, leftMaskWidth, rightMaskWidth, box, distance;\n                box = that._slot(from);\n                leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                that.leftMask.width(leftMaskWidth);\n                that.selection.css('left', leftMaskWidth);\n                box = that._slot(to);\n                rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                that.rightMask.width(rightMaskWidth);\n                distance = options.width - rightMaskWidth;\n                if (distance != options.width) {\n                    distance += border.right;\n                }\n                that.rightMask.css('left', distance);\n                that.selection.width(math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0));\n            },\n            set: function (from, to) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max);\n                from = limitValue(that._index(from), min, max);\n                to = limitValue(that._index(to), from + 1, max);\n                if (options.visible) {\n                    that.move(from, to);\n                }\n                options.from = that._value(from);\n                options.to = that._value(to);\n            },\n            expand: function (delta) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max), zDir = options.mousewheel.zoom, from = that._index(options.from), to = that._index(options.to), range = {\n                        from: from,\n                        to: to\n                    }, oldRange = deepExtend({}, range);\n                if (that._state) {\n                    range = that._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes, axesCount = axes.length, i, axis;\n                for (i = 0; i < axesCount; i++) {\n                    axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            }\n        });\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                key: 'none',\n                lock: 'none'\n            },\n            start: function (e) {\n                this._active = acceptKey(e.event, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var plotArea = this.plotArea;\n                var axisRanges = this.axisRanges;\n                var range;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() != position) {\n                    var axes = plotArea.axes;\n                    var axis;\n                    var range;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        axis = axes[idx];\n                        if (position == X && !axis.options.vertical || position == Y && axis.options.vertical) {\n                            range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this._marquee = $('<div class=\\'k-marquee\\'><div class=\\'k-marquee-color\\'></div></div>');\n            },\n            options: {\n                key: 'shift',\n                lock: 'none'\n            },\n            start: function (e) {\n                if (acceptKey(e.event, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._toModelCoordinates(e.x.client, e.y.client);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var elementOffset = this._elementOffset();\n                        clipBox.translate(elementOffset.left, elementOffset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        this._marquee.appendTo(document.body).css({\n                            left: e.x.client + 1,\n                            top: e.y.client + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var chartOffset = chartElement.offset();\n                return {\n                    left: parseInt(chartElement.css('paddingTop'), 10) + chartOffset.left,\n                    top: parseInt(chartElement.css('paddingLeft'), 10) + chartOffset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var selectionPosition = this._selectionPosition(e);\n                    this._marquee.css(selectionPosition);\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset.left;\n                    selectionPosition.top -= elementOffset.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this._marquee.remove();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this._marquee.remove();\n                delete this._marquee;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        axisRanges.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = math.min(e.x.startLocation, e.x.location);\n                var top = math.min(e.y.startLocation, e.y.location);\n                var width = math.abs(e.x.initialDelta);\n                var height = math.abs(e.y.initialDelta);\n                var clipBox = this._zoomPaneClipBox;\n                if (lock == X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock == Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (e.x.location > clipBox.x2) {\n                    width = clipBox.x2 - e.x.startLocation;\n                }\n                if (e.x.location < clipBox.x1) {\n                    width = e.x.startLocation - clipBox.x1;\n                }\n                if (e.y.location > clipBox.y2) {\n                    height = clipBox.y2 - e.y.startLocation;\n                }\n                if (e.y.location < clipBox.y1) {\n                    height = e.y.startLocation - clipBox.y1;\n                }\n                return {\n                    left: math.max(left, clipBox.x1),\n                    top: math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            }\n        });\n        var SeriesAggregator = function (series, binder, defaultAggregates) {\n            var sa = this, canonicalFields = binder.canonicalFields(series), valueFields = binder.valueFields(series), sourceFields = binder.sourceFields(series, canonicalFields), seriesFields = sa._seriesFields = [], defaults = defaultAggregates.query(series.type), rootAggregate = series.aggregate || defaults, i;\n            sa._series = series;\n            sa._binder = binder;\n            for (i = 0; i < canonicalFields.length; i++) {\n                var field = canonicalFields[i], fieldAggregate;\n                if (typeof rootAggregate === OBJECT) {\n                    fieldAggregate = rootAggregate[field];\n                } else if (i === 0 || inArray(field, valueFields)) {\n                    fieldAggregate = rootAggregate;\n                } else {\n                    break;\n                }\n                if (fieldAggregate) {\n                    seriesFields.push({\n                        canonicalName: field,\n                        name: sourceFields[i],\n                        transform: isFn(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                    });\n                }\n            }\n        };\n        SeriesAggregator.prototype = {\n            aggregatePoints: function (srcPoints, group) {\n                var sa = this, data = sa._bindPoints(srcPoints || []), series = sa._series, seriesFields = sa._seriesFields, i, field, srcValues, value, firstDataItem = data.dataItems[0], result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (i = 0; i < seriesFields.length; i++) {\n                    field = seriesFields[i];\n                    srcValues = sa._bindField(data.values, field.canonicalName);\n                    value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && typeof value === OBJECT && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            ensureTree(field.name, result);\n                            kendo.setter(field.name)(result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var sa = this, binder = sa._binder, series = sa._series, values = [], dataItems = [], i, pointIx;\n                for (i = 0; i < points.length; i++) {\n                    pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [], count = data.length, i, item, value, valueFields;\n                for (i = 0; i < count; i++) {\n                    item = data[i];\n                    valueFields = item.valueFields;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        };\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n            },\n            slot: function (from, to, limit) {\n                if (!defined(limit)) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var result, ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y), ua;\n            if (u_b !== 0) {\n                ua = ua_t / u_b;\n                result = new Point2D(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series, i, seriesLength = series.length, seriesType, seriesDefaults = options.seriesDefaults, commonDefaults = deepExtend({}, options.seriesDefaults), themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {}, commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (i = 0; i < seriesLength; i++) {\n                seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function applySeriesColors(options) {\n            var series = options.series, colors = options.seriesColors || [], i, currentSeries, seriesColor, defaults;\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                seriesColor = colors[i % colors.length];\n                currentSeries.color = currentSeries.color || seriesColor;\n                defaults = currentSeries._defaults;\n                if (defaults) {\n                    defaults.color = defaults.color || seriesColor;\n                }\n            }\n        }\n        function resolveAxisAliases(options) {\n            var alias;\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                alias = this + 'Axes';\n                if (options[alias]) {\n                    options[this + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            });\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                var axisName = this + 'Axis', axes = [].concat(options[axisName]), axisDefaults = options.axisDefaults || {};\n                axes = $.map(axes, function (axisOptions) {\n                    var axisColor = (axisOptions || {}).color;\n                    var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                        line: { color: axisColor },\n                        labels: { color: axisColor },\n                        title: { color: axisColor }\n                    }, axisOptions);\n                    delete result[axisName];\n                    return result;\n                });\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            });\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length, categories = 0, i;\n            for (i = 0; i < seriesCount; i++) {\n                categories = math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        extend($.easing, {\n            easeOutElastic: function (n, d, first, diff) {\n                var s = 1.70158, p = 0, a = diff;\n                if (n === 0) {\n                    return first;\n                }\n                if (n === 1) {\n                    return first + diff;\n                }\n                if (!p) {\n                    p = 0.5;\n                }\n                if (a < math.abs(diff)) {\n                    a = diff;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * math.PI) * math.asin(diff / a);\n                }\n                return a * math.pow(2, -10 * n) * math.sin((n * 1 - s) * (1.1 * math.PI) / p) + diff + first;\n            }\n        });\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        function getDateField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field, value = row[key];\n            if (!value) {\n                value = toDate(getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function toDate(value) {\n            var result, i;\n            if (value instanceof Date) {\n                result = value;\n            } else if (typeof value === STRING) {\n                result = kendo.parseDate(value) || new Date(value);\n            } else if (value) {\n                if (isArray(value)) {\n                    result = [];\n                    for (i = 0; i < value.length; i++) {\n                        result.push(toDate(value[i]));\n                    }\n                } else {\n                    result = new Date(value);\n                }\n            }\n            return result;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                return map(value, toTime);\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function addDuration(date, value, unit, weekStartDay) {\n            var result = date, hours;\n            if (date) {\n                date = toDate(date);\n                hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    kendo.date.adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    date = new Date(date);\n                    date.setUTCMinutes(0, 0, 0);\n                    result = addTicks(date, value * TIME_PER_HOUR);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                }\n                if (result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            var day = date.getDay(), daysToSubtract = 0;\n            if (!isNaN(day)) {\n                weekStartDay = weekStartDay || 0;\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function floorDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            return addDuration(date, 0, unit, weekStartDay);\n        }\n        function ceilDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b, offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var index;\n            var date = toDate(value);\n            var startDate = toDate(start);\n            if (baseUnit == MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit == YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit == DAYS || baseUnit == WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length, box, i, axisBox;\n            if (length > 0) {\n                for (i = 0; i < length; i++) {\n                    axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || Box2D();\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0, high = sortedDates.length - 1, i, currentDate;\n            while (low <= high) {\n                i = math.floor((low + high) / 2);\n                currentDate = sortedDates[i];\n                if (currentDate < date) {\n                    low = i + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = i - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[i - 1], date)) {\n                    i--;\n                }\n                return i;\n            }\n            if (sortedDates[i] <= date) {\n                return i;\n            } else {\n                return i - 1;\n            }\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function countNumbers(values) {\n            var length = values.length, count = 0, i, num;\n            for (i = 0; i < length; i++) {\n                num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        function axisRanges(axes) {\n            var i, axis, axisName, ranges = {};\n            for (i = 0; i < axes.length; i++) {\n                axis = axes[i];\n                axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function evalOptions(options, context, state, dryRun) {\n            var property, propValue, excluded, defaults, depth, needsEval = false;\n            state = state || {};\n            excluded = state.excluded = state.excluded || [];\n            defaults = state.defaults = state.defaults || {};\n            depth = state.depth = state.depth || 0;\n            if (depth > MAX_EXPAND_DEPTH) {\n                return;\n            }\n            for (property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    propValue = options[property];\n                    if (isFn(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (typeof propValue === OBJECT) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!isFn(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        function filterSeriesByType(series, types) {\n            var i, currentSeries, result = [];\n            types = [].concat(types);\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                if (inArray(currentSeries.type, types)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function indexOf(item, arr) {\n            if (item instanceof Date) {\n                for (var i = 0, length = arr.length; i < length; i++) {\n                    if (dateEquals(arr[i], item)) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return $.inArray(item, arr);\n            }\n        }\n        function sortDates(dates, comparer) {\n            comparer = comparer || dateComparer;\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            var i, dates = sortDates(srcDates, comparer), length = dates.length, result = length > 0 ? [dates[0]] : [];\n            comparer = comparer || dateComparer;\n            for (i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type, dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function transpose(rows) {\n            var result = [], rowCount = rows.length, rowIx, row, colIx, colCount;\n            for (rowIx = 0; rowIx < rowCount; rowIx++) {\n                row = rows[rowIx];\n                colCount = row.length;\n                for (colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function ensureTree(fieldName, target) {\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.'), path = '', val;\n                while (parts.length > 1) {\n                    path += parts.shift();\n                    val = kendo.getter(path)(target) || {};\n                    kendo.setter(path)(target, val);\n                    path += '.';\n                }\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (typeof value === STRING) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value) && pointData.fields.visible !== false) {\n                    sum += math.abs(value);\n                }\n            }\n            return sum;\n        }\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient != 'none';\n        }\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            var axisRange;\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var accept = key == 'none' && !(e.ctrlKey || e.shiftKey || e.altKey) || e[key + 'Key'];\n            return accept;\n        }\n        function preloadFonts(options, callback) {\n            var fonts = [];\n            fetchFonts(options, fonts);\n            kendo.util.loadFonts(fonts, callback);\n        }\n        function fetchFonts(options, fonts, state) {\n            var MAX_DEPTH = 5;\n            state = state || { depth: 0 };\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        }\n        function clearMissingValues(originalOptions, options) {\n            var fieldValue, originalValue, field, nullValue;\n            for (field in options) {\n                fieldValue = options[field];\n                originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isPlainObject(fieldValue)) {\n                        if (isPlainObject(fieldValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        dataviz.ui.plugin(Chart);\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        deepExtend(dataviz, {\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            CategoryAxis: CategoryAxis,\n            ChartAxis: ChartAxis,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            ShapeElement: ShapeElement,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            addDuration: addDuration,\n            areNumbers: areNumbers,\n            axisGroupBox: axisGroupBox,\n            categoriesCount: categoriesCount,\n            ceilDate: ceilDate,\n            countNumbers: countNumbers,\n            duration: duration,\n            ensureTree: ensureTree,\n            indexOf: indexOf,\n            isNumber: isNumber,\n            floorDate: floorDate,\n            filterSeriesByType: filterSeriesByType,\n            hasValue: hasValue,\n            lteDateIndex: lteDateIndex,\n            evalOptions: evalOptions,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray,\n            sortDates: sortDates,\n            startOfWeek: startOfWeek,\n            transpose: transpose,\n            toDate: toDate,\n            toTime: toTime,\n            uniqueDates: uniqueDates\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}