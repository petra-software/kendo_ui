{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","anyHasZIndex","elements","idx","defined","zIndex","hasGradientOverlay","overlay","gradient","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","axisGroupBox","axes","axisBox","contentBox","wrap","clone","Box","paneAnchor","pane","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","filterSeriesByType","types","currentSeries","result","seriesTypes","concat","type","equalsIgnoreCase","a","b","toLowerCase","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","appendIfNotNull","array","element","singleItemOrArray","getDateField","intlService","parseDate","groupSeries","axis","axisIx","grep","s","categoryAxis","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","name","min","range","createDiv","className","closestHandle","hasClasses","stopPropagation","tooltipAlignment","angle","horizontal","vertical","radians","dataviz","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","abs","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","total","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","Y","X","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","limitValue","append","styleValue","CategoryAxis","BoxElement","DateCategoryAxis","elementStyles","bindEvents","services","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","GeometryPoint","transform","ChartAxis","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","ZERO","INTERPOLATE","GAP","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","SERIES_CLICK","SERIES_HOVER","PLOT_AREA_CLICK","PLOT_AREA_HOVER","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","ABOVE","BELOW","LinePoint","LineSegment","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegmentMixin","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","plotArea","_plotArea","visual","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","item","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","ref","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","stack","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","valueAxis","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","clip","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","limitPoints","limitPoint","limittedSlot","limitSlot","equals","reverse","crossingValues","axisCrossingValues","axisIndex","slotX","slotY","callback","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","padding","HIGHLIGHT_ZINDEX","visualPoints","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","seriesMissingValues","dir","revDir","justified","curveProcessor","segments","curve","CurveProcessor","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","segment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","firstPoint","lastPoint","valueAxisLineBox","lineBox","categoryAxisLineBox","stackPoints","_linePoints","end","createArea","createLine","lineCap","fill","prevSegment","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_outOfRangeMinPoint","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","noclip","textOptions","labelBox","top","bottom","alignToClipBox","start","parentBox","createLabel","customVisual","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","gap","spacing","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","xAxis","yAxisName","yAxis","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","chartContainer","titleOptions","Title","buildTitle","appendAxis","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","panes","paneOptions","panesLength","paneIndex","currentCrosshair","removeCrosshairs","splice","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","redraw","panesArray","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","oPoints","cPoints","lhPoints","oSlot","cSlot","fromBox","toBox","createSegments","summary","totalCategories","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","categoryField","aggregateSeries","filterSeries","minCategory","srcCategories","totalRangeIndices","outOfRangePoints","ceil","_outOfRangeMaxPoint","_seriesMax","aggregatorSeries","srcData","outOfRangeMinIdx","outOfRangeMaxIdx","getFn","outOfRangeMinCategory","outOfRangeMaxCategory","aggregator","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","updateAxisOptions","axesOptions","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","leave","_unsetActivePoint","renderChildren","createItems","userAlign","getService","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","_mousewheelHandler","mousewheel","_mousewheel","obj","_domEvents","DomEventsBuilder","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","edge","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotSector","slotAngle","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initSurface","_initHandlers","bindCategories","FontLoader","preloadFonts","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","resize","force","_resize","_noTransitionsRedraw","_model","findAxisByName","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","chartArea","elementSize","renderAs","Surface","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","originalChartArea","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","_hasSelection","_selections","selections","select","addDuration","weekStartDay","_selectStart","_select","_selectEnd","_clickHandler","_click","_surfaceMouseenterHandler","_mouseover","_surfaceMouseleaveHandler","_mouseout","_mousemove","throttle","removeObserver","requiresHandlers","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","domEvents","cancel","_stopDragEvent","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","_startNavigation","_suppressHover","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","_activePoint","_propagateClick","_startHover","handlingTap","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","_trackCrosshairs","_trackSharedTooltip","pointArgs","hoverArgs","_tooltipCategoryIx","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","onAxis","dataLength","dataIx","dataRow","uniqueCategories","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartPane","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","unbind","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findPaneByName","findPaneByIndex","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","_seriesOptions","on","_mouseleave","relatedTarget","themes","themeName","autoTheme","_initChart","_createChart","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","ExportMixin","PDFMixin","plugin","action","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","css","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_pane","chartsVisual","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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ACA4L,GACAC,GACA9N,GACAE,GACAC,GACAC,GACA9B,GACAyP,GACAC,GACAC,GACAC,GACAC,GACAC,GACA9B,GACA+B,GACAlG,GACA9D,GACAiK,GACAC,GACAC,GACA9H,GACAjC,GACAgK,GACAC,GACA1I,GACA2I,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAuBAC,GAkBAC,GA8EA1H,GA+GA2H,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAaAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GA0EAC,GACAC,GAqGAC,GAMA7U,GA2CA8U,GA+cAC,GAuBAC,GAgBAC,GACAC,GACAC,GAkQAC,GA6CAC,GAuDAC,GAuBAC,GAiEAC,GA4BAC,GAuBAC,GA8EAC,GAqEAC,GAOAC,GAOAC,GA2FAC,GAuGAC,GAwBAC,GAoGAC,GACAC,GAiOAC,GA6BAC,GAsBAC,GA4IAC,GAiMAC,GA2GAC,GAkOAC,GA2EAC,GA0FAC,GAUAC,GAiRAC,GA+DAC,GA2GAC,GAEAC,GAiHAC,GAsGAC,GAiDAC,GAmFAC,GAmGAC,GA8DAC,GA4IA5V,GAWA6V,GA2sBAC,GAQAC,GA2GAC,GAeAC,GAwDAC,GA4CAC,GAmDAC,GAKAC,GAuDAC,GA8HAC,GA2nBAC,GAgFAC,GAkEAC,GAoKAC,GAwCAC,GAqCAC,GAoGAC,GACAC,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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var Y = datavizConstants.Y;\n        var X = datavizConstants.X;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var limitValue = dataviz.limitValue;\n        var last = dataviz.last;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var grep = dataviz.grep;\n        var DateCategoryAxis = dataviz.DateCategoryAxis;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    isNumber(point.value) ? point.value : axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !this$1.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                if (!this.options.clip && this.options.limitPoints && this.points.length) {\n                    this.limitPoints();\n                }\n                this.box = targetBox;\n            },\n            limitPoints: function () {\n                var this$1 = this;\n                var categoryPoints = this.categoryPoints;\n                var points = categoryPoints[0].concat(last(categoryPoints));\n                for (var idx = 0; idx < points.length; idx++) {\n                    this$1.limitPoint(points[idx]);\n                }\n            },\n            limitPoint: function (point) {\n                var limittedSlot = this.categoryAxis.limitSlot(point.box);\n                if (!limittedSlot.equals(point.box)) {\n                    point.reflow(limittedSlot);\n                }\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = categories[categoryIx];\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true,\n            limitPoints: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            series: this.series\n                        });\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function (visualPoints) {\n                var linePoints = this.linePoints.concat(visualPoints || []);\n                var points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var points = this.calculateStepPoints(this.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(this.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var isInterpolate = chart.seriesMissingValues(this.series) === INTERPOLATE;\n                var reverse = categoryAxis.options.reverse;\n                var vertical = categoryAxis.options.vertical;\n                var dir = reverse ? 2 : 1;\n                var revDir = reverse ? 1 : 2;\n                var length = points.length;\n                var result = [];\n                for (var i = 1; i < length; i++) {\n                    var prevPoint = points[i - 1];\n                    var point = points[i];\n                    var prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    var markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new GeometryPoint(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new GeometryPoint(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new GeometryPoint(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new GeometryPoint(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new GeometryPoint(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new GeometryPoint(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegmentMixin = {\n            points: function () {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var stackPoints = this.stackPoints;\n                var points = this._linePoints(stackPoints);\n                var pos = invertAxes ? X : Y;\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!this.stackPoints && points.length > 1) {\n                    var firstPoint = points[0];\n                    var lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new GeometryPoint(end, firstPoint.y));\n                        points.push(new GeometryPoint(end, lastPoint.y));\n                    } else {\n                        points.unshift(new GeometryPoint(firstPoint.x, end));\n                        points.push(new GeometryPoint(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(AreaSegment.prototype, AreaSegmentMixin, { _linePoints: LineSegment.prototype.points });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                StepLineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, AreaSegmentMixin, { _linePoints: StepLineSegment.prototype.points });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                AreaSegment.fn.init.call(this, linePoints, [], currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.isStacked = isStacked;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new geometry.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = [];\n                    for (var idx = prevStrokeSegments.length - 1; idx >= 0; idx--) {\n                        var segment = prevStrokeSegments[idx];\n                        stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                    }\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new geometry.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var chart = this.parent;\n                var prevSegment = this.prevSegment;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var pos = invertAxes ? X : Y;\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        var ClusterLayout = ChartElement.extend({\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            var label = point.label;\n                            var note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name || '';\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref.axes;\n                var panes = ref.panes;\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            if (length > 0) {\n                for (var i = 0; i < length; i++) {\n                    var axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n                if (isNumber(categoryAxis.options.max)) {\n                    range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n                } else {\n                    range.max = series.data.length;\n                }\n                var currentSeries = deepExtend({}, series);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[minCategory],\n                            category: srcCategories[minCategory],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[range.max],\n                            category: srcCategories[range.max],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var this$1 = this;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var ref = categoryAxis.options;\n                var categories = ref.categories;\n                var srcCategories = ref.srcCategories;\n                if (srcCategories === void 0) {\n                    srcCategories = categories;\n                }\n                var dataItems = ref.dataItems;\n                if (dataItems === void 0) {\n                    dataItems = [];\n                }\n                var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                var aggregatorSeries = deepExtend({}, series);\n                var result = deepExtend({}, series);\n                var srcData = series.data;\n                var srcPoints = [];\n                var outOfRangeMinIdx = MIN_VALUE;\n                var outOfRangeMaxIdx = MAX_VALUE;\n                var getFn = getField;\n                var outOfRangeMinCategory, outOfRangeMaxCategory;\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (var i = 0; i < srcData.length; i++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        var categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx === outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx === outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                var aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                for (var i$1 = 0; i$1 < categories.length; i$1++) {\n                    data[i$1] = aggregator.aggregatePoints(srcPoints[i$1], categories[i$1]);\n                    if (srcPoints[i$1]) {\n                        dataItems[i$1] = data[i$1];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = { vertical: !invertAxes };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                this.createMarker();\n                this.createLabel();\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            labels: { margin: { left: 6 } },\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: { cursor: POINTER },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n                this.initOptions();\n                if (this.options.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n                var obj;\n                bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    var obj;\n                    unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                    this.chartElement.removeChild(this.wrapper);\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var axisOptions = ref.categoryAxis.options;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = axisOptions.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (axisOptions.categories.length - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[Math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        function stopPropagation(e) {\n            e.stopPropagation();\n        }\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({}, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }));\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category || '';\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        this.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: fields.category || '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new dataviz.CurveProcessor(false);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            points: function () {\n                var ref = this;\n                var polarAxis = ref.parent.plotArea.polarAxis;\n                var stackPoints = ref.stackPoints;\n                var center = polarAxis.box.center();\n                var points = LineSegment.prototype.points.call(this, stackPoints);\n                points.unshift([\n                    center.x,\n                    center.y\n                ]);\n                points.push([\n                    center.x,\n                    center.y\n                ]);\n                return points;\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, null, false, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, [], currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, { clip: false });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            points: function () {\n                return LineSegment.prototype.points.call(this, this.stackPoints);\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                    segment.options.closed = true;\n                } else {\n                    var stackPoints;\n                    if (isStacked && seriesIx > 0 && prevSegment) {\n                        stackPoints = prevSegment.linePoints.slice(0).reverse();\n                    }\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, stackPoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (children[i].sector) {\n                        slotSector.radius = children[i].sector.radius;\n                    }\n                    children[i].reflow(slotSector);\n                    children[i].sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                }\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            limitPoints: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            dataItem: dataItem,\n                            value: value,\n                            percentage: fields.percentage,\n                            category: fields.category,\n                            series: series\n                        });\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels));\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initSurface();\n                this._initHandlers();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                return {\n                    width: this.element.offsetWidth,\n                    height: this.element.offsetHeight\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var element = ref.element;\n                var size = dataviz.elementSize(element);\n                this._size = null;\n                return deepExtend({\n                    width: Math.floor(size.width) || datavizConstants.DEFAULT_WIDTH,\n                    height: Math.floor(size.height) || datavizConstants.DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _hasSelection: function () {\n                return this._selections && this._selections.length;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var min = 0;\n                        var max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = dataviz.addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var ref = this;\n                var element = ref.element;\n                var surface = ref.surface;\n                surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopDragEvent(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopDragEvent(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopDragEvent: function () {\n                return this._hasSelection();\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (!this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                if (this._activePoint === element) {\n                    this._propagateClick(element, e);\n                } else {\n                    if (!this._startHover(drawingElement, e)) {\n                        this._unsetActivePoint();\n                    }\n                    this._propagateClick(element, e);\n                }\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chartElement = this._drawingChartElement(element, e);\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(this, e)) {\n                    this._activePoint = point;\n                    var tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point;\n                }\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            seriesPoint.hover(this, e);\n                            this._activePoint = seriesPoint;\n                            var tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.box.containsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            hideElements: function () {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                highlight.hide();\n                tooltip.hide();\n                delete this._tooltipCategoryIx;\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = {};\n                var items = [];\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([PLOT_AREA_HOVER]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                var obj$1;\n                unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                this._destroyView();\n                if (this.surface) {\n                    this.surface.destroy();\n                    this.surface = null;\n                }\n                this._clearRedrawTimeout();\n            },\n            _destroyView: function () {\n                var ref = this;\n                var model = ref._model;\n                var selections = ref._selections;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                this._unsetActivePoint();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                var fieldValue = options[field];\n                var originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    var nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isObject(fieldValue)) {\n                        if (isObject(originalValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPlotArea: ChartPlotArea,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: areNumbers,\n            areNumbers: areNumbers,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName === 'sass' || themeName === 'default-v2' || themeName === 'bootstrap-v4') {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var point = currentSeries.data[pointIndex];\n                    if (point && defined(point.visible)) {\n                        point.visible = !point.visible;\n                    } else {\n                        var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                        var visible = pointVisibility[pointIndex];\n                        pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                    }\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, this.options.tooltip);\n            },\n            _tooltipleave: function () {\n                var chart = this._instance, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                this._redraw();\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            'exportVisual',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(e.style);\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}