{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals","1","10","100","2","20","200","3","30","300","4","40","400","5","50","500","6","60","600","7","70","700","8","80","800","9","90","900","1000","values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","mergeSort","a","cmp","merge","b","ai","bi","slice","left","right","Math","floor","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","returnSelf","DefaultAggregates","_defaults","intersection","b1","b2","ua","ua_t","y","u_b","Point2D","applySeriesDefaults","themeOptions","seriesType","baseOptions","series","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","type","data","tooltip","bar","column","rangeColumn","line","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","applySeriesColors","currentSeries","seriesColor","defaults","colors","seriesColors","resolveAxisAliases","alias","each","CATEGORY","VALUE","X","Y","applyAxisDefaults","themeAxisDefaults","axisDefaults","axisName","axes","concat","axisOptions","axisColor","labels","title","categoriesCount","seriesCount","categories","getField","row","getter","getDateField","toDate","STRING","parseDate","isArray","toTime","addDuration","date","unit","weekStartDay","hours","getHours","YEARS","getFullYear","adjustDST","MONTHS","getMonth","WEEKS","startOfWeek","DAYS","getDate","HOURS","setUTCMinutes","addTicks","TIME_PER_HOUR","MINUTES","TIME_PER_MINUTE","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","getMilliseconds","setMilliseconds","day","getDay","daysToSubtract","TIME_PER_DAY","floorDate","ceilDate","dateDiff","absoluteDateDiff","diff","offsetDiff","getTimezoneOffset","ticks","duration","TIME_PER_UNIT","dateIndex","start","baseUnit","baseUnitStep","startDate","timeIndex","singleItemOrArray","axisGroupBox","axisBox","contentBox","wrap","clone","Box2D","equalsIgnoreCase","dateEquals","appendIfNotNull","lteDateIndex","sortedDates","currentDate","low","high","countNumbers","num","count","areNumbers","axisRanges","axis","ranges","range","evalOptions","context","state","dryRun","property","propValue","excluded","depth","needsEval","MAX_EXPAND_DEPTH","hasOwnProperty","isFn","OBJECT","groupSeries","nameTemplate","groupIx","seriesClone","legacyTemplate","groupNameTemplate","dataLength","visibleInLegend","_slotCount","_groupIx","group","filterSeriesByType","types","indexOf","item","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","isDateAxis","sampleCategory","dateCategory","DATE","transpose","rows","rowIx","colIx","colCount","rowCount","ensureTree","fieldName","target","path","setter","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","parseFloat","fields","visible","abs","hasGradientOverlay","overlay","gradient","anyHasZIndex","elements","zIndex","preventDefault","_defaultPrevented","pointByCategoryName","points","category","hasValue","toChartAxisRanges","axisRange","acceptKey","mouseKey","accept","ctrlKey","shiftKey","altKey","preloadFonts","fetchFonts","MAX_DEPTH","keys","forEach","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","isPlainObject","paneAnchor","pane","anchor","PlotAreaFactory","BarLabel","LegendItem","LegendLayout","Legend","CategoryAxis","DateCategoryAxis","DateValueAxis","ClusterLayout","StackWrap","PointEventsMixin","NoteMixin","Bar","BarChartAnimation","FadeInAnimation","ErrorRangeCalculator","CategoricalChart","BarChart","RangeBar","RangeBarChart","BulletChart","Bullet","Target","ErrorBarBase","CategoricalErrorBar","ScatterErrorBar","LinePoint","Bubble","LineSegment","LineChartMixin","ClipAnimationMixin","LineChart","ClipAnimation","StepLineSegment","SplineSegment","AreaSegmentMixin","AreaSegment","AreaChart","SplineAreaSegment","StepAreaSegment","ScatterChart","ScatterLineChart","BubbleChart","Candlestick","CandlestickChart","OHLCPoint","OHLCChart","BoxPlotChart","BoxPlot","VerticalBoxPlot","PieSegment","PieChartMixin","PieChart","DonutSegment","DonutChart","WaterfallChart","WaterfallSegment","Pane","ChartContainer","PlotAreaBase","PlotAreaEventsMixin","CategoricalPlotArea","AxisGroupRangeTracker","XYPlotArea","PiePlotArea","DonutPlotArea","PieAnimation","BubbleAnimation","Highlight","BaseTooltip","Tooltip","SharedTooltip","Crosshair","CrosshairTooltip","Aggregates","Selection","Pannable","ZoomSelection","MousewheelZoom","SeriesAggregator","ChartAxis","noop","proxy","Observable","DataSource","Widget","ui","isFunction","Axis","AxisLabel","BoxElement","ChartElement","Color","CurveProcessor","FloatElement","Note","LogarithmicAxis","NumericAxis","RootElement","Ring","ShapeElement","ShapeBuilder","TextBox","Title","alignPathToPixel","autoFormat","eventTargetElement","getSpacing","interpolate","interpolateValue","mwDelta","geom","geometry","draw","NS","ABOVE","AREA","AUTO","FIT","AXIS_LABEL_CLICK","BAR","BAR_ALIGN_MIN_WIDTH","BAR_BORDER_BRIGHTNESS","BELOW","BLACK","BOTH","BOTTOM","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","CENTER","CHANGE","CIRCLE","CONTEXTMENU_NS","CLIP","COLOR","COLUMN","COORD_PRECISION","CROSS","CSS_PREFIX","CUSTOM","DATABOUND","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_PRECISION","DEFAULT_WIDTH","DEFAULT_ERROR_BAR_WIDTH","DONUT","DONUT_SECTOR_ANIM_DELAY","DRAG","DRAG_END","DRAG_START","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","FADEIN","FIRST","FROM","FUNNEL","GLASS","HORIZONTAL","HORIZONTAL_WATERFALL","INITIAL_ANIMATION_DURATION","INSIDE_BASE","INSIDE_END","INTERPOLATE","LEAVE","LEFT","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LINE","LINE_MARKER_SIZE","LINEAR","LOGARITHMIC","MAX","MIN","MIN_VALUE","MOUSELEAVE_NS","MOUSEMOVE_TRACKING","MOUSEMOVE_NS","MOUSEMOVE_DELAY","MOUSEWHEEL_DELAY","MOUSEWHEEL_NS","NOTE_CLICK","NOTE_HOVER","NOTE_TEXT","OHLC","OUTSIDE_END","PIE","PIE_SECTOR_ANIM_DELAY","PLOT_AREA_CLICK","PLOT_AREA_HOVER","POINTER","RANGE_BAR","RANGE_COLUMN","RENDER","RIGHT","ROUNDED_BEVEL","ROUNDED_GLASS","SCATTER","SCATTER_LINE","SELECT_START","SELECT","SELECT_END","SERIES_CLICK","SERIES_HOVER","START_SCALE","STEP","SMOOTH","STD_ERR","STD_DEV","SUMMARY_FIELD","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","years","months","weeks","days","minutes","seconds","TO","TOP","TOOLTIP_ANIMATION_DURATION","TOOLTIP_OFFSET","TOOLTIP_SHOW_DELAY","TOOLTIP_HIDE_DELAY","TOOLTIP_INVERSE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","WHITE","ZERO","ZOOM_ACCELERATION","ZOOM_START","ZOOM","ZOOM_END","BASE_UNITS","EQUALLY_SPACED_SERIES","DateLabelFormats","Chart","userOptions","dataSource","chart","destroy","fn","call","addClass","css","_originalOptions","_initTheme","_initSurface","bind","events","wrapper","_initDataSource","notify","themes","themeName","theme","seriesCopies","_applyDefaults","_dataChangeHandler","_onDataChanged","_bindCategories","_hasDataSource","_redraw","_attachEvents","autoBind","fetch","setDataSource","unbind","_hasData","items","renderAs","chartArea","legend","categoryAxis","highlight","negativeValues","transitions","valueAxis","plotArea","xAxis","yAxis","panes","pannable","zoomable","refresh","_bindSeries","getSize","dimensions","_resize","t","redraw","paneName","_model","_plotArea","findPane","getAxis","toggleHighlight","show","filter","seriesName","categoryName","_highlight","firstSeries","srcSeries","filterPoints","pointsBySeriesName","charts","togglePointHighlight","surface","_surfaceWrap","clear","resize","Surface","view","model","_getModel","_destroyView","renderVisual","traverse","animation","setup","visual","play","_tooltip","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","exportVisual","originalChartArea","_sharedTooltip","shared","_pannable","selection","_zoomSelection","mousewheel","_mousewheelZoom","_tooltipleave","hideCrosshairs","hide","_modelOptions","buildTitle","_createPlotArea","reflow","skipSeries","selections","_selections","_selectStartHandler","_selectStart","_selectHandler","_select","_selectEndHandler","_selectEnd","select","vertical","justified","_mouseover","_mouseout","on","_click","_mousewheel","_mouseleave","_mousemove","throttle","_shouldAttachMouseMove","UserEvents","_userEvents","global","multiTouch","fastTap","tap","_tap","_start","move","_move","end","_end","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","_gestureDistance","distance","_unsetActivePoint","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","args","mousewheelZoom","delta","originalEvent","updateRanges","zoom","_drawingChartElement","leave","_events","coords","_eventCoordinates","backgroundContainsPoint","_startNavigation","currentAxis","_navState","pan","startLocation","location","translateRange","_endNavigation","prevented","totalDelta","origEvent","_mwTimeout","clearTimeout","setTimeout","scaleRange","chartEvent","findPointPane","cancel","_suppressHover","_getChartElement","match","eventTarget","chartElement","parent","aliasFor","closest","isTouch","client","clientX","clientY","_toModelCoordinates","offset","paddingLeft","parseInt","paddingTop","win","scrollLeft","top","scrollTop","drawingElement","_activePoint","_propagateClick","_startHover","click","point","tooltipOptions","isHighlighted","hover","tooltipTracking","_mouseMoveTracking","seriesPoint","containsPoint","getNearestPoint","seriesIx","off","_trackCrosshairs","_trackSharedTooltip","crosshairs","showAt","pointArgs","hoverArgs","pointCategoryIndex","_tooltipCategoryIx","pointsByCategoryIndex","eventArgs","categoryPoints","relatedTarget","_sourceSeries","grouped","processedSeries","_isBindable","_deferRedraw","support","vml","_clearRedrawTimeout","_redrawTimeout","clearInterval","seriesData","axisIx","categoriesData","definitions","_bindCategoryAxis","categoryIx","dataItems","_bindCategoryAxisFromSeries","s","onAxis","dataIx","dataRow","getFn","dateAxis","uniqueCategories","categoryField","_legendItemClick","seriesIndex","pointIndex","transitionsState","originalSeries","_legendItemHover","pointsBySeriesIndex","setOptions","_setEvents","ExportMixin","PDFMixin","_registry","register","seriesTypes","registry","_valueFields","_otherFields","_nullValue","_undefinedValue","otherFields","binder","_makeValue","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","content","barLabel","textBox","position","margin","padding","background","border","aboveAxis","delay","createVisual","noclip","targetBox","children","align","vAlign","x1","y1","x2","y2","rotation","bottom","alignToClipBox","clipBox","parentBox","paddingBox","createContainer","createMarker","createLabel","container","markerOptions","markerColor","markers","labelOptions","renderComplete","cursor","eventSink","_itemOverlay","Path","fromRect","toRect","fill","opacity","stroke","appendVisual","widget","that","customVisual","active","renderChildren","defaultVisual","addVisual","render","legendItem","Layout","spacing","lineSpacing","orientation","rect","bbox","clippedBBox","rectToBox","createItems","offsetX","offsetY","userAlign","shrinkToFit","innerElement","isVertical","reverse","hasItems","containerCustomReflow","containerReflow","containerBox","alignTarget","translate","_initFields","_initCategories","_ticks","outOfRangeMin","outOfRangeMax","definedMin","definedMax","srcCategories","ceil","majorGridLines","rangeIndices","totalRange","totalRangeIndices","limit","_seriesMax","getScale","lineBox","scale","getTickPositions","stepSize","positions","getLabelsTickPositions","tickPositions","getMajorTickPositions","unshift","labelTickIndex","label","arrangeLabels","hideOutOfRangeLabels","firstLabel","lastLabel","getTicks","majorTicks","getMinorTickPositions","minorTicks","getHash","_hash","getSlot","from","to","p1","p2","lineStart","slotBox","singleSlot","startValue","lineEnd","getCategory","categoryIndex","zoomRange","rate","totalMax","totalMin","labelsCount","labelsRange","skip","step","createAxisLabel","dataItem","axisLabelText","shouldRenderNote","limitRange","pointsRange","diffStart","diffEnd","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","dateFormats","autoBaseUnitSteps","maxDateGroups","parseNoteValue","rounds","cat","lastCat","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","datesRange","panRange","totalLimits","indicesRange","baseUnitIndex","autoBaseUnitStep","maxDiff","rangeDiff","stepIndex","rangeMax","rangeMin","autoUnit","stepOptions","unitSteps","nextStep","autoUnitIx","span","units","totalUnits","_timeScale","timeRange","maxCategory","lineSize","_collapse","nextDate","groups","upper","roundToNext","roundedStep","roundedDate","unitFormat","format","seriesMin","seriesMax","axisCrossingValue","axisCrossingValues","applyDefaults","timeUnits","baseUnitTime","autoMin","autoMax","userMajorUnit","majorUnit","autoMajorUnit","actualUnits","unitsToAdd","head","tail","minorUnit","getDivisions","stepValue","dir","startEdge","divisions","getValue","exact","limittedRange","endValue","gap","childBox","cluster","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","percentage","runningTotal","total","createNote","notes","noteText","note","_rendered","errorBar","labelText","labelTemplate","formatValue","owner","formatPointValue","errorBars","rectVisual","sender","getChart","Group","createRect","strokeOpacity","getBorderColor","dashType","lineJoin","createGradientOverlay","baseColor","createHighlight","highlightVisual","highlightVisualArgs","borderColor","brightness","_brightness","toHex","tooltipAnchor","tooltipWidth","tooltipHeight","isStacked","overlapsBox","overlaps","Animation","fromScale","origin","Point","transform","abort","scaleX","scaleY","AnimationFactory","easing","fadeTo","errorValue","initGlobalRanges","prototype","percentRegex","standardDeviationRegex","RegExp","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","globalRange","getStandardError","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","seriesCategoryAxis","valueAxisRanges","seriesPoints","seriesOptions","_evalSeries","invertAxes","clip","traverseDataPoints","addValue","pointOptions","pointType","plotValue","categoryPts","categorySum","otherValues","other","stack","otherStack","isStacked100","plotRange","positive","prevValue","isStackedBar","otherValue","seriesValueAxis","categoryAxisCrossingValue","stackLimits","stackName","pIx","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","addErrorBar","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","updateRange","createPoint","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","categorySlot","valueSlot","pointSlot","reflowPoint","reflowCategories","crossingValues","axisIndex","slotX","slotY","currentCategory","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","clusterType","stackType","stackWrap","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","stackAxis","zeroSlot","childrenLength","createAnimation","_setAnimationOptions","_setChildrenAnimation","pointVisual","fromOptions","toOptions","labelFrom","_createLabel","labelTo","rangeBar","plotLimits","wrapData","seriesItem","bulletOptions","shape","targetSlot","targetValueSlot","targetSlotX","targetSlotY","set","bodyVisual","endCaps","linePoints","valueBox","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","boxSize","createDefaultVisual","lineOptions","moveTo","lineTo","seriesAxes","marker","markerBorder","markerBox","_childBox","noteTargetBox","reflowLabel","alignTo","defaultColor","shadow","getElement","halfSize","Rect","showTooltip","radius","Circle","segment","closed","visualPoints","fromPoints","close","renderSegments","sortedPoints","pointCount","lastSegment","_segments","sortPoints","seriesMissingValues","createSegment","_addSegment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","clipPath","root","getRoot","animationPoints","_setEnd","segments","topRight","bottomRight","setX","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","revDir","curveProcessor","curve","process","firstPoint","lastPoint","valueAxisLineBox","categoryAxisLineBox","stackPoints","_linePoints","createArea","createLine","lineCap","prevSegment","_gapStackPoints","stackPoint","_stackPoints","currentSeriesIx","gapStackPoint","startIdx","endIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","missingValue","_maxSize","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","mid","ocSlot","lhSlot","open","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","oSlot","cSlot","oPoints","cPoints","lhPoints","lower","q1","median","q3","filterOutliers","outliers","mean","extremes","whiskerSlot","boxSlot","medianSlot","meanSlot","reflowBoxSlot","reflowWhiskerSlot","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","markersBorder","outlierValue","outerFence","reflowOutliers","sector","animationDelay","lp","labelWidth","labelHeight","labelsOptions","labelsDistance","angle","middle","expand","startAngle","innerRadius","ir","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","createRing","adjacentBox","createLegendItem","itemLabelOptions","pointVisible","legendOptions","inactiveItems","inactiveItemsLabels","legendItems","connectors","anglePerValue","explode","currentAngle","colorsCount","evalSegmentOptions","segmentOptions","seriesConfig","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","seriesConfigs","boxCenter","leftSideLabels","rightSideLabels","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","firstBox","lr","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelDistance","boxY","hAlignLabel","connectorLine","connectorsColor","centerPoint","sr","crossing","_connectorLines","seriesId","pointInCircle","originalX","direction","cx","cy","holeSize","totalSize","seriesWithoutSize","currentSize","createSegments","summary","totalCategories","fromBox","toBox","guid","createTitle","chartContainer","titleOptions","appendAxis","appendChart","empty","removeAxis","removeChart","pop","visualStyle","createGridLines","stackRoot","clipRoot","gridLines","j","altAxis","allAxes","vGridLines","hGridLines","createGradient","chartsBox","axisValueField","shouldClip","_clipBox","clipRect","unclipLabels","initSeries","createPanes","createCrosshairs","setTitle","currentPane","paneOptions","panesLength","paneIndex","currentCrosshair","crosshair","removeCrosshairs","matchingPane","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","groupAxes","paneAxes","paneIx","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","crossingAxes","valuesToAdd","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slot","slotEdge","targetEdge","alignAxes","anchorCrossings","paneId","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","overflowY","shrinked","fitAxes","paneBox","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","remainingHeight","remainingPanes","autoHeightPanes","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","bg","_bgVisual","MultiPath","paneByPoint","_dispatchEvent","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","reset","paneSeries","visibleSeries","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","aggregateSeries","filterSeries","minCategory","outOfRangePoints","_outOfRangeMinPoint","_outOfRangeMaxPoint","aggregator","outOfRangeMinCategory","outOfRangeMaxCategory","srcData","srcPoints","aggregatorSeries","outOfRangeMinIdx","outOfRangeMaxIdx","aggregatePoints","categoriesToAdd","update","grep","defaultPaneName","stackableChartOptions","axisSeries","unique","categoryAxes","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","_deferLabels","isJustified","axisType","defaultAxisRange","tracker","defaultRange","query","roundToMajorUnit","eventType","pointPane","updateAxisOptions","axesOptions","chartAxisRanges","chartRange","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","createPieChart","pieChart","createDonutChart","donutChart","_points","hasHighlight","toggleHandler","toggle","mobileScrollerSelector","padding-top","padding-right","padding-bottom","padding-left","attr","_mobileScroller","_clearShowTimeout","remove","_offset","_ensureElement","stop","animate","showTimeout","_padding","_chartPadding","_measure","chartPadding","chartOffset","zoomLevel","viewport","pageYOffset","documentElement","pageXOffset","movable","_fit","outerHeight","outerWidth","setStyle","pointColor","percBrightness","toggleClass","backgroundColor","borderWidth","_hideElement","appendTo","contains","fadeOut","always","_pointContent","tooltipTemplate","xLow","xHigh","yLow","yHigh","_pointAnchor","viewPortSize","html","sharedTemplate","categoryFormat","_content","_slotAnchor","hCenter","categoryText","stickyMode","moveLine","getBox","dim","axisLineBox","getAnchor","halfWidth","halfHeight","bottomLeft","topLeft","sumOrNull","avg","aggregates","getValueAxis","selectorPrefix","_dateAxis","find","leftMask","rightMask","leftHandle","rightHandle","_index","cssText","userEvents","stopPropagation","press","_press","add","removeClass","_state","_rangeEventArgs","_value","moveTarget","parents","handle","oldRange","is","p0","touches","rightClick","which","_slot","leftMaskWidth","rightMaskWidth","zDir","lock","_active","_panAxes","updatedAxes","_marquee","zoomPane","elementOffset","_zoomPane","_elementOffset","_zoomPaneClipBox","selectionPosition","_selectionPosition","_updateAxisRanges","initialDelta","defaultAggregates","fieldAggregate","sa","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","srcValues","_bindPoints","firstDataItem","_bindField","_axis","easeOutElastic","asin","sin","plugin","errorLow","errorHigh"],"mappings":"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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        function mergeSort(a, cmp) {\n            if (a.length < 2) {\n                return a.slice();\n            }\n            function merge(a, b) {\n                var r = [], ai = 0, bi = 0, i = 0;\n                while (ai < a.length && bi < b.length) {\n                    if (cmp(a[ai], b[bi]) <= 0) {\n                        r[i++] = a[ai++];\n                    } else {\n                        r[i++] = b[bi++];\n                    }\n                }\n                if (ai < a.length) {\n                    r.push.apply(r, a.slice(ai));\n                }\n                if (bi < b.length) {\n                    r.push.apply(r, b.slice(bi));\n                }\n                return r;\n            }\n            return function sort(a) {\n                if (a.length <= 1) {\n                    return a;\n                }\n                var m = Math.floor(a.length / 2);\n                var left = a.slice(0, m);\n                var right = a.slice(m);\n                left = sort(left);\n                right = sort(right);\n                return merge(left, right);\n            }(a);\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode,\n                mergeSort: mergeSort\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                e = e || {};\n                e.element = this;\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function () {\n                this.trigger('geometryChange', { element: this });\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'kendo.color',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [\n            {\n                id: 'dataviz.chart-polar',\n                name: 'Polar & Radar',\n                description: 'Support for Polar and Radar charts.',\n                depends: ['dataviz.chart.polar'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-funnel',\n                name: 'Funnel chart',\n                description: 'Support for Funnel chart.',\n                depends: ['dataviz.chart.funnel'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var each = $.each, isArray = $.isArray, isPlainObject = $.isPlainObject, map = $.map, math = Math, noop = $.noop, extend = $.extend, proxy = $.proxy, kendo = window.kendo, Class = kendo.Class, Observable = kendo.Observable, DataSource = kendo.data.DataSource, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, getter = kendo.getter, isFn = kendo.isFunction, template = kendo.template, dataviz = kendo.dataviz, Axis = dataviz.Axis, AxisLabel = dataviz.AxisLabel, Box2D = dataviz.Box2D, BoxElement = dataviz.BoxElement, ChartElement = dataviz.ChartElement, Color = kendo.drawing.Color, CurveProcessor = dataviz.CurveProcessor, FloatElement = dataviz.FloatElement, Note = dataviz.Note, LogarithmicAxis = dataviz.LogarithmicAxis, NumericAxis = dataviz.NumericAxis, Point2D = dataviz.Point2D, RootElement = dataviz.RootElement, Ring = dataviz.Ring, ShapeElement = dataviz.ShapeElement, ShapeBuilder = dataviz.ShapeBuilder, TextBox = dataviz.TextBox, Title = dataviz.Title, alignPathToPixel = dataviz.alignPathToPixel, autoFormat = dataviz.autoFormat, dateComparer = dataviz.dateComparer, eventTargetElement = dataviz.eventTargetElement, getSpacing = dataviz.getSpacing, inArray = dataviz.inArray, interpolate = dataviz.interpolateValue, mwDelta = dataviz.mwDelta, round = dataviz.round, util = kendo.util, append = util.append, defined = util.defined, last = util.last, limitValue = util.limitValue, sparseArrayLimits = util.sparseArrayLimits, sparseArrayMin = util.sparseArrayMin, sparseArrayMax = util.sparseArrayMax, renderTemplate = util.renderTemplate, valueOrDefault = util.valueOrDefault, geom = dataviz.geometry, draw = dataviz.drawing;\n        var NS = '.kendoChart', ABOVE = 'above', AREA = 'area', AUTO = 'auto', FIT = 'fit', AXIS_LABEL_CLICK = dataviz.AXIS_LABEL_CLICK, BAR = 'bar', BAR_ALIGN_MIN_WIDTH = 6, BAR_BORDER_BRIGHTNESS = 0.8, BELOW = 'below', BLACK = '#000', BOTH = 'both', BOTTOM = 'bottom', BOX_PLOT = 'boxPlot', BUBBLE = 'bubble', BULLET = 'bullet', CANDLESTICK = 'candlestick', CATEGORY = 'category', CENTER = 'center', CHANGE = 'change', CIRCLE = 'circle', CONTEXTMENU_NS = 'contextmenu' + NS, CLIP = dataviz.CLIP, COLOR = 'color', COLUMN = 'column', COORD_PRECISION = dataviz.COORD_PRECISION, CROSS = 'cross', CSS_PREFIX = 'k-', CUSTOM = 'custom', DATABOUND = 'dataBound', DATE = 'date', DAYS = 'days', DEFAULT_FONT = dataviz.DEFAULT_FONT, DEFAULT_HEIGHT = dataviz.DEFAULT_HEIGHT, DEFAULT_PRECISION = dataviz.DEFAULT_PRECISION, DEFAULT_WIDTH = dataviz.DEFAULT_WIDTH, DEFAULT_ERROR_BAR_WIDTH = 4, DONUT = 'donut', DONUT_SECTOR_ANIM_DELAY = 50, DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', ERROR_LOW_FIELD = 'errorLow', ERROR_HIGH_FIELD = 'errorHigh', X_ERROR_LOW_FIELD = 'xErrorLow', X_ERROR_HIGH_FIELD = 'xErrorHigh', Y_ERROR_LOW_FIELD = 'yErrorLow', Y_ERROR_HIGH_FIELD = 'yErrorHigh', FADEIN = 'fadeIn', FIRST = 'first', FROM = 'from', FUNNEL = 'funnel', GLASS = 'glass', HORIZONTAL = 'horizontal', HORIZONTAL_WATERFALL = 'horizontalWaterfall', HOURS = 'hours', INITIAL_ANIMATION_DURATION = dataviz.INITIAL_ANIMATION_DURATION, INSIDE_BASE = 'insideBase', INSIDE_END = 'insideEnd', INTERPOLATE = 'interpolate', LEAVE = 'leave', LEFT = 'left', LEGEND_ITEM_CLICK = 'legendItemClick', LEGEND_ITEM_HOVER = 'legendItemHover', LINE = 'line', LINE_MARKER_SIZE = 8, LINEAR = 'linear', LOGARITHMIC = 'log', MAX = 'max', MAX_EXPAND_DEPTH = 5, MAX_VALUE = Number.MAX_VALUE, MIN = 'min', MIN_VALUE = -Number.MAX_VALUE, MINUTES = 'minutes', MONTHS = 'months', MOUSELEAVE_NS = 'mouseleave' + NS, MOUSEMOVE_TRACKING = 'mousemove.tracking', MOUSEMOVE_NS = 'mousemove' + NS, MOUSEMOVE_DELAY = 20, MOUSEWHEEL_DELAY = 150, MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, NOTE_CLICK = dataviz.NOTE_CLICK, NOTE_HOVER = dataviz.NOTE_HOVER, NOTE_TEXT = 'noteText', OBJECT = 'object', OHLC = 'ohlc', OUTSIDE_END = 'outsideEnd', PIE = 'pie', PIE_SECTOR_ANIM_DELAY = 70, PLOT_AREA_CLICK = 'plotAreaClick', PLOT_AREA_HOVER = 'plotAreaHover', POINTER = 'pointer', RANGE_BAR = 'rangeBar', RANGE_COLUMN = 'rangeColumn', RENDER = 'render', RIGHT = 'right', ROUNDED_BEVEL = 'roundedBevel', ROUNDED_GLASS = 'roundedGlass', SCATTER = 'scatter', SCATTER_LINE = 'scatterLine', SECONDS = 'seconds', SELECT_START = 'selectStart', SELECT = 'select', SELECT_END = 'selectEnd', SERIES_CLICK = 'seriesClick', SERIES_HOVER = 'seriesHover', START_SCALE = 0.001, STEP = 'step', SMOOTH = 'smooth', STD_ERR = 'stderr', STD_DEV = 'stddev', STRING = 'string', SUMMARY_FIELD = 'summary', TIME_PER_SECOND = 1000, TIME_PER_MINUTE = 60 * TIME_PER_SECOND, TIME_PER_HOUR = 60 * TIME_PER_MINUTE, TIME_PER_DAY = 24 * TIME_PER_HOUR, TIME_PER_WEEK = 7 * TIME_PER_DAY, TIME_PER_MONTH = 31 * TIME_PER_DAY, TIME_PER_YEAR = 365 * TIME_PER_DAY, TIME_PER_UNIT = {\n                'years': TIME_PER_YEAR,\n                'months': TIME_PER_MONTH,\n                'weeks': TIME_PER_WEEK,\n                'days': TIME_PER_DAY,\n                'hours': TIME_PER_HOUR,\n                'minutes': TIME_PER_MINUTE,\n                'seconds': TIME_PER_SECOND\n            }, TO = 'to', TOP = 'top', TOOLTIP_ANIMATION_DURATION = 150, TOOLTIP_OFFSET = 5, TOOLTIP_SHOW_DELAY = 100, TOOLTIP_HIDE_DELAY = 100, TOOLTIP_INVERSE = 'chart-tooltip-inverse', VALUE = 'value', VERTICAL_AREA = 'verticalArea', VERTICAL_BOX_PLOT = 'verticalBoxPlot', VERTICAL_BULLET = 'verticalBullet', VERTICAL_LINE = 'verticalLine', WATERFALL = 'waterfall', WEEKS = 'weeks', WHITE = '#fff', X = 'x', Y = 'y', YEARS = 'years', ZERO = 'zero', ZOOM_ACCELERATION = 3, ZOOM_START = 'zoomStart', ZOOM = 'zoom', ZOOM_END = 'zoomEnd', BASE_UNITS = [\n                SECONDS,\n                MINUTES,\n                HOURS,\n                DAYS,\n                WEEKS,\n                MONTHS,\n                YEARS\n            ], EQUALLY_SPACED_SERIES = [\n                BAR,\n                COLUMN,\n                OHLC,\n                CANDLESTICK,\n                BOX_PLOT,\n                VERTICAL_BOX_PLOT,\n                BULLET,\n                RANGE_COLUMN,\n                RANGE_BAR,\n                WATERFALL,\n                HORIZONTAL_WATERFALL\n            ];\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var chart = this, options, dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(chart, element);\n                chart.element.addClass(CSS_PREFIX + this.options.name.toLowerCase()).css('position', 'relative');\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    userOptions.dataSource = undefined;\n                }\n                options = deepExtend({}, chart.options, userOptions);\n                chart._originalOptions = deepExtend({}, options);\n                chart._initTheme(options);\n                chart._initSurface();\n                chart.bind(chart.events, chart.options);\n                chart.wrapper = chart.element;\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                chart._initDataSource(userOptions);\n                kendo.notify(chart, dataviz.ui);\n            },\n            _initTheme: function (options) {\n                var chart = this, themes = dataviz.ui.themes || {}, themeName = options.theme, theme = themes[themeName] || themes[themeName.toLowerCase()], themeOptions = themeName && theme ? theme.chart : {}, seriesCopies = [], series = options.series || [], i;\n                for (i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                chart._applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    options.seriesColors = undefined;\n                }\n                chart.options = deepExtend({}, themeOptions, options);\n                applySeriesColors(chart.options);\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind(CHANGE, chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                preloadFonts(userOptions, function () {\n                    chart._redraw();\n                    chart._attachEvents();\n                });\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            items: function () {\n                return $();\n            },\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {\n                    visible: true,\n                    labels: {}\n                },\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {\n                    type: COLUMN,\n                    data: [],\n                    highlight: { visible: true },\n                    labels: {},\n                    negativeValues: { visible: false }\n                },\n                series: [],\n                seriesColors: null,\n                tooltip: { visible: false },\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            refresh: function () {\n                var chart = this;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            _resize: function () {\n                var t = this.options.transitions;\n                this.options.transitions = false;\n                this._redraw();\n                this.options.transitions = t;\n            },\n            redraw: function (paneName) {\n                var chart = this, pane, plotArea;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                if (paneName) {\n                    plotArea = chart._model._plotArea;\n                    pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    chart._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var highlight = this._highlight;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var seriesName, categoryName, points;\n                if (kendo.isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    if (isPlainObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        highlight.togglePointHighlight(points[idx], show);\n                    }\n                }\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    wrap.css('width', chartArea.width);\n                }\n                if (chartArea.height) {\n                    wrap.css('height', chartArea.height);\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = draw.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var chart = this, model = chart._getModel(), view;\n                chart._destroyView();\n                chart._model = model;\n                chart._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                chart._initSurface();\n                chart.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                chart._tooltip = chart._createTooltip();\n                chart._highlight = new Highlight(view);\n                chart._setupSelection();\n                chart._createPannable();\n                chart._createZoomSelection();\n                chart._createMousewheelZoom();\n                if (!chart._hasDataSource || chart._hasData || !chart.options.autoBind) {\n                    chart.trigger(RENDER);\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                var chart = this, options = chart.options;\n                return chart._plotArea instanceof CategoricalPlotArea && options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var chart = this, options = chart.options, element = chart.element, tooltip;\n                if (chart._sharedTooltip()) {\n                    tooltip = new SharedTooltip(element, chart._plotArea, options.tooltip);\n                } else {\n                    tooltip = new Tooltip(element, options.tooltip);\n                }\n                tooltip.bind(LEAVE, proxy(chart._tooltipleave, chart));\n                return tooltip;\n            },\n            _tooltipleave: function () {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            _getModel: function () {\n                var chart = this, options = chart.options, model = new RootElement(chart._modelOptions()), plotArea;\n                model.chart = chart;\n                Title.buildTitle(options.title, model);\n                plotArea = model._plotArea = chart._createPlotArea();\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var chart = this, options = chart.options, element = chart.element, height = math.floor(element.height()), width = math.floor(element.width());\n                chart._size = null;\n                return deepExtend({\n                    width: width || DEFAULT_WIDTH,\n                    height: height || DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var chart = this, options = chart.options;\n                return PlotAreaFactory.current.create(skipSeries ? [] : options.series, options);\n            },\n            _setupSelection: function () {\n                var chart = this, plotArea = chart._plotArea, axes = plotArea.axes, selections = chart._selections = [], selection, i, axis, min, max, options;\n                if (!chart._selectStartHandler) {\n                    chart._selectStartHandler = proxy(chart._selectStart, chart);\n                    chart._selectHandler = proxy(chart._select, chart);\n                    chart._selectEndHandler = proxy(chart._selectEnd, chart);\n                }\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        min = 0;\n                        max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        selection = new Selection(chart, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selection.bind(SELECT_START, chart._selectStartHandler);\n                        selection.bind(SELECT, chart._selectHandler);\n                        selection.bind(SELECT_END, chart._selectEndHandler);\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _attachEvents: function () {\n                var chart = this, element = chart.element, surface = chart.surface;\n                surface.bind('mouseenter', proxy(chart._mouseover, chart));\n                surface.bind('mouseleave', proxy(chart._mouseout, chart));\n                element.on(CONTEXTMENU_NS, proxy(chart._click, chart));\n                element.on(MOUSEWHEEL_NS, proxy(chart._mousewheel, chart));\n                element.on(MOUSELEAVE_NS, proxy(chart._mouseleave, chart));\n                chart._mousemove = kendo.throttle(proxy(chart._mousemove, chart), MOUSEMOVE_DELAY);\n                if (chart._shouldAttachMouseMove()) {\n                    element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n                if (kendo.UserEvents) {\n                    chart._userEvents = new kendo.UserEvents(element, {\n                        global: true,\n                        multiTouch: true,\n                        fastTap: true,\n                        tap: proxy(chart._tap, chart),\n                        start: proxy(chart._start, chart),\n                        move: proxy(chart._move, chart),\n                        end: proxy(chart._end, chart),\n                        gesturestart: proxy(chart._gesturestart, chart),\n                        gesturechange: proxy(chart._gesturechange, chart),\n                        gestureend: proxy(chart._gestureend, chart)\n                    });\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function () {\n                if (this._zooming) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var chart = this;\n                var mousewheelZoom = chart._mousewheelZoom;\n                if (mousewheelZoom) {\n                    e.preventDefault();\n                    var previousGestureDistance = chart._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = math.round(scaleDelta * 10);\n                        chart._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(chart._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                            if (!chart._zooming) {\n                                chart._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !chart.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var chart = this, events = chart._events, coords = chart._eventCoordinates(e);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (defined(events[DRAG_START] || events[DRAG] || events[DRAG_END])) {\n                    chart._startNavigation(e, coords, DRAG_START);\n                }\n                if (chart._pannable && chart._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                }\n                if (chart._zoomSelection) {\n                    if (chart._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var chart = this, state = chart._navState, pannable = chart._pannable, axes, ranges = {}, i, currentAxis, axisName, axis, delta;\n                if (pannable) {\n                    e.preventDefault();\n                    ranges = pannable.move(e);\n                    if (ranges && !chart.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    e.preventDefault();\n                    axes = state.axes;\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        axisName = currentAxis.options.name;\n                        if (axisName) {\n                            axis = currentAxis.options.vertical ? e.y : e.x;\n                            delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges;\n                    chart.trigger(DRAG, {\n                        axisRanges: ranges,\n                        originalEvent: e\n                    });\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _mousewheel: function (e) {\n                var chart = this, origEvent = e.originalEvent, prevented, delta = mwDelta(e), totalDelta, state = chart._navState, axes, i, currentAxis, axisName, ranges = {}, mousewheelZoom = chart._mousewheelZoom, coords = chart._eventCoordinates(origEvent);\n                if (!chart._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (chart._zooming || !chart.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!chart._zooming) {\n                            chart._unsetActivePoint();\n                            chart.surface.suspendTracking();\n                            chart._zooming = true;\n                        }\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        args.axisRanges = ranges = mousewheelZoom.updateRanges(delta);\n                        if (ranges && !chart.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart.trigger(ZOOM_END, args);\n                            chart._zooming = false;\n                            if (chart.surface) {\n                                chart.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    if (!state) {\n                        prevented = chart._startNavigation(origEvent, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = chart._navState;\n                        }\n                    }\n                    if (state) {\n                        totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        axes = chart._navState.axes;\n                        for (i = 0; i < axes.length; i++) {\n                            currentAxis = axes[i];\n                            axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        chart.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var chart = this, plotArea = chart._model._plotArea, pane = plotArea.findPointPane(coords), axes = plotArea.axes.slice(0), prevented;\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                prevented = chart.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    chart._userEvents.cancel();\n                } else {\n                    chart._suppressHover = true;\n                    chart._unsetActivePoint();\n                    chart._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                var chart = this;\n                if (chart._navState) {\n                    chart.trigger(chartEvent, {\n                        axisRanges: chart._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    chart._suppressHover = false;\n                    chart._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var chartElement;\n                while (element && !chartElement) {\n                    chartElement = element.chartElement;\n                    element = element.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var chart = this, isTouch = defined((e.x || {}).client), clientX = isTouch ? e.x.client : e.clientX, clientY = isTouch ? e.y.client : e.clientY;\n                return chart._toModelCoordinates(clientX, clientY);\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element, offset = element.offset(), paddingLeft = parseInt(element.css('paddingLeft'), 10), paddingTop = parseInt(element.css('paddingTop'), 10), win = $(window);\n                return new Point2D(clientX - offset.left - paddingLeft + win.scrollLeft(), clientY - offset.top - paddingTop + win.scrollTop());\n            },\n            _tap: function (e) {\n                var chart = this, drawingElement = chart.surface.eventTarget(e), element = chart._drawingChartElement(drawingElement, e);\n                if (chart._activePoint === element) {\n                    chart._propagateClick(element, e);\n                } else {\n                    if (!chart._startHover(drawingElement, e)) {\n                        chart._unsetActivePoint();\n                    }\n                    chart._propagateClick(element, e);\n                }\n            },\n            _click: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                chart._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                while (element) {\n                    if (element.click) {\n                        element.click(this, e);\n                    }\n                    element = element.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chart = this, chartElement = chart._drawingChartElement(element, e), tooltip = chart._tooltip, highlight = chart._highlight, tooltipOptions = chart.options.tooltip, point;\n                if (chart._suppressHover || !highlight || highlight.isHighlighted(chartElement) || chart._sharedTooltip()) {\n                    return;\n                }\n                point = chart._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(chart, e)) {\n                    chart._activePoint = point;\n                    tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point.tooltipTracking;\n                }\n            },\n            _mouseover: function (e) {\n                var chart = this;\n                if (chart._startHover(e.element, e.originalEvent)) {\n                    $(document).on(MOUSEMOVE_TRACKING, proxy(chart._mouseMoveTracking, chart));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var chart = this, options = chart.options, tooltip = chart._tooltip, highlight = chart._highlight, coords = chart._eventCoordinates(e), point = chart._activePoint, tooltipOptions, seriesPoint;\n                if (chart._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint != point) {\n                            seriesPoint.hover(chart, e);\n                            chart._activePoint = seriesPoint;\n                            tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    $(document).off(MOUSEMOVE_TRACKING);\n                    chart._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                this._plotArea.hover(this, e);\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs, i, current;\n                for (i = 0; i < crosshairs.length; i++) {\n                    current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var chart = this, options = chart.options, plotArea = chart._plotArea, categoryAxis = plotArea.categoryAxis, tooltip = chart._tooltip, tooltipOptions = options.tooltip, highlight = chart._highlight, index, points;\n                if (plotArea.box.containsPoint(coords)) {\n                    index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== chart._tooltipCategoryIx) {\n                        points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = $.map(points, function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        chart._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            _mouseleave: function (e) {\n                var chart = this, plotArea = chart._plotArea, tooltip = chart._tooltip, highlight = chart._highlight, target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length)) {\n                    chart._mousemove.cancel();\n                    plotArea.hideCrosshairs();\n                    highlight.hide();\n                    setTimeout(proxy(tooltip.hide, tooltip), TOOLTIP_HIDE_DELAY);\n                    chart._tooltipCategoryIx = null;\n                }\n            },\n            _unsetActivePoint: function () {\n                var chart = this, tooltip = chart._tooltip, highlight = chart._highlight;\n                chart._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _onDataChanged: function () {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], currentSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        append(processedSeries, groupSeries(currentSeries, data));\n                    } else {\n                        processedSeries.push(currentSeries || []);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart._hasData = true;\n                chart._deferRedraw();\n            },\n            _deferRedraw: function () {\n                var chart = this;\n                if (kendo.support.vml) {\n                    chart._clearRedrawTimeout();\n                    chart._redrawTimeout = setTimeout(function () {\n                        if (!chart.surface) {\n                            return;\n                        }\n                        chart.trigger(DATABOUND);\n                        chart._redraw();\n                    }, 0);\n                } else {\n                    chart.trigger(DATABOUND);\n                    chart._redraw();\n                }\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else {\n                    this._bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var chart = this, items = [], result, series = chart.options.series, seriesLength = series.length, seriesIx, s, onAxis, data, dataIx, dataLength, dataRow, category, uniqueCategories = {}, getFn, dateAxis;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    s = series[seriesIx];\n                    onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    data = s.data;\n                    dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        getFn = dateAxis ? getDateField : getField;\n                        for (dataIx = 0; dataIx < dataLength; dataIx++) {\n                            dataRow = data[dataIx];\n                            category = getFn(s.categoryField, dataRow);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dateComparer(a[0], b[0]);\n                        });\n                    }\n                    result = transpose(items);\n                    axis.categories = result[0];\n                    axis.dataItems = result[1];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], originalSeries = (chart._sourceSeries || [])[seriesIndex] || currentSeries, transitionsState, visible, point;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    point = originalSeries.data[pointIndex];\n                    if (!defined(point.visible)) {\n                        visible = false;\n                    } else {\n                        visible = !point.visible;\n                    }\n                    point.visible = visible;\n                } else {\n                    visible = !originalSeries.visible;\n                    originalSeries.visible = visible;\n                    currentSeries.visible = visible;\n                }\n                if (chart.options.transitions) {\n                    chart.options.transitions = false;\n                    transitionsState = true;\n                }\n                chart.redraw();\n                if (transitionsState) {\n                    chart.options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], index, items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    index = pointIndex;\n                } else {\n                    index = seriesIndex;\n                }\n                items = plotArea.pointsBySeriesIndex(index);\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                var chart = this;\n                var events = chart._events;\n                return chart._plotArea.crosshairs.length || chart._tooltip && chart._sharedTooltip() || defined(events[PLOT_AREA_HOVER]);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                options.dataSource = undefined;\n                clearMissingValues(chart._originalOptions, options);\n                chart._originalOptions = deepExtend(chart._originalOptions, options);\n                chart.options = deepExtend({}, chart._originalOptions);\n                chart._sourceSeries = null;\n                $(document).off(MOUSEMOVE_NS);\n                Widget.fn._setEvents.call(chart, options);\n                chart._initTheme(chart.options);\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                if (chart._shouldAttachMouseMove()) {\n                    chart.element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                $(document).off(MOUSEMOVE_TRACKING);\n                if (chart._userEvents) {\n                    chart._userEvents.destroy();\n                }\n                chart._destroyView();\n                chart.surface.destroy();\n                chart.surface = null;\n                chart._clearRedrawTimeout();\n                Widget.fn.destroy.call(chart);\n            },\n            _destroyView: function () {\n                var chart = this, model = chart._model, selections = chart._selections;\n                if (model) {\n                    model.destroy();\n                    chart._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                chart._unsetActivePoint();\n                if (chart._tooltip) {\n                    chart._tooltip.destroy();\n                }\n                if (chart._highlight) {\n                    chart._highlight.destroy();\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.destroy();\n                    delete chart._zoomSelection;\n                }\n                if (chart._pannable) {\n                    chart._pannable.destroy();\n                    delete chart._pannable;\n                }\n                if (chart._mousewheelZoom) {\n                    chart._mousewheelZoom.destroy();\n                    delete chart._mousewheelZoom;\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options) {\n                var registry = this._registry, match = registry[0], i, entry, series;\n                for (i = 0; i < registry.length; i++) {\n                    entry = registry[i];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var binder = this, i, type;\n                valueFields = valueFields || [VALUE];\n                for (i = 0; i < seriesTypes.length; i++) {\n                    type = seriesTypes[i];\n                    binder._valueFields[type] = valueFields;\n                    binder._otherFields[type] = otherFields;\n                    binder._nullValue[type] = binder._makeValue(valueFields, null);\n                    binder._undefinedValue[type] = binder._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var binder = this, data = series.data, pointData = defined(item) ? item : data[pointIx], result = { valueFields: { value: pointData } }, fields, fieldData, srcValueFields, srcPointFields, valueFields = binder.valueFields(series), otherFields = binder._otherFields[series.type], value;\n                if (pointData === null) {\n                    value = binder._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = binder._undefinedValue[series.type];\n                } else if (isArray(pointData)) {\n                    fieldData = pointData.slice(valueFields.length);\n                    value = binder._bindFromArray(pointData, valueFields);\n                    fields = binder._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    srcPointFields = binder.sourceFields(series, otherFields);\n                    value = binder._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = binder._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {}, i, length = fields.length, fieldName;\n                for (i = 0; i < length; i++) {\n                    fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {}, i, length;\n                if (fields) {\n                    length = math.min(fields.length, array.length);\n                    for (i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                var value = {}, i, length, fieldName, srcFieldName;\n                if (fields) {\n                    length = fields.length;\n                    srcFields = srcFields || fields;\n                    for (i = 0; i < length; i++) {\n                        fieldName = fields[i];\n                        srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var i, length, fieldName, sourceFields, sourceFieldName;\n                if (canonicalFields) {\n                    length = canonicalFields.length;\n                    sourceFields = [];\n                    for (i = 0; i < length; i++) {\n                        fieldName = canonicalFields[i];\n                        sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                var barLabel = this;\n                ChartElement.fn.init.call(barLabel, options);\n                this.textBox = new TextBox(content, barLabel.options);\n                barLabel.append(this.textBox);\n            },\n            options: {\n                position: OUTSIDE_END,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                color: BLACK,\n                background: '',\n                border: {\n                    width: 1,\n                    color: ''\n                },\n                aboveAxis: true,\n                vertical: false,\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                zIndex: 2\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var barLabel = this, options = barLabel.options, vertical = options.vertical, aboveAxis = options.aboveAxis, text = barLabel.children[0], box = text.box, padding = text.options.padding;\n                text.options.align = vertical ? CENTER : LEFT;\n                text.options.vAlign = vertical ? TOP : CENTER;\n                if (options.position == INSIDE_END) {\n                    if (vertical) {\n                        text.options.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            text.options.vAlign = BOTTOM;\n                        }\n                    } else {\n                        text.options.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position == CENTER) {\n                    text.options.vAlign = CENTER;\n                    text.options.align = CENTER;\n                } else if (options.position == INSIDE_BASE) {\n                    if (vertical) {\n                        text.options.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        text.options.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position == OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        text.options.align = CENTER;\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (targetBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (targetBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(targetBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var barLabel = this, vertical = barLabel.options.vertical, field = vertical ? Y : X, start = field + '1', end = field + '2', text = barLabel.children[0], parentBox = barLabel.parent.box, targetBox;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    targetBox = text.paddingBox.clone();\n                    targetBox[start] = math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                var item = this;\n                BoxElement.fn.init.call(item, options);\n                item.createContainer();\n                item.createMarker();\n                item.createLabel();\n            },\n            createContainer: function () {\n                var item = this;\n                item.container = new FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                item.append(item.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var item = this, options = item.options, labelOptions = deepExtend({}, options.labels);\n                item.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                ChartElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = draw.Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                    widget._legendItemClick(args.seriesIndex, args.pointIndex);\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventTargetElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var that = this;\n                var options = that.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    that.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: that.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            that.createVisual();\n                            that.renderChildren();\n                            that.renderComplete();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    ChartElement.fn.renderVisual.call(that);\n                }\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            render: function () {\n                var legendItem, items = this.children;\n                var options = this.options;\n                var vertical = options.vertical;\n                this.visual = new draw.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < items.length; idx++) {\n                    legendItem = items[idx];\n                    legendItem.reflow(new Box2D());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box2D();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: noop\n        });\n        var Legend = ChartElement.extend({\n            init: function (options) {\n                var legend = this;\n                ChartElement.fn.init.call(legend, options);\n                if (!inArray(legend.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    legend.options.position = RIGHT;\n                }\n                legend.createContainer();\n                legend.createItems();\n            },\n            options: {\n                position: RIGHT,\n                items: [],\n                labels: { margin: { left: 6 } },\n                offsetX: 0,\n                offsetY: 0,\n                margin: getSpacing(5),\n                padding: getSpacing(5),\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                item: { cursor: POINTER },\n                spacing: 6,\n                background: '',\n                zIndex: 1,\n                markers: {\n                    border: { width: 1 },\n                    width: 7,\n                    height: 7,\n                    type: 'rect',\n                    align: LEFT,\n                    vAlign: CENTER\n                }\n            },\n            createContainer: function () {\n                var legend = this, options = legend.options, userAlign = options.align, position = options.position, align = position, vAlign = CENTER;\n                if (position == CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign == 'start') {\n                        align = LEFT;\n                    } else if (userAlign == 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign == 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign == 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                legend.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                legend.append(legend.container);\n            },\n            createItems: function () {\n                var legend = this, options = legend.options, items = options.items, count = items.length, vertical = legend.isVertical(), innerElement, i, item;\n                innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                });\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                for (i = 0; i < count; i++) {\n                    item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                legend.container.append(innerElement);\n            },\n            isVertical: function () {\n                var legend = this, options = legend.options, orientation = options.orientation, position = options.position, vertical = position == CUSTOM && orientation != HORIZONTAL || (defined(orientation) ? orientation != HORIZONTAL : inArray(position, [\n                        LEFT,\n                        RIGHT\n                    ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var legend = this, options = legend.options;\n                targetBox = targetBox.clone();\n                if (!legend.hasItems()) {\n                    legend.box = targetBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    legend.containerCustomReflow(targetBox);\n                    legend.box = targetBox;\n                } else {\n                    legend.containerReflow(targetBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var legend = this, options = legend.options, position = options.position, pos = position == TOP || position == BOTTOM ? X : Y, containerBox = targetBox.clone(), container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), alignTarget = targetBox.clone(), box;\n                if (position == LEFT || position == RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    legend.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                legend.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var legend = this, options = legend.options, offsetX = options.offsetX, offsetY = options.offsetY, container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(Box2D(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var CategoryAxis = Axis.extend({\n            init: function (options) {\n                var axis = this;\n                options = options || {};\n                this._initFields();\n                this._initCategories(options);\n                Axis.fn.init.call(axis, options);\n            },\n            _initFields: function () {\n                this._ticks = {};\n                this.outOfRangeMin = 0;\n                this.outOfRangeMax = 0;\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? math.floor(options.min) : 0;\n                    var max = definedMax ? options.justified ? math.floor(options.max) + 1 : math.ceil(options.max) : categories.length;\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            options: {\n                type: CATEGORY,\n                categories: [],\n                vertical: false,\n                majorGridLines: {\n                    visible: false,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { zIndex: 1 },\n                justified: false\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var range = this.rangeIndices();\n                var min = range.min;\n                var max = range.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var axis = this, options = axis.options, vertical = options.vertical, lineBox = axis.lineBox(), reverse = options.reverse, scale = axis.getScale(), range = axis.rangeIndices(), min = range.min, max = range.max, current = min % 1 !== 0 ? math.floor(min / 1) + stepSize : min, pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)], positions = [];\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var index = label.index;\n                var range = this.rangeIndices();\n                if (range.min > 0) {\n                    index = index - math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var box = this.box, labels = this.labels, valueAxis = this.options.vertical ? Y : X, start = box[valueAxis + 1], end = box[valueAxis + 2], firstLabel = labels[0], lastLabel = last(labels);\n                if (labels.length) {\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var axis = this, cache = axis._ticks, options = axis.options, range = axis.rangeIndices(), reverse = options.reverse, justified = options.justified, lineBox = axis.lineBox(), hash;\n                hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = axis.getTickPositions(1);\n                    cache.minorTicks = axis.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), min = range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)], slotBox = lineBox.clone(), p1, p2;\n                var singleSlot = !defined(to);\n                from = valueOrDefault(from, 0);\n                to = valueOrDefault(to, from);\n                to = math.max(to - 1, from);\n                to = math.max(from, to);\n                p1 = lineStart + (from - min) * scale;\n                p2 = lineStart + (to + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            pointCategoryIndex: function (point) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), startValue = reverse ? range.max : range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + 1], lineEnd = lineBox[valueAxis + 2], pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var size = pos - lineStart;\n                var value = size / scale;\n                value = startValue + value;\n                var diff = value % 1;\n                if (justified) {\n                    value = math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = indexOf(value, options.srcCategories || options.categories);\n                return index - math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = options.categories.length, scale = size / range, offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var totalRange = this.totalRange();\n                var totalMax = totalRange.max;\n                var totalMin = totalRange.min;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var axis = this, options = axis.options, range = options.categories.length, delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var justified = options.justified;\n                var range = this.totalRangeIndices(true);\n                var min = range.min;\n                var max = range.max;\n                var start = math.floor(min);\n                var skip;\n                if (!justified) {\n                    min = math.floor(min);\n                    max = math.ceil(max);\n                } else {\n                    min = math.ceil(min);\n                    max = math.floor(max);\n                }\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var axis = this, options = axis.options, dataItem = options.dataItems ? options.dataItems[index] : null, category = valueOrDefault(options.categories[index], ''), text = axis.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var categories = this.options.categories;\n                return categories.length && (categories.length > value && value >= 0);\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true), scale = this.getScale(), offset = round(delta / scale, DEFAULT_PRECISION), totalRange = this.totalRange(), min = range.min + offset, max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var axis = this, options = axis.options, reverse = options.reverse, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.totalRangeIndices(true), scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                return {\n                    min: math.min(min, max),\n                    max: math.max(min, max)\n                };\n            }\n        });\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (options) {\n                var axis = this, baseUnit, useDefault;\n                options = options || {};\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: toDate(options.categories),\n                    min: toDate(options.min),\n                    max: toDate(options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    baseUnit = (options.baseUnit || '').toLowerCase();\n                    useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = axis.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        axis.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    axis.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this._initFields();\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                labels: { dateFormats: DateLabelFormats },\n                autoBaseUnitSteps: {\n                    seconds: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    minutes: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    hours: [\n                        1,\n                        2,\n                        3\n                    ],\n                    days: [\n                        1,\n                        2,\n                        3\n                    ],\n                    weeks: [\n                        1,\n                        2\n                    ],\n                    months: [\n                        1,\n                        2,\n                        3,\n                        6\n                    ],\n                    years: [\n                        1,\n                        2,\n                        3,\n                        5,\n                        10,\n                        25,\n                        50\n                    ]\n                },\n                maxDateGroups: 10\n            },\n            shouldRenderNote: function (value) {\n                var axis = this, range = axis.range(), categories = axis.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return toDate(value);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / (range.max - range.min), offset = round(delta / scale, DEFAULT_PRECISION), from, to;\n                if (range.min && range.max) {\n                    from = addTicks(options.min || range.min, offset);\n                    to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var axis = this, rounds = math.abs(delta), range = axis.range(), from = range.min, to = range.max, step;\n                if (range.min && range.max) {\n                    while (rounds--) {\n                        range = dateDiff(from, to);\n                        step = math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    range = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return range;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories, count = defined(categories) ? categories.length : 0, categoryIx, cat, diff, minDiff = MAX_VALUE, lastCat, unit;\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    cat = categories[categoryIx];\n                    if (cat && lastCat) {\n                        diff = absoluteDateDiff(cat, lastCat);\n                        if (diff > 0) {\n                            minDiff = math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCat = cat;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categories = options.categories;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = math.floor(minIdx);\n                        maxIdx = options.justified ? math.floor(maxIdx) : math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = math.floor(range.min);\n                var max = math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = this.currentRange(), totalLimits = this.totalLimits(), min = range.min, max = range.max, scale = size / (max - min), offset = round(delta / scale, DEFAULT_PRECISION), panRange, from, to;\n                from = addTicks(min, offset);\n                to = addTicks(max, offset);\n                panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var currentRange = this.currentRange();\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var weekStartDay = options.weekStartDay;\n                var rangeMax = currentRange.max;\n                var rangeMin = currentRange.min;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit == FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var baseUnitIndex = indexOf(baseUnit, BASE_UNITS);\n                    var autoBaseUnitStep;\n                    var diff = dateDiff(max, min);\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== SECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (options) {\n                options = options || this.options;\n                var categories = options.categories, autoUnit = options.baseUnit === FIT, baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit, baseUnitStep = options.baseUnitStep || 1, stepOptions = {\n                        baseUnit: baseUnit,\n                        baseUnitStep: baseUnitStep,\n                        weekStartDay: options.weekStartDay\n                    }, categoryLimits = this._categoryRange(categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var axis = this, categoryLimits = this._categoryRange(options.categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max), autoUnit = options.baseUnit === FIT, autoUnitIx = 0, baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit, span = max - min, units = span / TIME_PER_UNIT[baseUnit], totalUnits = units, maxDateGroups = options.maxDateGroups || axis.options.maxDateGroups, autoBaseUnitSteps = deepExtend({}, axis.options.autoBaseUnitSteps, options.autoBaseUnitSteps), unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            _timeScale: function () {\n                var axis = this, range = axis.range(), options = axis.options, lineBox = axis.lineBox(), vertical = options.vertical, lineSize = vertical ? lineBox.height() : lineBox.width(), timeRange;\n                if (options.justified && options._collapse !== false) {\n                    var categoryLimits = this._categoryRange(options.categories);\n                    var maxCategory = toTime(categoryLimits.max);\n                    timeRange = toDate(maxCategory) - range.min;\n                } else {\n                    timeRange = range.max - range.min;\n                }\n                return lineSize / timeRange;\n            },\n            groupCategories: function (options) {\n                var axis = this, categories = options.categories, maxCategory = toDate(sparseArrayMax(categories)), baseUnit = options.baseUnit, baseUnitStep = options.baseUnitStep || 1, range = axis.range(options), max = range.max, date, nextDate, groups = [];\n                for (date = range.min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, options, upper, roundToNext) {\n                options = options || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? math.ceil(step) : math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                } else {\n                    return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options, dataItem = options.dataItems ? options.dataItems[index] : null, date = options.categories[index], baseUnit = options.baseUnit, visible = true, unitFormat = labelOptions.dateFormats[baseUnit];\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var axis = this;\n                var options = axis.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var axis = this;\n                if (typeof a === OBJECT) {\n                    a = axis.categoryIndex(a);\n                }\n                if (typeof b === OBJECT) {\n                    b = axis.categoryIndex(b);\n                }\n                return CategoryAxis.fn.getSlot.call(axis, a, b, limit);\n            }\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options) {\n                var axis = this;\n                options = options || {};\n                deepExtend(options, {\n                    min: toDate(options.min),\n                    max: toDate(options.max),\n                    axisCrossingValue: toDate(options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = axis.applyDefaults(toDate(seriesMin), toDate(seriesMax), options);\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                majorGridLines: {\n                    visible: true,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { dateFormats: DateLabelFormats }\n            },\n            applyDefaults: function (seriesMin, seriesMax, options) {\n                var axis = this, min = options.min || seriesMin, max = options.max || seriesMax, baseUnit = options.baseUnit || (max && min ? axis.timeUnits(absoluteDateDiff(max, min)) : HOURS), baseUnitTime = TIME_PER_UNIT[baseUnit], autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max), autoMax = ceilDate(toTime(max) + 1, baseUnit), userMajorUnit = options.majorUnit ? options.majorUnit : undefined, majorUnit = userMajorUnit || dataviz.ceil(dataviz.autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime, actualUnits = duration(autoMin, autoMax, baseUnit), totalUnits = dataviz.ceil(actualUnits, majorUnit), unitsToAdd = totalUnits - actualUnits, head = math.floor(unitsToAdd / 2), tail = unitsToAdd - head;\n                if (!options.baseUnit) {\n                    delete options.baseUnit;\n                }\n                options.baseUnit = options.baseUnit || baseUnit;\n                options.min = options.min || addDuration(autoMin, -head, baseUnit);\n                options.max = options.max || addDuration(autoMax, tail, baseUnit);\n                options.minorUnit = options.minorUnit || majorUnit / 5;\n                options.majorUnit = majorUnit;\n                this.totalMin = toTime(floorDate(toTime(seriesMin) - 1, baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(seriesMax) + 1, baseUnit));\n                return options;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.fn.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.fn.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            timeUnits: function (delta) {\n                var unit = HOURS;\n                if (delta >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (delta >= TIME_PER_MONTH) {\n                    unit = MONTHS;\n                } else if (delta >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (delta >= TIME_PER_DAY) {\n                    unit = DAYS;\n                }\n                return unit;\n            },\n            translateRange: function (delta, exact) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / dateDiff(range.max, range.min), offset = round(delta / scale, DEFAULT_PRECISION), from = addTicks(options.min, offset), to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var axis = this, options = axis.options, rounds = math.abs(delta), from = options.min, to = options.max, range, step;\n                while (rounds--) {\n                    range = dateDiff(from, to);\n                    step = math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = math.min(startValue, endValue);\n                var max = math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        var ClusterLayout = ChartElement.extend({\n            options: {\n                vertical: false,\n                gap: 0,\n                spacing: 0\n            },\n            reflow: function (box) {\n                var cluster = this, options = cluster.options, vertical = options.vertical, axis = vertical ? Y : X, children = cluster.children, gap = options.gap, spacing = options.spacing, count = children.length, slots = count + gap + spacing * (count - 1), slotSize = (vertical ? box.height() : box.width()) / slots, position = box[axis + 1] + slotSize * (gap / 2), childBox, i;\n                for (i = 0; i < count; i++) {\n                    childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        var StackWrap = ChartElement.extend({\n            options: { vertical: true },\n            reflow: function (targetBox) {\n                var options = this.options, vertical = options.vertical, positionAxis = vertical ? X : Y, children = this.children, box = this.box = new Box2D(), childrenCount = children.length, i;\n                for (i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i], childBox;\n                    if (currentChild.visible !== false) {\n                        childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventTargetElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var element = this, options = element.options.notes, text = element.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    element.note = new Note(element.value, text, element.dataItem, element.category, element.series, element.options.notes);\n                    element.append(element.note);\n                }\n            }\n        };\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                var bar = this;\n                ChartElement.fn.init.call(bar);\n                bar.options = options;\n                bar.color = options.color || WHITE;\n                bar.aboveAxis = valueOrDefault(bar.options.aboveAxis, true);\n                bar.value = value;\n            },\n            defaults: {\n                border: { width: 1 },\n                vertical: true,\n                overlay: { gradient: GLASS },\n                labels: {\n                    visible: false,\n                    format: '{0}'\n                },\n                opacity: 1,\n                notes: { label: {} }\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                } else {\n                    this._rendered = true;\n                }\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                var labelText;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, options.labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var bar = this, label = bar.label;\n                bar.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = bar.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (bar.note) {\n                    bar.note.reflow(targetBox);\n                }\n                if (bar.errorBars) {\n                    for (var i = 0; i < bar.errorBars.length; i++) {\n                        bar.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var bar = this;\n                var box = bar.box;\n                var options = bar.options;\n                var customVisual = options.visual;\n                if (bar.visible !== false) {\n                    ChartElement.fn.createVisual.call(bar);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: bar.category,\n                            dataItem: bar.dataItem,\n                            value: bar.value,\n                            sender: bar.getChart(),\n                            series: bar.series,\n                            percentage: bar.percentage,\n                            runningTotal: bar.runningTotal,\n                            total: bar.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                bar.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            bar.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        bar.createRect(bar.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = draw.Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    visual.append(this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = draw.Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var bar = this, options = bar.options, color = bar.color, border = options.border, borderColor = border.color, brightness = border._brightness || BAR_BORDER_BRIGHTNESS;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var bar = this, options = bar.options, box = bar.box, vertical = options.vertical, aboveAxis = bar.aboveAxis, clipBox = bar.owner.pane.clipBox() || box, x, y;\n                if (vertical) {\n                    x = math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    y = aboveAxis ? math.max(box.y1, clipBox.y1) : math.min(box.y2, clipBox.y2) - tooltipHeight;\n                } else {\n                    var x1 = math.max(box.x1, clipBox.x1), x2 = math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        x = aboveAxis ? x2 - tooltipWidth : x1;\n                        y = math.max(box.y1, clipBox.y1) - tooltipHeight - TOOLTIP_OFFSET;\n                    } else {\n                        x = aboveAxis ? x2 + TOOLTIP_OFFSET : x1 - tooltipWidth - TOOLTIP_OFFSET;\n                        y = math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return new Point2D(x, y);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.fn, PointEventsMixin);\n        deepExtend(Bar.fn, NoteMixin);\n        var BarChartAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                var element = this.element;\n                var options = this.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new geom.Point(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(geom.transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = interpolate(this.fromScale.x, 1, pos);\n                var scaleY = interpolate(this.fromScale.y, 1, pos);\n                this.element.transform(geom.transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                draw.Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR, BarChartAnimation);\n        var FadeInAnimation = draw.Animation.extend({\n            options: {\n                duration: 200,\n                easing: LINEAR\n            },\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        draw.AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var ErrorRangeCalculator = function (errorValue, series, field) {\n            var that = this;\n            that.initGlobalRanges(errorValue, series, field);\n        };\n        ErrorRangeCalculator.prototype = ErrorRangeCalculator.fn = {\n            percentRegex: /percent(?:\\w*)\\((\\d+)\\)/,\n            standardDeviationRegex: new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$'),\n            initGlobalRanges: function (errorValue, series, field) {\n                var that = this, data = series.data, deviationMatch = that.standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var average = that.getAverage(data), deviation = that.getStandardDeviation(data, average, false), multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1, errorRange = {\n                            low: average.value - deviation * multiple,\n                            high: average.value + deviation * multiple\n                        };\n                    that.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var standardError = that.getStandardError(data, that.getAverage(data));\n                    that.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data, binder = SeriesBinder.current, valueFields = binder.valueFields(series), item = defined(data[0]) ? data[0] : {}, idx, srcValueFields, valueGetter;\n                if (isArray(item)) {\n                    idx = field ? indexOf(field, valueFields) : 0;\n                    valueGetter = getter('[' + idx + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[indexOf(field, valueFields)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var that = this, low, high, value;\n                if (!defined(errorValue)) {\n                    return;\n                }\n                if (that.globalRange) {\n                    return that.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = that.percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - math.abs(percentValue);\n                    high = pointValue + math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var squareDifferenceSum = 0, length = data.length, total = isSample ? average.count - 1 : average.count, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += math.pow(value - average.value, 2);\n                    }\n                }\n                return math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var sum = 0, count = 0, length = data.length, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        };\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                chart.valueAxisRanges = {};\n                chart.points = [];\n                chart.categoryPoints = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                invertAxes: false,\n                isStacked: false,\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    var categorySum = 0;\n                    var otherValues = [];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += math.abs(other.value);\n                                otherValues.push(math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var categoryIx = point.categoryIx;\n                var categoryPts = this.categoryPoints[categoryIx];\n                if (this.options.isStacked) {\n                    startValue = startValue || 0;\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this.options.isStacked100) {\n                                plotValue = math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPts = this.categoryPoints[i];\n                    if (!categoryPts) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPts.length; pIx++) {\n                        var point = categoryPts[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = math.max(max, to);\n                                    min = math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var chart = this;\n                var chartSeries = chart.options.series;\n                var isStacked = chart.options.isStacked;\n                var limits;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        limits = limitsCache[key];\n                        if (!limits) {\n                            limits = chart.stackLimits(axisName, series.stack);\n                            var errorTotals = chart.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = math.min(limits.min, sparseArrayMin(errorTotals.negative));\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = math.max(limits.max, sparseArrayMax(errorTotals.positive));\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            chart.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var chart = this, value = point.value, series = point.series, seriesIx = point.seriesIx, errorBars = point.options.errorBars, errorRange, lowValue = data.fields[ERROR_LOW_FIELD], highValue = data.fields[ERROR_HIGH_FIELD];\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    chart.seriesErrorRanges = chart.seriesErrorRanges || [];\n                    chart.seriesErrorRanges[seriesIx] = chart.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = chart.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    chart.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var chart = this, series = point.series, low = point.low, high = point.high, isVertical = !chart.options.invertAxes, options = point.options.errorBars, errorBar, stackedErrorRange;\n                if (chart.options.isStacked) {\n                    stackedErrorRange = chart.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    chart.updateRange({ value: low }, fields);\n                    chart.updateRange({ value: high }, fields);\n                }\n                errorBar = new CategoricalErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var chart = this, plotValue = chart.plotRange(point, 0)[1] - point.value, low = point.low + plotValue, high = point.high + plotValue;\n                chart.errorTotals = chart.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    chart.errorTotals.negative[categoryIx] = math.min(chart.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    chart.errorTotals.positive[categoryIx] = math.max(chart.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = chart.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    chart.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = chart.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = chart;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    chart.addErrorBar(point, data, categoryIx);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                chart.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return options;\n            },\n            updateRange: function (data, fields) {\n                var chart = this, axisName = fields.series.axis, value = data.value, axisRange = chart.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, value);\n                    axisRange.max = math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea, axisName = series.axis, axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var chart = this, pointIx = 0, categorySlots = chart.categorySlots = [], chartPoints = chart.points, categoryAxis = chart.categoryAxis, value, valueAxis, point;\n                chart.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    value = chart.pointValue(data);\n                    valueAxis = chart.seriesValueAxis(currentSeries);\n                    point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = chart.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = chart.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !chart.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = chart.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = chart.aboveAxis(point, valueAxis);\n                            if (chart.options.isStacked100) {\n                                point.percentage = chart.plotValue(point);\n                            }\n                            chart.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.reflowCategories(categorySlots);\n                chart.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis, options = valueAxis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var chart = this, options = chart.options, invertAxes = options.invertAxes, slotX = invertAxes ? valueSlot : categorySlot, slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, categories = chart.categoryAxis.options.categories || [], count = categoriesCount(series), categoryIx, seriesIx, pointData, currentCategory, currentSeries, seriesCount = series.length;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                        currentSeries = series[seriesIx];\n                        currentCategory = categories[categoryIx];\n                        pointData = this._bindPoint(currentSeries, seriesIx, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx\n                        });\n                    }\n                }\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMaxPoint', seriesIx, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        var BarChart = CategoricalChart.extend({\n            options: { animation: { type: BAR } },\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = chart.pointValue(data);\n                var options = chart.options;\n                var children = chart.children;\n                var isStacked = chart.options.isStacked;\n                var point;\n                var pointType = chart.pointType();\n                var pointOptions;\n                var cluster;\n                var clusterType = chart.clusterType();\n                pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position == OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new pointType(value, pointOptions);\n                point.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = chart.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var chart = this, options = chart.options, categorySlot = categoryAxis.getSlot(categoryIx), startValue = valueAxis.startValue(), stackAxis, zeroSlot;\n                if (options.isStacked) {\n                    zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                ChartElement.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var points = this.points;\n                var point, pointVisual;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (this.options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new geom.Point(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        var RangeBar = Bar.extend({\n            defaults: {\n                labels: { format: '{0} - {1}' },\n                tooltip: { format: '{1}' }\n            },\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = template(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var rangeBar = this, labelFrom = rangeBar.labelFrom, labelTo = rangeBar.labelTo;\n                rangeBar.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = rangeBar.value.from > rangeBar.value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = rangeBar.value.to > rangeBar.value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (rangeBar.note) {\n                    rangeBar.note.reflow(targetBox);\n                }\n            }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value.from, point.value.to);\n            },\n            plotLimits: CategoricalChart.fn.plotLimits,\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, from = value.from, to = value.to, axisRange = chart.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, from);\n                    axisRange.max = math.max(axisRange.max, from);\n                    axisRange.min = math.min(axisRange.min, to);\n                    axisRange.max = math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                chart.wrapData(options);\n                CategoricalChart.fn.init.call(chart, plotArea, options);\n            },\n            options: { animation: { type: BAR } },\n            wrapData: function (options) {\n                var series = options.series, i, data, seriesItem;\n                for (i = 0; i < series.length; i++) {\n                    seriesItem = series[i];\n                    data = seriesItem.data;\n                    if (data && !isArray(data[0]) && typeof data[0] != OBJECT) {\n                        seriesItem.data = [data];\n                    }\n                }\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var options = chart.options;\n                var children = chart.children;\n                var bullet;\n                var bulletOptions;\n                var cluster;\n                bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = chart.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, current = value.current, target = value.target, axisRange = chart.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min.apply(math, [\n                        axisRange.min,\n                        current,\n                        target\n                    ]);\n                    axisRange.max = math.max.apply(math, [\n                        axisRange.max,\n                        current,\n                        target\n                    ]);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var points = this.points;\n                var point;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    point.options.animation = this.options.animation;\n                    point.createAnimation();\n                }\n            },\n            _setAnimationOptions: BarChart.fn._setAnimationOptions\n        });\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                var bullet = this;\n                ChartElement.fn.init.call(bullet, options);\n                bullet.aboveAxis = bullet.options.aboveAxis;\n                bullet.color = options.color || WHITE;\n                bullet.value = value;\n            },\n            options: {\n                border: { width: 1 },\n                vertical: false,\n                opacity: 1,\n                target: {\n                    shape: '',\n                    border: {\n                        width: 0,\n                        color: 'green'\n                    },\n                    line: { width: 2 }\n                },\n                tooltip: { format: 'Current: {0}</br>Target: {1}' }\n            },\n            render: function () {\n                var bullet = this, options = bullet.options;\n                if (!bullet._rendered) {\n                    bullet._rendered = true;\n                    if (defined(bullet.value.target)) {\n                        bullet.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || bullet.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        bullet.target.value = this.value;\n                        bullet.target.dataItem = this.dataItem;\n                        bullet.target.series = this.series;\n                        bullet.append(bullet.target);\n                    }\n                    bullet.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var bullet = this, options = bullet.options, chart = bullet.owner, target = bullet.target, invertAxes = options.invertAxes, valueAxis = chart.seriesValueAxis(bullet.options), categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis), targetValueSlot = valueAxis.getSlot(bullet.value.target), targetSlotX = invertAxes ? targetValueSlot : categorySlot, targetSlotY = invertAxes ? categorySlot : targetValueSlot, targetSlot;\n                if (target) {\n                    targetSlot = new Box2D(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (bullet.note) {\n                    bullet.note.reflow(box);\n                }\n                bullet.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = draw.Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            tooltipAnchor: Bar.fn.tooltipAnchor,\n            createHighlight: function (style) {\n                return draw.Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                var bullet = this;\n                return bullet.owner.formatPointValue(bullet, format);\n            }\n        });\n        deepExtend(Bullet.fn, PointEventsMixin);\n        deepExtend(Bullet.fn, NoteMixin);\n        var Target = ShapeElement.extend();\n        deepExtend(Target.fn, PointEventsMixin);\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                var errorBar = this;\n                errorBar.low = low;\n                errorBar.high = high;\n                errorBar.isVertical = isVertical;\n                errorBar.chart = chart;\n                errorBar.series = series;\n                ChartElement.fn.init.call(errorBar, options);\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                endCaps: true,\n                line: { width: 1 },\n                zIndex: 1\n            },\n            getAxis: function () {\n            },\n            reflow: function (targetBox) {\n                var linePoints, errorBar = this, endCaps = errorBar.options.endCaps, isVertical = errorBar.isVertical, axis = errorBar.getAxis(), valueBox = axis.getSlot(errorBar.low, errorBar.high), centerBox = targetBox.center(), capsWidth = errorBar.getCapsWidth(targetBox, isVertical), capValue = isVertical ? centerBox.x : centerBox.y, capStart = capValue - capsWidth, capEnd = capValue + capsWidth;\n                if (isVertical) {\n                    linePoints = [\n                        Point2D(centerBox.x, valueBox.y1),\n                        Point2D(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(capStart, valueBox.y1), Point2D(capEnd, valueBox.y1), Point2D(capStart, valueBox.y2), Point2D(capEnd, valueBox.y2));\n                    }\n                    errorBar.box = Box2D(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        Point2D(valueBox.x1, centerBox.y),\n                        Point2D(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(valueBox.x1, capStart), Point2D(valueBox.x1, capEnd), Point2D(valueBox.x2, capStart), Point2D(valueBox.x2, capEnd));\n                    }\n                    errorBar.box = Box2D(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                errorBar.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height(), capsWidth = math.min(math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var that = this;\n                var options = that.options;\n                var visual = options.visual;\n                if (visual) {\n                    that.visual = visual({\n                        low: that.low,\n                        high: that.high,\n                        rect: that.box.toRect(),\n                        sender: that.getChart(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            that.createDefaultVisual();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    that.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var errorBar = this, options = errorBar.options, lineOptions = {\n                        stroke: {\n                            color: options.color,\n                            width: options.line.width,\n                            dashType: options.line.dashType\n                        }\n                    }, linePoints = errorBar.linePoints;\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new draw.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    this.visual.append(line);\n                }\n            }\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axis = chart.seriesValueAxis(series);\n                return axis;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axes = chart.seriesAxes(series), axis = errorBar.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point);\n                point.value = value;\n                point.options = options;\n                point.aboveAxis = valueOrDefault(point.options.aboveAxis, true);\n                point.tooltipTracking = true;\n            },\n            defaults: {\n                vertical: true,\n                markers: {\n                    visible: true,\n                    background: WHITE,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    border: { width: 2 },\n                    opacity: 1\n                },\n                labels: {\n                    visible: false,\n                    position: ABOVE,\n                    margin: getSpacing(3),\n                    padding: getSpacing(4),\n                    animation: {\n                        type: FADEIN,\n                        delay: INITIAL_ANIMATION_DURATION\n                    }\n                },\n                notes: { label: {} },\n                highlight: { markers: { border: {} } }\n            },\n            render: function () {\n                var point = this, options = point.options, markers = options.markers, labels = options.labels, labelText = point.value;\n                if (point._rendered) {\n                    return;\n                } else {\n                    point._rendered = true;\n                }\n                if (markers.visible && markers.size) {\n                    point.marker = point.createMarker();\n                    point.append(point.marker);\n                }\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: point.dataItem,\n                            category: point.category,\n                            value: point.value,\n                            percentage: point.percentage,\n                            series: point.series\n                        });\n                    } else if (labels.format) {\n                        labelText = point.formatValue(labels.format);\n                    }\n                    point.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    point.append(point.label);\n                }\n                point.createNote();\n                if (point.errorBar) {\n                    point.append(point.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: noop,\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var point = this, options = point.options, vertical = options.vertical, aboveAxis = point.aboveAxis, childBox, center;\n                point.render();\n                point.box = targetBox;\n                childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                point._childBox = childBox;\n                if (point.marker) {\n                    point.marker.reflow(childBox);\n                }\n                point.reflowLabel(childBox);\n                if (point.errorBars) {\n                    for (var i = 0; i < point.errorBars.length; i++) {\n                        point.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (point.note) {\n                    var noteTargetBox = point.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        center = noteTargetBox.center();\n                        noteTargetBox = Box2D(center.x, center.y, center.x, center.y);\n                    }\n                    point.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var point = this, options = point.options, label = point.label, anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(point.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var markers = highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual;\n                var rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geom.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var point = this, markerBox = point.markerBox(), aboveAxis = point.aboveAxis, x = markerBox.x2 + TOOLTIP_OFFSET, y = aboveAxis ? markerBox.y1 - tooltipHeight : markerBox.y2, clipBox = point.owner.pane.clipBox(), showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    return Point2D(x, y);\n                }\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        deepExtend(LinePoint.fn, PointEventsMixin);\n        deepExtend(LinePoint.fn, NoteMixin);\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                var point = this;\n                LinePoint.fn.init.call(point, value, options);\n                point.category = value.category;\n            },\n            defaults: {\n                labels: { position: CENTER },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    }\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = markers.size / 2 - border.width / 2;\n                var overlay = new draw.Circle(new geom.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                return overlay;\n            }\n        });\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.linePoints = linePoints;\n                segment.series = series;\n                segment.seriesIx = seriesIx;\n            },\n            options: { closed: false },\n            points: function (visualPoints) {\n                var segment = this, linePoints = segment.linePoints.concat(visualPoints || []), points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var options = this.options;\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = draw.Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                var segment = this, seriesIx = segment.seriesIx;\n                return segment.parent.getNearestPoint(coords.x, coords.y, seriesIx);\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, currentSeries, seriesIx, seriesCount = seriesPoints.length, sortedPoints, linePoints, point, pointIx, pointCount, lastSegment;\n                this._segments = [];\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    sortedPoints = chart.sortPoints(seriesPoints[seriesIx]);\n                    pointCount = sortedPoints.length;\n                    linePoints = [];\n                    for (pointIx = 0; pointIx < pointCount; pointIx++) {\n                        point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (chart.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues, assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point2D(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = draw.Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                var point;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n                chart.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields.value;\n                var missingValues = chart.seriesMissingValues(series);\n                var point;\n                var pointOptions;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this.plotValue(other);\n                        if (this.options.isStacked100) {\n                            plotValue = math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.fn, LineChartMixin, ClipAnimationMixin);\n        var ClipAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(interpolate(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        draw.AnimationFactory.current.register(CLIP, ClipAnimation);\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var segment = this, points;\n                points = segment.calculateStepPoints(segment.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(segment.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, categoryAxis = plotArea.seriesCategoryAxis(segment.series), isInterpolate = chart.seriesMissingValues(segment.series) === INTERPOLATE, length = points.length, reverse = categoryAxis.options.reverse, vertical = categoryAxis.options.vertical, dir = reverse ? 2 : 1, revDir = reverse ? 1 : 2, prevPoint, point, i, prevMarkerBoxCenter, markerBoxCenter, result = [];\n                for (i = 1; i < length; i++) {\n                    prevPoint = points[i - 1];\n                    point = points[i];\n                    prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new geom.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new geom.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new geom.Point(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new geom.Point(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new geom.Point(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new geom.Point(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new geom.Point(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new draw.Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var AreaSegmentMixin = {\n            points: function () {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, stackPoints = segment.stackPoints, points = segment._linePoints(stackPoints), pos = invertAxes ? X : Y, firstPoint, lastPoint;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!segment.stackPoints && points.length > 1) {\n                    firstPoint = points[0];\n                    lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new geom.Point(end, firstPoint.y));\n                        points.push(new geom.Point(end, lastPoint.y));\n                    } else {\n                        points.unshift(new geom.Point(firstPoint.x, end));\n                        points.push(new geom.Point(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = draw.Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = draw.Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: LineSegment.fn.points\n        });\n        deepExtend(AreaSegment.fn, AreaSegmentMixin);\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var chart = this, options = chart.options, isStacked = options.isStacked, stackPoints, pointType, style = (currentSeries.line || {}).style;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues != 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    var stackPoint, pointSlot;\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        stackPoint = stackPoints[idx];\n                        pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var endIdx = startIdx + linePoints.length;\n                var stackPoints = [];\n                var currentSeriesIx;\n                var point, gapStackPoint;\n                this._stackPoints = this._stackPoints || [];\n                for (var idx = startIdx; idx < endIdx; idx++) {\n                    currentSeriesIx = seriesIx;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][idx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        gapStackPoint = this._createGapStackPoint(idx);\n                        this._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var point;\n                while (seriesIdx > 0 && !point) {\n                    seriesIdx--;\n                    point = seriesPoints[seriesIdx][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[seriesIdx][categoryIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                var segment = this;\n                segment.prevSegment = prevSegment;\n                segment.isStacked = isStacked;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.fn.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new draw.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = $.map(prevStrokeSegments, function (segment) {\n                        return new draw.Segment(segment.anchor(), segment.controlOut(), segment.controlIn());\n                    }).reverse();\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new draw.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new draw.Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var segment = this, chart = segment.parent, prevSegment = segment.prevSegment, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, pos = invertAxes ? X : Y, segments = segment.strokeSegments(), firstPoint = segments[0].anchor(), lastPoint = last(segments).anchor();\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new draw.Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                StepLineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: StepLineSegment.fn.points\n        });\n        deepExtend(StepAreaSegment.fn, AreaSegmentMixin);\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.xAxisRanges = {};\n                chart.yAxisRanges = {};\n                chart.points = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                tooltip: { format: '{0}, {1}' },\n                labels: { format: '{0}, {1}' },\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            addErrorBar: function (point, field, fields) {\n                var errorRange, chart = this, value = point.value[field], valueErrorField = field + 'Value', lowField = field + 'ErrorLow', highField = field + 'ErrorHigh', seriesIx = fields.seriesIx, series = fields.series, errorBars = point.options.errorBars, lowValue = fields[lowField], highValue = fields[highField];\n                if (isNumber(value)) {\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        chart.seriesErrorRanges = chart.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        chart.seriesErrorRanges[field][seriesIx] = chart.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = chart.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        chart.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var chart = this, low = errorRange.low, high = errorRange.high, series = point.series, isVertical = field === Y, options = point.options.errorBars, item = {}, errorBar;\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                errorBar = new ScatterErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                chart.updateRange(item, series);\n                item[field] = high;\n                chart.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var chart = this, point, x = value.x, y = value.y, seriesIx = fields.seriesIx, series = this.options.series[seriesIx], missingValues = this.seriesMissingValues(series), seriesPoints = chart.seriesPoints[seriesIx];\n                if (!(hasValue(x) && hasValue(y))) {\n                    value = this.createMissingValue(value, missingValues);\n                }\n                if (value) {\n                    point = chart.createPoint(value, fields);\n                    if (point) {\n                        extend(point, fields);\n                        chart.addErrorBar(point, X, fields);\n                        chart.addErrorBar(point, Y, fields);\n                    }\n                    chart.updateRange(value, fields.series);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: noop,\n            updateRange: function (value, series) {\n                var chart = this, x = value.x, y = value.y, xAxisName = series.xAxis, yAxisName = series.yAxis, xAxisRange = chart.xAxisRanges[xAxisName], yAxisRange = chart.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = chart.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof x === STRING) {\n                        x = toDate(x);\n                    }\n                    xAxisRange.min = math.min(xAxisRange.min, x);\n                    xAxisRange.max = math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = chart.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof y === STRING) {\n                        y = toDate(y);\n                    }\n                    yAxisRange.min = math.min(yAxisRange.min, y);\n                    yAxisRange.max = math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'tempate',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return options;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, point;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var plotArea = this.plotArea, xAxisName = series.xAxis, xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX, yAxisName = series.yAxis, yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var chart = this, chartPoints = chart.points, pointIx = 0, point, seriesAxes, limit = !chart.options.clip;\n                chart.traverseDataPoints(function (value, fields) {\n                    point = chartPoints[pointIx++];\n                    seriesAxes = chart.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit), slotY = seriesAxes.y.getSlot(value.y, value.y, limit), pointSlot;\n                    if (point) {\n                        if (slotX && slotY) {\n                            pointSlot = chart.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, pointIx, seriesIx, currentSeries, currentSeriesPoints, pointData, value, fields;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        pointData = this._bindPoint(currentSeries, seriesIx, pointIx);\n                        value = pointData.valueFields;\n                        fields = pointData.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: chart\n                        }, fields));\n                    }\n                }\n            },\n            _bindPoint: CategoricalChart.fn._bindPoint,\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        deepExtend(ScatterChart.fn, ClipAnimationMixin);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                var chart = this;\n                ScatterChart.fn.render.call(chart);\n                chart.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.fn, LineChartMixin);\n        var BubbleChart = ScatterChart.extend({\n            init: function (plotArea, options) {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn.init.call(this, plotArea, options);\n            },\n            options: {\n                tooltip: { format: '{3}' },\n                labels: { format: '{3}' }\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = math.max(this._maxSize, math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                var chart = this;\n                chart.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(chart, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, pointsCount = series.data.length, delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount), animationOptions = {\n                        delay: delay,\n                        duration: INITIAL_ANIMATION_DURATION - delay,\n                        type: BUBBLE\n                    }, point, pointOptions;\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                point = new Bubble(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var chart = this, options = chart.options, series = options.series, boxSize = math.min(box.width(), box.height()), seriesIx, pointIx;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx], seriesPoints = chart.seriesPoints[seriesIx], minSize = currentSeries.minSize || math.max(boxSize * 0.02, 10), maxSize = currentSeries.maxSize || boxSize * 0.2, minR = minSize / 2, maxR = maxSize / 2, minArea = math.PI * minR * minR, maxArea = math.PI * maxR * maxR, areaRange = maxArea - minArea, areaRatio = areaRange / chart._maxSize;\n                    for (pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = math.abs(point.value.size) * areaRatio, r = math.sqrt((minArea + area) / math.PI), baseZIndex = valueOrDefault(point.options.zIndex, 0), zIndex = baseZIndex + (1 - r / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: r * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: noop,\n            createVisual: noop\n        });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            options: {\n                vertical: true,\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{4:d}</th>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), points = [], mid, ocSlot, lhSlot;\n                ocSlot = valueAxis.getSlot(value.open, value.close);\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                point.realBody = ocSlot;\n                mid = lhSlot.center().x;\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                point.lines = points;\n                point.box = lhSlot.clone().wrap(ocSlot);\n                if (!point._rendered) {\n                    point._rendered = true;\n                    point.createNote();\n                }\n                point.reflowNote();\n            },\n            reflowNote: function () {\n                var point = this;\n                if (point.note) {\n                    point.note.reflow(point.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new draw.Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = draw.Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = draw.Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var point = this, options = point.options, border = options.border, borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(point.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var point = this, box = point.box, clipBox = point.owner.pane.clipBox() || box;\n                return new Point2D(box.x2 + TOOLTIP_OFFSET, math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Candlestick.fn, PointEventsMixin);\n        deepExtend(Candlestick.fn, NoteMixin);\n        var CandlestickChart = CategoricalChart.extend({\n            options: {},\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var value = data.valueFields;\n                var children = chart.children;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var pointType = chart.pointType();\n                var color = data.fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type == CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !chart.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value);\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.fn, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), oPoints = [], cPoints = [], lhPoints = [], mid, oSlot, cSlot, lhSlot;\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                oSlot = valueAxis.getSlot(value.open, value.open);\n                cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                point.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                point.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                point.reflowNote();\n            },\n            createBody: $.noop\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var children = chart.children;\n                var value = data.valueFields;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value).concat(chart.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length, result = [], i, item;\n                for (i = 0; i < length; i++) {\n                    item = items[i];\n                    if (defined(item)) {\n                        appendIfNotNull(result, item);\n                    }\n                }\n                return result;\n            }\n        });\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point, options);\n                point.value = value;\n                point.createNote();\n            },\n            options: {\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                mean: {\n                    width: 2,\n                    dashType: 'dash'\n                },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{6:d}</th>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                },\n                outliers: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CROSS,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                },\n                extremes: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), whiskerSlot, boxSlot, medianSlot, meanSlot;\n                point.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                point.realBody = boxSlot;\n                point.reflowBoxSlot(box);\n                point.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                point.reflowWhiskerSlot(box);\n                medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    meanSlot = valueAxis.getSlot(value.mean);\n                    point.meanPoints = point.calcMeanPoints(box, meanSlot);\n                }\n                point.whiskerPoints = point.calcWhiskerPoints(boxSlot, whiskerSlot);\n                point.medianPoints = point.calcMedianPoints(box, medianSlot);\n                point.box = whiskerSlot.clone().wrap(boxSlot);\n                point.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var point = this, markers = options.markers || {}, value = point.value, outliers = value.outliers || [], outerFence = math.abs(value.q3 - value.q1) * 3, markersBorder, shape, outlierValue, i;\n                var elements = [];\n                for (i = 0; i < outliers.length; i++) {\n                    outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(point.color)) {\n                            markersBorder.color = point.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this.box = this.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.line);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.getBorderColor.call(this);\n            }\n        });\n        deepExtend(BoxPlot.fn, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                var segment = this;\n                segment.value = value;\n                segment.sector = sector;\n                ChartElement.fn.init.call(segment, options);\n            },\n            options: {\n                color: WHITE,\n                overlay: { gradient: ROUNDED_BEVEL },\n                border: { width: 0.5 },\n                labels: {\n                    visible: false,\n                    distance: 35,\n                    font: DEFAULT_FONT,\n                    margin: getSpacing(0.5),\n                    align: CIRCLE,\n                    zIndex: 1,\n                    position: OUTSIDE_END\n                },\n                animation: { type: PIE },\n                highlight: {\n                    visible: true,\n                    border: { width: 1 }\n                },\n                visible: true\n            },\n            render: function () {\n                var segment = this, options = segment.options, labels = options.labels, labelText = segment.value, labelTemplate;\n                if (segment._rendered || segment.visible === false) {\n                    return;\n                } else {\n                    segment._rendered = true;\n                }\n                if (labels.template) {\n                    labelTemplate = template(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: segment.dataItem,\n                        category: segment.category,\n                        value: segment.value,\n                        series: segment.series,\n                        percentage: segment.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = autoFormat(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    segment.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: segment.animationDelay\n                        }\n                    }));\n                    segment.append(segment.label);\n                }\n            },\n            reflow: function (targetBox) {\n                var segment = this;\n                segment.render();\n                segment.box = targetBox;\n                segment.reflowLabel();\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, labelsDistance = labelsOptions.distance, angle = sector.middle(), lp, x1, labelWidth, labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    labelWidth = label.box.width();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r = math.abs((sector.r - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position == INSIDE_END) {\n                        sector.r = sector.r - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.c.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(Box2D(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var segment = this, sector = segment.sector, options = segment.options;\n                ChartElement.fn.createVisual.call(this);\n                if (segment.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: segment.category,\n                            dataItem: segment.dataItem,\n                            value: segment.value,\n                            series: segment.series,\n                            percentage: segment.percentage,\n                            center: new geom.Point(sector.c.x, sector.c.y),\n                            radius: sector.r,\n                            innerRadius: sector.ir,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                segment.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            segment.visual.append(visual);\n                        }\n                    } else {\n                        segment.createSegmentVisual(segment.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var segment = this, sector = segment.sector, options = segment.options, borderOptions = options.border || {}, border = borderOptions.width > 0 ? {\n                        stroke: {\n                            color: borderOptions.color,\n                            width: borderOptions.width,\n                            opacity: borderOptions.opacity,\n                            dashType: borderOptions.dashType\n                        }\n                    } : {}, color = options.color, fill = {\n                        color: color,\n                        opacity: options.opacity\n                    }, visual;\n                visual = segment.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.c.x,\n                            sector.c.y\n                        ],\n                        innerRadius: sector.ir,\n                        radius: sector.r,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new draw.Circle(new geom.Circle(new geom.Point(sector.c.x, sector.c.y), sector.r), options);\n                } else {\n                    return ShapeBuilder.current.createRing(sector, options);\n                }\n            },\n            createAnimation: function () {\n                var options = this.options;\n                var center = this.sector.c;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var segment = this, highlight = segment.options.highlight || {}, border = highlight.border || {};\n                return segment.createSegment(segment.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.r,\n                    innerRadius: sector.ir,\n                    center: new geom.Point(sector.c.x, sector.c.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function (width, height) {\n                var point = this, box = point.sector.adjacentBox(TOOLTIP_OFFSET, width, height);\n                return new Point2D(box.x1, box.y1);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        deepExtend(PieSegment.fn, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var chart = this, legendOptions = chart.options.legend || {}, labelsOptions = legendOptions.labels || {}, inactiveItems = legendOptions.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, text, labelTemplate, markerColor, itemLabelOptions, pointVisible;\n                if (options && options.visibleInLegend !== false) {\n                    pointVisible = options.visible !== false;\n                    text = options.category || '';\n                    labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        chart.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.points = [];\n                chart.legendItems = [];\n                chart.render();\n            },\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                },\n                inactiveItems: {\n                    markers: {},\n                    labels: {}\n                }\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, colors = chart.plotArea.options.seriesColors || [], colorsCount = colors.length, series = options.series, seriesCount = series.length, currentSeries, pointData, fields, seriesIx, angle, data, anglePerValue, value, plotValue, explode, total, currentAngle, i, pointIx = 0;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    data = currentSeries.data;\n                    total = seriesTotal(currentSeries);\n                    anglePerValue = 360 / total;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx != seriesCount - 1) {\n                        if (currentSeries.labels.position == OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (i = 0; i < data.length; i++) {\n                        pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        value = pointData.valueFields.value;\n                        plotValue = math.abs(value);\n                        fields = pointData.fields;\n                        angle = plotValue * anglePerValue;\n                        explode = data.length != 1 && !!fields.explode;\n                        if (!isFn(currentSeries.color)) {\n                            currentSeries.color = fields.color || colors[i % colorsCount];\n                        }\n                        callback(value, new Ring(null, 0, 0, currentAngle, angle), {\n                            owner: chart,\n                            category: fields.category || '',\n                            index: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: fields.visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: chart.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (pointData.fields.visible !== false) {\n                            currentAngle += angle;\n                        }\n                        pointIx++;\n                    }\n                    pointIx = 0;\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                segment = new PieSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), newBox = Box2D(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth), newBoxCenter = newBox.center(), seriesConfigs = chart.seriesConfigs || [], boxCenter = box.center(), points = chart.points, count = points.length, seriesCount = options.series.length, leftSideLabels = [], rightSideLabels = [], seriesConfig, seriesIndex, label, segment, sector, r, i, c;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                r = halfMinWidth - padding;\n                c = Point2D(r + newBox.x1 + padding, r + newBox.y1 + padding);\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    sector.r = r;\n                    sector.c = c;\n                    seriesIndex = segment.seriesIx;\n                    if (seriesConfigs.length) {\n                        seriesConfig = seriesConfigs[seriesIndex];\n                        sector.ir = seriesConfig.ir;\n                        sector.r = seriesConfig.r;\n                    }\n                    if (seriesIndex == seriesCount - 1 && segment.explode) {\n                        sector.c = sector.clone().radius(sector.r * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex == seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(chart.labelComparator(true));\n                    chart.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(chart.labelComparator(false));\n                    chart.rightLabelsReflow(rightSideLabels);\n                }\n                chart.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, firstBox = labels[0].box, count = labels.length - 1, lr = sector.r + segment.options.labels.distance, distances = [], secondBox, distance, i;\n                distance = round(firstBox.y1 - (sector.c.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (i = 0; i < count; i++) {\n                    firstBox = labels[i].box;\n                    secondBox = labels[i + 1].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.c.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var chart = this, count = distances.length, remaining, left, right, i;\n                for (i = 0; i < count; i++) {\n                    left = right = i;\n                    remaining = -distances[i];\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = chart._takeDistance(distances, i, --left, remaining);\n                        remaining = chart._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                chart.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                if (distances[position] > 0) {\n                    var available = math.min(distances[position], amount);\n                    amount -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return amount;\n            },\n            reflowLabels: function (distances, labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, labelsCount = labels.length, labelOptions = segment.options.labels, labelDistance = labelOptions.distance, boxY = sector.c.y - (sector.r + labelDistance) - labels[0].box.height(), label, boxX, box, i;\n                distances[0] += 2;\n                for (i = 0; i < labelsCount; i++) {\n                    label = labels[i];\n                    boxY += distances[i];\n                    box = label.box;\n                    boxX = chart.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation == RIGHT);\n                    if (label.orientation == RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.r + sector.c.x + labelDistance;\n                        }\n                        label.reflow(Box2D(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.c.x - sector.r - labelDistance;\n                        }\n                        label.reflow(Box2D(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var chart = this, options = chart.options, connectors = options.connectors, points = chart.points, connectorLine, count = points.length, space = 4, connectorsColor, sector, angle, segment, seriesIx, label, i;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    angle = sector.middle();\n                    label = segment.label;\n                    seriesIx = { seriesId: segment.seriesIx };\n                    connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        connectorLine = new draw.Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box, centerPoint = sector.c, start = sector.point(angle), middle = Point2D(box.x1, box.center().y), sr, end, crossing;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation == RIGHT) {\n                                end = Point2D(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.min(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x < sector.c.x) {\n                                    sr = sector.c.x + sector.r + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = Point2D(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.max(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x > sector.c.x) {\n                                    sr = sector.c.x - sector.r - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this._connectorLines.push(connectorLine);\n                            this.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                reverse = reverse ? -1 : 1;\n                return function (a, b) {\n                    a = (a.parent.sector.middle() + 270) % 360;\n                    b = (b.parent.sector.middle() + 270) % 360;\n                    return (a - b) * reverse;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var cx = sector.c.x, cy = sector.c.y, r = sector.r, t = math.min(math.abs(cy - y1), math.abs(cy - y2));\n                if (t > r) {\n                    return originalX;\n                } else {\n                    return cx + math.sqrt(r * r - t * t) * (direction ? 1 : -1);\n                }\n            },\n            pointInCircle: function (point, c, r) {\n                return sqr(c.x - point.x) + sqr(c.y - point.y) < sqr(r);\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        deepExtend(PieChart.fn, PieChartMixin);\n        var DonutSegment = PieSegment.extend({\n            options: {\n                overlay: { gradient: ROUNDED_GLASS },\n                labels: { position: CENTER },\n                animation: { type: PIE }\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, lp, angle = sector.middle(), labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r -= (sector.r - sector.ir) / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(segment);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        deepExtend(DonutSegment.fn, PointEventsMixin);\n        var DonutChart = PieChart.extend({\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                }\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                segment = new DonutSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), series = options.series, currentSeries, seriesCount = series.length, seriesWithoutSize = 0, holeSize, totalSize, size, margin = 0, i, r, ir = 0, currentSize = 0;\n                chart.seriesConfigs = [];\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                totalSize = halfMinWidth - padding;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i != seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                ir = holeSize;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    size = valueOrDefault(currentSeries.size, totalSize / seriesWithoutSize);\n                    ir += margin;\n                    r = ir + size;\n                    chart.seriesConfigs.push({\n                        ir: ir,\n                        r: r\n                    });\n                    margin = currentSeries.margin || 0;\n                    ir = r;\n                }\n                PieChart.fn.reflow.call(chart, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.from = from;\n                segment.to = to;\n                segment.series = series;\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            linePoints: function () {\n                var points = [];\n                var from = this.from;\n                var fromBox = from.box;\n                var toBox = this.to.box;\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = draw.Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        function returnSelf() {\n            return this;\n        }\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                var pane = this;\n                BoxElement.fn.init.call(pane, options);\n                options = pane.options;\n                pane.id = kendo.guid();\n                pane.createTitle();\n                pane.content = new ChartElement();\n                pane.chartContainer = new ChartContainer({}, pane);\n                pane.append(pane.content);\n                pane.axes = [];\n                pane.charts = [];\n            },\n            options: {\n                zIndex: -1,\n                shrinkToFit: true,\n                title: { align: LEFT },\n                visible: true\n            },\n            createTitle: function () {\n                var pane = this;\n                var titleOptions = pane.options.title;\n                if (typeof titleOptions === OBJECT) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                pane.title = Title.buildTitle(titleOptions, pane, Pane.fn.options.title);\n            },\n            appendAxis: function (axis) {\n                var pane = this;\n                pane.content.append(axis);\n                pane.axes.push(axis);\n                axis.pane = pane;\n            },\n            appendChart: function (chart) {\n                var pane = this;\n                if (pane.chartContainer.parent !== pane.content) {\n                    pane.content.append(pane.chartContainer);\n                }\n                pane.charts.push(chart);\n                pane.chartContainer.append(chart);\n                chart.pane = pane;\n            },\n            empty: function () {\n                var pane = this, plotArea = pane.parent, i;\n                if (plotArea) {\n                    for (i = 0; i < pane.axes.length; i++) {\n                        plotArea.removeAxis(pane.axes[i]);\n                    }\n                    for (i = 0; i < pane.charts.length; i++) {\n                        plotArea.removeChart(pane.charts[i]);\n                    }\n                }\n                pane.axes = [];\n                pane.charts = [];\n                pane.content.destroy();\n                pane.content.children = [];\n                pane.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var pane = this;\n                var content;\n                if (last(pane.children) === pane.content) {\n                    content = pane.children.pop();\n                }\n                BoxElement.fn.reflow.call(pane, targetBox);\n                if (content) {\n                    pane.children.push(content);\n                }\n                if (pane.title) {\n                    pane.contentBox.y1 += pane.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: returnSelf,\n            clipRoot: returnSelf,\n            createGridLines: function () {\n                var pane = this, axes = pane.axes, allAxes = axes.concat(pane.parent.axes), vGridLines = [], hGridLines = [], gridLines, i, j, axis, vertical, altAxis;\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    vertical = axis.options.vertical;\n                    gridLines = vertical ? vGridLines : hGridLines;\n                    for (j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = $.proxy(this.createGradient, this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes, length = axes.length, chartsBox = new Box2D(), axisValueField, lineBox, axis, idx;\n                for (idx = 0; idx < length; idx++) {\n                    axis = axes[idx];\n                    axisValueField = axis.options.vertical ? Y : X;\n                    lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    length = allAxes.length;\n                    for (idx = 0; idx < length; idx++) {\n                        axis = allAxes[idx];\n                        if (!axis.options.vertical) {\n                            lineBox = axis.lineBox();\n                            chartsBox.x1 = lineBox.x1;\n                            chartsBox.x2 = lineBox.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                var container = this;\n                ChartElement.fn.init.call(container, options);\n                container.pane = pane;\n            },\n            shouldClip: function () {\n                var container = this, children = container.children, length = children.length, i;\n                for (i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new draw.Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = draw.Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: returnSelf,\n            unclipLabels: function () {\n                var container = this, charts = container.children, clipBox = container.clipBox, points, point, i, j, length, label, note;\n                for (i = 0; i < charts.length; i++) {\n                    points = charts[i].points || {};\n                    length = points.length;\n                    for (j = 0; j < length; j++) {\n                        point = points[j];\n                        if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            label = point.label;\n                            note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                ChartElement.fn.init.call(plotArea, options);\n                plotArea.series = series;\n                plotArea.initSeries();\n                plotArea.charts = [];\n                plotArea.options.legend.items = [];\n                plotArea.axes = [];\n                plotArea.crosshairs = [];\n                plotArea.createPanes();\n                plotArea.render();\n                plotArea.createCrosshairs();\n            },\n            options: {\n                series: [],\n                plotArea: { margin: {} },\n                background: '',\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                legend: {\n                    inactiveItems: {\n                        labels: { color: '#919191' },\n                        markers: { color: '#919191' }\n                    }\n                }\n            },\n            initSeries: function () {\n                var series = this.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    currentSeries.index = i;\n                }\n            },\n            createPanes: function () {\n                var plotArea = this, defaults = { title: { color: (plotArea.options.title || {}).color } }, panes = [], paneOptions = plotArea.options.panes || [], i, panesLength = math.max(paneOptions.length, 1), currentPane;\n                function setTitle(options, defaults) {\n                    if (typeof options.title === 'string') {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    plotArea.append(currentPane);\n                }\n                plotArea.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var plotArea = this, i, j, pane, axis, currentCrosshair;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    for (j = 0; j < pane.axes.length; j++) {\n                        axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            currentCrosshair = new Crosshair(axis, axis.options.crosshair);\n                            plotArea.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var plotArea = this, crosshairs = plotArea.crosshairs, axes = pane.axes, i, j;\n                for (i = crosshairs.length - 1; i >= 0; i--) {\n                    for (j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var plotArea = this, pane = plotArea.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                plotArea.axes.push(axis);\n                axis.plotArea = plotArea;\n            },\n            removeAxis: function (axisToRemove) {\n                var plotArea = this, i, axis, filteredAxes = [];\n                for (i = 0; i < plotArea.axes.length; i++) {\n                    axis = plotArea.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                plotArea.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    plotArea.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var plotArea = this, i, chart, filteredCharts = [];\n                for (i = 0; i < plotArea.charts.length; i++) {\n                    chart = plotArea.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                plotArea.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length, data = [], i, currentSeries, text, legend = this.options.legend, labels = legend.labels || {}, inactiveItems = legend.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, color, itemLabelOptions, markerColor, defaults, seriesVisible, labelTemplate;\n                for (i = 0; i < count; i++) {\n                    currentSeries = series[i];\n                    seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    text = currentSeries.name || '';\n                    labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    color = currentSeries.color;\n                    defaults = currentSeries._defaults;\n                    if (isFn(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [], yAxes = [], paneAxes, axis, paneIx, axisIx;\n                for (paneIx = 0; paneIx < panes.length; paneIx++) {\n                    paneAxes = panes[paneIx].axes;\n                    for (axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var plotArea = this, series = plotArea.series, seriesByPane = {}, i, pane, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    pane = plotArea.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var i, currentSeries, result = [];\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var plotArea = this, options = plotArea.options.plotArea, panes = plotArea.panes, margin = getSpacing(options.margin);\n                plotArea.box = targetBox.clone().unpad(margin);\n                plotArea.reflowPanes();\n                plotArea.reflowAxes(panes);\n                plotArea.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var plotArea = this, i;\n                panes = [].concat(panes);\n                this.initSeries();\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.removeCrosshairs(panes[i]);\n                    panes[i].empty();\n                }\n                plotArea.render(panes);\n                plotArea.reflowAxes(plotArea.panes);\n                plotArea.reflowCharts(panes);\n                plotArea.createCrosshairs(panes);\n                for (i = 0; i < panes.length; i++) {\n                    panes[i].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue), valuesToAdd = crossingAxes.length - crossingValues.length, defaultValue = crossingValues[0] || 0, i;\n                for (i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true), slotEdge = axis.options.reverse ? 2 : 1, targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true), targetEdge = targetAxis.options.reverse ? 2 : 1, axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var plotArea = this, xAnchor = xAxes[0], yAnchor = yAxes[0], xAnchorCrossings = plotArea.axisCrossingValues(xAnchor, yAxes), yAnchorCrossings = plotArea.axisCrossingValues(yAnchor, xAxes), anchor, anchorCrossings, leftAnchors = {}, rightAnchors = {}, topAnchors = {}, bottomAnchors = {}, pane, paneId, axis, i;\n                for (i = 0; i < yAxes.length; i++) {\n                    axis = yAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, yAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (i = 0; i < xAxes.length; i++) {\n                    axis = xAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    anchor = paneAnchor(yAxes, pane) || yAnchor;\n                    anchorCrossings = yAnchorCrossings;\n                    if (anchor !== yAnchor) {\n                        anchorCrossings = plotArea.axisCrossingValues(anchor, xAxes);\n                    }\n                    plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().y1) === round(anchor.lineBox().y1)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, anchor, xAnchorCrossings[i], anchorCrossings[i]);\n                        if (topAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(topAnchors[paneId].box, TOP).translate(0, -axis.options.margin));\n                        }\n                        topAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().y2, COORD_PRECISION) === round(anchor.lineBox().y2, COORD_PRECISION)) {\n                        if (bottomAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(bottomAnchors[paneId].box, BOTTOM).translate(0, axis.options.margin));\n                        }\n                        bottomAnchors[paneId] = axis;\n                    }\n                    if (i !== 0) {\n                        axis.alignTo(xAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, axisBox = axisGroupBox(axes), overflowX = 0, i, currentPane, currentAxis;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var i, currentPane, axes, overflowY, j, currentAxis, shrinked;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    axes = currentPane.axes;\n                    overflowY = math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (j = 0; j < axes.length; j++) {\n                            currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, offsetX = 0, paneAxes, paneBox, axisBox, offsetY, currentPane, currentAxis, i, j;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    paneAxes = currentPane.axes;\n                    paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        axisBox = axisGroupBox(paneAxes);\n                        offsetX = math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        offsetY = math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        for (j = 0; j < paneAxes.length; j++) {\n                            currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (i = 0; i < axes.length; i++) {\n                    currentAxis = axes[i];\n                    currentAxis.reflow(currentAxis.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var plotArea = this, i, axes = plotArea.groupAxes(panes);\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    plotArea.alignAxes(axes.x, axes.y);\n                    plotArea.shrinkAxisWidth(panes);\n                    plotArea.autoRotateAxisLabels(axes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisWidth(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.shrinkAxisHeight(panes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisHeight(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var axes = this.axes;\n                var panes = this.panes;\n                var axis, idx, rotated;\n                for (idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (idx = 0; idx < panes.length; idx++) {\n                        this.reflowPaneAxes(panes[idx]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes, i, length = axes.length;\n                if (length > 0) {\n                    for (i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var plotArea = this, charts = plotArea.charts, count = charts.length, box = plotArea.box, chartPane, i;\n                for (i = 0; i < count; i++) {\n                    chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var plotArea = this, box = plotArea.box, panes = plotArea.panes, panesLength = panes.length, i, currentPane, paneBox, remainingHeight = box.height(), remainingPanes = panesLength, autoHeightPanes = 0, top = box.y1, height, percents;\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    if (!currentPane.options.height) {\n                        currentPane.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    paneBox = box.clone().move(box.x1, top);\n                    currentPane.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var plotArea = this, axes = plotArea.axes, axesCount = axes.length, lineBox, box, i, j, axisA, axisB;\n                for (i = 0; i < axesCount; i++) {\n                    axisA = axes[i];\n                    for (j = 0; j < axesCount; j++) {\n                        axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || plotArea.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(draw.Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var border = options.border || {};\n                var background = options.background;\n                var opacity = options.opacity;\n                if (util.isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new draw.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts, result = [], i, j, points, point, chart;\n                if (categoryIndex !== null) {\n                    for (i = 0; i < charts.length; i++) {\n                        chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (j = 0; j < points.length; j++) {\n                                point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && point.options.index === seriesIndex) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            paneByPoint: function (point) {\n                var plotArea = this, panes = plotArea.panes, pane, i;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedCategoryAxes = {};\n                plotArea.namedValueAxes = {};\n                plotArea.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    plotArea.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            plotArea.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                categoryAxis: { categories: [] },\n                valueAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this;\n                panes = panes || plotArea.panes;\n                plotArea.createCategoryAxes(panes);\n                plotArea.aggregateCategories(panes);\n                plotArea.createCategoryAxesLabels(panes);\n                plotArea.createCharts(panes);\n                plotArea.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete plotArea.namedCategoryAxes[axisName];\n                } else {\n                    plotArea.valueAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedValueAxes[axisName];\n                }\n                if (axis === plotArea.categoryAxis) {\n                    delete plotArea.categoryAxis;\n                }\n                if (axis === plotArea.valueAxis) {\n                    delete plotArea.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this.addToLegend(paneSeries);\n                    var visibleSeries = this.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var plotArea = this, series = plotArea.srcSeries || plotArea.series, processedSeries = [], i, currentSeries, categoryAxis, axisPane, dateAxis;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    categoryAxis = plotArea.seriesCategoryAxis(currentSeries);\n                    axisPane = plotArea.findPane(categoryAxis.options.pane);\n                    dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = plotArea.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = plotArea.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                plotArea.srcSeries = series;\n                plotArea.series = processedSeries;\n            },\n            filterSeries: function (currentSeries, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(currentSeries.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var categoryIx;\n                range.min = isNumber(categoryAxis.options.min) ? math.floor(range.min) : 0;\n                range.max = isNumber(categoryAxis.options.max) ? justified ? math.floor(range.max) + 1 : math.ceil(range.max) : currentSeries.data.length;\n                currentSeries = deepExtend({}, currentSeries);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        categoryIx = minCategory;\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        categoryIx = range.max;\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: srcCategories[categoryIx],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var axisOptions = categoryAxis.options, dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE), categories = axisOptions.categories, srcCategories = axisOptions.srcCategories || categories, srcData = series.data, srcPoints = [], result = deepExtend({}, series), aggregatorSeries = deepExtend({}, series), dataItems = axisOptions.dataItems || [], i, category, categoryIx, data, aggregator, getFn = getField, outOfRangeMinIdx = util.MIN_NUM, outOfRangeMinCategory, outOfRangeMaxCategory, outOfRangeMaxIdx = util.MAX_NUM, outOfRangePoints = inArray(series.type, [\n                        LINE,\n                        VERTICAL_LINE,\n                        AREA,\n                        VERTICAL_AREA\n                    ]);\n                result.data = data = [];\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (i = 0; i < srcData.length; i++) {\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i]);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx == outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx == outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                for (i = 0; i < categories.length; i++) {\n                    data[i] = aggregator.aggregatePoints(srcPoints[i], categories[i]);\n                    if (srcPoints[i]) {\n                        dataItems[i] = data[i];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this, series = chart.options.series, categoryAxis = plotArea.seriesCategoryAxis(series[0]), categories = categoryAxis.options.categories, categoriesToAdd = math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                plotArea.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, axisName = series.axis, axisOptions = [].concat(options.valueAxis), axis = $.grep(axisOptions, function (a) {\n                        return a.name === axisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = (panes[0] || {}).name || 'default', paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var plotArea = this, axisName = series.categoryAxis, axis = axisName ? plotArea.namedCategoryAxes[axisName] : plotArea.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack, isStacked100 = stack && stack.type === '100%', clip;\n                if (defined(pane.options.clip)) {\n                    clip = pane.options.clip;\n                } else if (isStacked100) {\n                    clip = false;\n                }\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var unique = {};\n                var categoryAxes = $.map(series, function (s) {\n                    var name = s.categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        return name;\n                    }\n                });\n                function groupSeries(axis, axisIx) {\n                    return $.grep(series, function (s) {\n                        return axisIx === 0 && !s.categoryAxis || s.categoryAxis == axis;\n                    });\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], barChart = new BarChart(plotArea, extend({\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], rangeColumnChart = new RangeBarChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], bulletChart = new BulletChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], lineChart = new LineChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], areaChart = new AreaChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new OHLCChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new CandlestickChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new BoxPlotChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], waterfallChart = new WaterfallChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, centeredSeries = filterSeriesByType(plotArea.series, EQUALLY_SPACED_SERIES), seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < plotArea.series.length; seriesIx++) {\n                    var currentSeries = plotArea.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (seriesIx = 0; seriesIx < centeredSeries.length; seriesIx++) {\n                    seriesAxis = centeredSeries[seriesIx].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, series = plotArea.series, seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var plotArea = this, invertAxes = plotArea.invertAxes, definitions = [].concat(plotArea.options.categoryAxis), i, axisOptions, axisPane, categories, type, name, categoryAxis, axes = [], primaryAxis;\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        categories = axisOptions.categories || [];\n                        type = axisOptions.type || '';\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0,\n                            _deferLabels: true\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = plotArea.isJustified();\n                        }\n                        if (plotArea.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions);\n                        }\n                        if (name) {\n                            if (plotArea.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        plotArea.appendAxis(categoryAxis);\n                    }\n                }\n                primaryAxis = plotArea.categoryAxis || axes[0];\n                plotArea.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisY = primaryAxis;\n                } else {\n                    plotArea.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var plotArea = this, series = plotArea.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var plotArea = this, tracker = plotArea.valueAxisRangeTracker, defaultRange = tracker.query(), definitions = [].concat(plotArea.options.valueAxis), invertAxes = plotArea.invertAxes, baseOptions = { vertical: !invertAxes }, axisOptions, axisPane, valueAxis, primaryAxis, axes = [], range, axisType, defaultAxisRange, name, i;\n                if (plotArea.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = math.min(range.min, defaultRange.min);\n                            range.max = math.max(range.max, defaultRange.max);\n                        }\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = LogarithmicAxis;\n                        } else {\n                            axisType = NumericAxis;\n                        }\n                        valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions));\n                        if (name) {\n                            if (plotArea.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        plotArea.appendAxis(valueAxis);\n                    }\n                }\n                primaryAxis = plotArea.valueAxis || axes[0];\n                plotArea.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisX = primaryAxis;\n                } else {\n                    plotArea.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), pane = plotArea.pointPane(point), allAxes, i, axis, categories = [], values = [];\n                if (!pane) {\n                    return;\n                }\n                allAxes = pane.axes;\n                for (i = 0; i < allAxes.length; i++) {\n                    axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, plotArea.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, currentPane, i;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        deepExtend(CategoricalPlotArea.fn, PlotAreaEventsMixin);\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                var tracker = this;\n                tracker.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var tracker = this, axisRanges = tracker.axisRanges, range, chartRange, axisName;\n                for (axisName in chartAxisRanges) {\n                    range = axisRanges[axisName];\n                    chartRange = chartAxisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = math.min(range.min, chartRange.min);\n                    range.max = math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var XYPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedXAxes = {};\n                plotArea.namedYAxes = {};\n                plotArea.xAxisRangeTracker = new AxisGroupRangeTracker();\n                plotArea.yAxisRangeTracker = new AxisGroupRangeTracker();\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                xAxis: {},\n                yAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this, seriesByPane = plotArea.groupSeriesByPane(), i, pane, paneSeries, filteredSeries;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    plotArea.addToLegend(paneSeries);\n                    filteredSeries = plotArea.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    plotArea.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    plotArea.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    plotArea.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                plotArea.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.xAxisRangeTracker.update(chart.xAxisRanges);\n                plotArea.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis.options.vertical) {\n                    plotArea.yAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedYAxes[axisName];\n                } else {\n                    plotArea.xAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedXAxes[axisName];\n                }\n                if (axis === plotArea.axisX) {\n                    delete plotArea.axisX;\n                }\n                if (axis === plotArea.axisY) {\n                    delete plotArea.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, xAxisName = series.xAxis, xAxisOptions = [].concat(options.xAxis), xAxis = $.grep(xAxisOptions, function (a) {\n                        return a.name === xAxisName;\n                    })[0], yAxisName = series.yAxis, yAxisOptions = [].concat(options.yAxis), yAxis = $.grep(yAxisOptions, function (a) {\n                        return a.name === yAxisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = panes[0].name || 'default', paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterLineChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new BubbleChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var plotArea = this, axisName = options.name, namedAxes = vertical ? plotArea.namedYAxes : plotArea.namedXAxes, tracker = vertical ? plotArea.yAxisRangeTracker : plotArea.xAxisRangeTracker, axisOptions = deepExtend({}, options, { vertical: vertical }), isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC), defaultRange = tracker.query(), defaultAxisRange = isLog ? {\n                        min: 0.1,\n                        max: 1\n                    } : {\n                        min: 0,\n                        max: 1\n                    }, range = tracker.query(axisName) || defaultRange || defaultAxisRange, axis, axisType, seriesIx, series = plotArea.series, currentSeries, seriesAxisName, firstPointValue, typeSamples = [\n                        axisOptions.min,\n                        axisOptions.max\n                    ], inferredDate, i;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName == axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = math.min(range.min, defaultRange.min);\n                    range.max = math.max(range.max, defaultRange.max);\n                }\n                for (i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = DateValueAxis;\n                } else if (isLog) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n                axis = new axisType(range.min, range.max, axisOptions);\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                plotArea.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var plotArea = this, options = plotArea.options, axisPane, xAxesOptions = [].concat(options.xAxis), xAxes = [], yAxesOptions = [].concat(options.yAxis), yAxes = [];\n                each(xAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(plotArea.createXYAxis(this, false, i));\n                    }\n                });\n                each(yAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        yAxes.push(plotArea.createXYAxis(this, true, i));\n                    }\n                });\n                plotArea.axisX = plotArea.axisX || xAxes[0];\n                plotArea.axisY = plotArea.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), allAxes = plotArea.axes, i, length = allAxes.length, axis, xValues = [], yValues = [], currentValue, values;\n                for (i = 0; i < length; i++) {\n                    axis = allAxes[i];\n                    values = axis.options.vertical ? yValues : xValues;\n                    currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventTargetElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = indexOf(axis, vertical ? axes.y : axes.x);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        deepExtend(XYPlotArea.fn, PlotAreaEventsMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createPieChart(series);\n            },\n            createPieChart: function (series) {\n                var plotArea = this, firstSeries = series[0], pieChart = new PieChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        startAngle: firstSeries.startAngle,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createDonutChart(series);\n            },\n            createDonutChart: function (series) {\n                var plotArea = this, firstSeries = series[0], donutChart = new DonutChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(donutChart);\n            }\n        });\n        var PieAnimation = draw.Animation.extend({\n            options: {\n                easing: 'easeOutElastic',\n                duration: INITIAL_ANIMATION_DURATION\n            },\n            setup: function () {\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(PIE, PieAnimation);\n        var BubbleAnimation = draw.Animation.extend({\n            options: { easing: 'easeOutElastic' },\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.center));\n            }\n        });\n        draw.AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                points = [].concat(points);\n                this.hide();\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this.togglePointHighlight(point, true);\n                        this._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var points = this._points;\n                while (points.length) {\n                    this.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element == point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        var BaseTooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                tooltip.options = deepExtend({}, tooltip.options, options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = BaseTooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = BaseTooltip.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'tooltip ' + CSS_PREFIX + 'chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + 'border: #= d.border.width #px solid;' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>');\n                }\n                var padding = getSpacing(tooltip.options.padding || {}, 'auto');\n                tooltip.element = $(tooltip.template(tooltip.options)).css({\n                    'padding-top': padding.top,\n                    'padding-right': padding.right,\n                    'padding-bottom': padding.bottom,\n                    'padding-left': padding.left\n                });\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            options: {\n                border: { width: 1 },\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION }\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            _padding: function () {\n                if (!this._chartPadding) {\n                    var chartElement = this.chartElement;\n                    this._chartPadding = {\n                        top: parseInt(chartElement.css('paddingTop'), 10),\n                        left: parseInt(chartElement.css('paddingLeft'), 10)\n                    };\n                }\n                return this._chartPadding;\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.anchor, chartPadding = tooltip._padding(), chartOffset = tooltip.chartElement.offset(), top = round(anchor.y + chartPadding.top + chartOffset.top), left = round(anchor.x + chartPadding.left + chartOffset.left), zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, viewport.outerHeight() / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, viewport.outerWidth() / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            setStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                if (!defined(options.color)) {\n                    var brightness = new Color(background).percBrightness();\n                    this.element.toggleClass(CSS_PREFIX + TOOLTIP_INVERSE, brightness > 180);\n                }\n                this.element.css({\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: options.border.width\n                });\n            },\n            show: function () {\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: this.element.outerWidth(),\n                    height: this.element.outerHeight()\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _pointAnchor: function (point) {\n                var size = this._measure();\n                return point.tooltipAnchor(size.width, size.height);\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip);\n                if (!point || !point.tooltipAnchor || !tooltip.element) {\n                    return;\n                }\n                tooltip.element.html(tooltip._pointContent(point));\n                tooltip.anchor = tooltip._pointAnchor(point);\n                if (tooltip.anchor) {\n                    tooltip.setStyle(options, point);\n                    BaseTooltip.fn.show.call(tooltip, point);\n                } else {\n                    tooltip.hide();\n                }\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (element, plotArea, options) {\n                var tooltip = this;\n                BaseTooltip.fn.init.call(tooltip, element, options);\n                tooltip.plotArea = plotArea;\n            },\n            options: {\n                sharedTemplate: '<table>' + '<th colspan=\\'2\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(point.series.name) { # ' + '<td> #= point.series.name #:</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            showAt: function (points, coords) {\n                var tooltip = this, options = tooltip.options, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, index = axis.pointCategoryIndex(coords), category = axis.getCategory(coords), slot = axis.getSlot(index), content;\n                points = $.grep(points, function (p) {\n                    var tooltip = p.series.tooltip, excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (points.length > 0) {\n                    content = tooltip._content(points, category);\n                    tooltip.element.html(content);\n                    tooltip.anchor = tooltip._slotAnchor(coords, slot);\n                    tooltip.setStyle(options, points[0]);\n                    BaseTooltip.fn.show.call(tooltip);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var tooltip = this, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, anchor, size = this._measure(), hCenter = point.y - size.height / 2;\n                if (axis.options.vertical) {\n                    anchor = Point2D(point.x, hCenter);\n                } else {\n                    anchor = Point2D(slot.center().x, hCenter);\n                }\n                return anchor;\n            },\n            _content: function (points, category) {\n                var tooltip = this, template, content;\n                template = kendo.template(tooltip.options.sharedTemplate);\n                content = template({\n                    points: points,\n                    category: category,\n                    categoryText: autoFormat(tooltip.options.categoryFormat, category),\n                    content: tooltip._pointContent\n                });\n                return content;\n            }\n        });\n        var Crosshair = ChartElement.extend({\n            init: function (axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n            },\n            options: {\n                color: BLACK,\n                width: 1,\n                zIndex: -1,\n                tooltip: { visible: false }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    if (!this.tooltip) {\n                        this.tooltip = new CrosshairTooltip(this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                    }\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var crosshair = this, axis = crosshair.axis, vertical = axis.options.vertical, box = crosshair.getBox(), point = crosshair.point, dim = vertical ? Y : X, slot, lineStart, lineEnd;\n                lineStart = new geom.Point(box.x1, box.y1);\n                if (vertical) {\n                    lineEnd = new geom.Point(box.x2, box.y1);\n                } else {\n                    lineEnd = new geom.Point(box.x1, box.y2);\n                }\n                if (point) {\n                    if (crosshair.stickyMode) {\n                        slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                crosshair.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var crosshair = this, axis = crosshair.axis, axes = axis.pane.axes, length = axes.length, vertical = axis.options.vertical, box = axis.lineBox().clone(), dim = vertical ? X : Y, axisLineBox, currentAxis, i;\n                for (i = 0; i < length; i++) {\n                    currentAxis = axes[i];\n                    if (currentAxis.options.vertical != vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new draw.Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                var crosshair = this;\n                if (crosshair.tooltip) {\n                    crosshair.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(crosshair);\n            }\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (crosshair, options) {\n                var tooltip = this, chartElement = crosshair.axis.getRoot().chart.element;\n                tooltip.crosshair = crosshair;\n                BaseTooltip.fn.init.call(tooltip, chartElement, deepExtend({}, tooltip.options, { background: crosshair.axis.plotArea.options.seriesColors[0] }, options));\n                tooltip.setStyle(tooltip.options);\n            },\n            options: { padding: 10 },\n            showAt: function (point) {\n                var tooltip = this, element = tooltip.element;\n                if (element) {\n                    tooltip.point = point;\n                    tooltip.element.html(tooltip.content(point));\n                    tooltip.anchor = tooltip.getAnchor();\n                    tooltip.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (point) {\n                var tooltip = this, options = tooltip.options, axis = tooltip.crosshair.axis, axisOptions = axis.options, content, value, tooltipTemplate;\n                value = content = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({ value: value });\n                } else if (options.format) {\n                    content = autoFormat(options.format, value);\n                } else {\n                    if (axisOptions.type === DATE) {\n                        content = autoFormat(axisOptions.labels.dateFormats[axisOptions.baseUnit], value);\n                    }\n                }\n                return content;\n            },\n            getAnchor: function () {\n                var tooltip = this, options = tooltip.options, position = options.position, crosshair = this.crosshair, vertical = !crosshair.axis.options.vertical, lineBox = crosshair.line.bbox(), size = this._measure(), halfWidth = size.width / 2, halfHeight = size.height / 2, padding = options.padding, anchor;\n                if (vertical) {\n                    if (position === BOTTOM) {\n                        anchor = lineBox.bottomLeft().translate(-halfWidth, padding);\n                    } else {\n                        anchor = lineBox.topLeft().translate(-halfWidth, -size.height - padding);\n                    }\n                } else {\n                    if (position === LEFT) {\n                        anchor = lineBox.topLeft().translate(-size.width - padding, -halfHeight);\n                    } else {\n                        anchor = lineBox.topRight().translate(padding, -halfHeight);\n                    }\n                }\n                return anchor;\n            },\n            hide: function () {\n                this.element.hide();\n                this.point = null;\n            },\n            destroy: function () {\n                BaseTooltip.fn.destroy.call(this);\n                this.point = null;\n            }\n        });\n        var Aggregates = {\n            min: function (values) {\n                var min = MAX_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        min = math.min(min, n);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var max = MIN_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        max = math.max(max, n);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length, sum = 0, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        sum += n;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length, count = 0, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var result = values[0], count = countNumbers(values);\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        return val;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function DefaultAggregates() {\n            this._defaults = {};\n        }\n        DefaultAggregates.prototype = {\n            register: function (seriesTypes, aggregates) {\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        };\n        DefaultAggregates.current = new DefaultAggregates();\n        var Selection = Observable.extend({\n            init: function (chart, categoryAxis, options) {\n                var that = this, chartElement = chart.element, categoryAxisLineBox = categoryAxis.lineBox(), valueAxis = that.getValueAxis(categoryAxis), valueAxisLineBox = valueAxis.lineBox(), selectorPrefix = '.' + CSS_PREFIX, wrapper, padding;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({}, that.options, options);\n                options = that.options;\n                that.chart = chart;\n                that.chartElement = chartElement;\n                that.categoryAxis = categoryAxis;\n                that._dateAxis = that.categoryAxis instanceof DateCategoryAxis;\n                that.valueAxis = valueAxis;\n                if (that._dateAxis) {\n                    deepExtend(options, {\n                        min: toDate(options.min),\n                        max: toDate(options.max),\n                        from: toDate(options.from),\n                        to: toDate(options.to)\n                    });\n                }\n                that.template = Selection.template;\n                if (!that.template) {\n                    that.template = Selection.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'selector\\' ' + 'style=\\'width: #= d.width #px; height: #= d.height #px;' + ' top: #= d.offset.top #px; left: #= d.offset.left #px;\\'>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'selection\\'>' + '<div class=\\'' + CSS_PREFIX + 'selection-bg\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'leftHandle\\'><div></div></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'rightHandle\\'><div></div></div>' + '</div></div>');\n                }\n                padding = {\n                    left: parseInt(chartElement.css('paddingLeft'), 10),\n                    right: parseInt(chartElement.css('paddingTop'), 10)\n                };\n                that.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height(),\n                    padding: padding,\n                    offset: {\n                        left: valueAxisLineBox.x2 + padding.left,\n                        top: valueAxisLineBox.y1 + padding.right\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n                if (that.options.visible) {\n                    that.wrapper = wrapper = $(that.template(that.options)).appendTo(chartElement);\n                    that.selection = wrapper.find(selectorPrefix + 'selection');\n                    that.leftMask = wrapper.find(selectorPrefix + 'mask').first();\n                    that.rightMask = wrapper.find(selectorPrefix + 'mask').last();\n                    that.leftHandle = wrapper.find(selectorPrefix + 'leftHandle');\n                    that.rightHandle = wrapper.find(selectorPrefix + 'rightHandle');\n                    that.options.selection = {\n                        border: {\n                            left: parseFloat(that.selection.css('border-left-width'), 10),\n                            right: parseFloat(that.selection.css('border-right-width'), 10)\n                        }\n                    };\n                    that.leftHandle.css('top', (that.selection.height() - that.leftHandle.height()) / 2);\n                    that.rightHandle.css('top', (that.selection.height() - that.rightHandle.height()) / 2);\n                    that.set(that._index(options.from), that._index(options.to));\n                    that.bind(that.events, that.options);\n                    that.wrapper[0].style.cssText = that.wrapper[0].style.cssText;\n                    that.wrapper.on(MOUSEWHEEL_NS, proxy(that._mousewheel, that));\n                    if (kendo.UserEvents) {\n                        that.userEvents = new kendo.UserEvents(that.wrapper, {\n                            global: true,\n                            stopPropagation: true,\n                            multiTouch: true,\n                            fastTap: true,\n                            press: proxy(that._press, that),\n                            start: proxy(that._start, that),\n                            move: proxy(that._move, that),\n                            end: proxy(that._end, that),\n                            tap: proxy(that._tap, that),\n                            gesturestart: proxy(that._gesturechange, that),\n                            gesturechange: proxy(that._gesturechange, that)\n                        });\n                    } else {\n                        that.leftHandle.add(that.rightHandle).removeClass(CSS_PREFIX + 'handle');\n                    }\n                }\n            },\n            events: [\n                SELECT_START,\n                SELECT,\n                SELECT_END\n            ],\n            options: {\n                visible: true,\n                mousewheel: { zoom: BOTH },\n                min: MIN_VALUE,\n                max: MAX_VALUE\n            },\n            destroy: function () {\n                var that = this, userEvents = that.userEvents;\n                if (userEvents) {\n                    userEvents.destroy();\n                }\n                clearTimeout(that._mwTimeout);\n                that._state = null;\n                if (that.wrapper) {\n                    that.wrapper.remove();\n                }\n            },\n            _rangeEventArgs: function (range) {\n                var that = this;\n                return {\n                    axis: that.categoryAxis.options,\n                    from: that._value(range.from),\n                    to: that._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var that = this, options = that.options, target = $(e.event.target), args;\n                if (that._state || !target) {\n                    return;\n                }\n                that.chart._unsetActivePoint();\n                that._state = {\n                    moveTarget: target.parents('.k-handle').add(target).first(),\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: that._index(options.from),\n                        to: that._index(options.to)\n                    }\n                };\n                args = that._rangeEventArgs({\n                    from: that._index(options.from),\n                    to: that._index(options.to)\n                });\n                if (that.trigger(SELECT_START, args)) {\n                    that.userEvents.cancel();\n                    that._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    var target = $(e.event.target);\n                    handle = target.parents('.k-handle').add(target).first();\n                }\n                handle.addClass('k-handle-active');\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, state = that._state, options = that.options, categories = that.categoryAxis.options.categories, from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), delta = state.startLocation - e.x.location, range = state.range, oldRange = {\n                        from: range.from,\n                        to: range.to\n                    }, span = range.to - range.from, target = state.moveTarget, scale = that.wrapper.width() / (categories.length - 1), offset = math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                e.preventDefault();\n                if (target.is('.k-selection, .k-selection-bg')) {\n                    range.from = math.min(math.max(min, from - offset), max - span);\n                    range.to = math.min(range.from + span, max);\n                } else if (target.is('.k-leftHandle')) {\n                    range.from = math.min(math.max(min, from - offset), max - 1);\n                    range.to = math.max(range.from + 1, range.to);\n                } else if (target.is('.k-rightHandle')) {\n                    range.to = math.min(math.max(min + 1, to - offset), max);\n                    range.from = math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.move(range.from, range.to);\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                var range = this._state.range;\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        moveTarget.removeClass('k-handle-active');\n                    }\n                    delete this._state;\n                }\n                this.set(range.from, range.to);\n                this.trigger(SELECT_END, this._rangeEventArgs(range));\n            },\n            _gesturechange: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, chart = that.chart, state = that._state, options = that.options, categoryAxis = that.categoryAxis, range = state.range, p0 = chart._toModelCoordinates(e.touches[0].x.location).x, p1 = chart._toModelCoordinates(e.touches[1].x.location).x, left = math.min(p0, p1), right = math.max(p0, p1);\n                e.preventDefault();\n                state.moveTarget = null;\n                range.from = categoryAxis.pointCategoryIndex(new dataviz.Point2D(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new dataviz.Point2D(right)) || options.max;\n                that.move(range.from, range.to);\n            },\n            _tap: function (e) {\n                var that = this, options = that.options, coords = that.chart._eventCoordinates(e), categoryAxis = that.categoryAxis, categoryIx = categoryAxis.pointCategoryIndex(new dataviz.Point2D(coords.x, categoryAxis.box.y1)), from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), span = to - from, mid = from + span / 2, offset = math.round(mid - categoryIx), range = {}, rightClick = e.event.which === 3;\n                if (that._state || rightClick) {\n                    return;\n                }\n                e.preventDefault();\n                that.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = math.min(math.max(min, from - offset), max - span);\n                range.to = math.min(range.from + span, max);\n                that._start(e);\n                if (that._state) {\n                    that._state.range = range;\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                    that._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var that = this, options = that.options, delta = mwDelta(e);\n                that._start({ event: { target: that.selection } });\n                if (that._state) {\n                    var range = that._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (that.expand(delta)) {\n                        that.trigger(SELECT, {\n                            axis: that.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: that._value(range.from),\n                            to: that._value(range.to)\n                        });\n                    }\n                    if (that._mwTimeout) {\n                        clearTimeout(that._mwTimeout);\n                    }\n                    that._mwTimeout = setTimeout(function () {\n                        that._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var that = this, options = that.options, offset = options.offset, padding = options.padding, border = options.selection.border, leftMaskWidth, rightMaskWidth, box, distance;\n                box = that._slot(from);\n                leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                that.leftMask.width(leftMaskWidth);\n                that.selection.css('left', leftMaskWidth);\n                box = that._slot(to);\n                rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                that.rightMask.width(rightMaskWidth);\n                distance = options.width - rightMaskWidth;\n                if (distance != options.width) {\n                    distance += border.right;\n                }\n                that.rightMask.css('left', distance);\n                that.selection.width(math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0));\n            },\n            set: function (from, to) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max);\n                from = limitValue(that._index(from), min, max);\n                to = limitValue(that._index(to), from + 1, max);\n                if (options.visible) {\n                    that.move(from, to);\n                }\n                options.from = that._value(from);\n                options.to = that._value(to);\n            },\n            expand: function (delta) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max), zDir = options.mousewheel.zoom, from = that._index(options.from), to = that._index(options.to), range = {\n                        from: from,\n                        to: to\n                    }, oldRange = deepExtend({}, range);\n                if (that._state) {\n                    range = that._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes, axesCount = axes.length, i, axis;\n                for (i = 0; i < axesCount; i++) {\n                    axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            }\n        });\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                key: 'none',\n                lock: 'none'\n            },\n            start: function (e) {\n                this._active = acceptKey(e.event, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var plotArea = this.plotArea;\n                var axisRanges = this.axisRanges;\n                var range;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() != position) {\n                    var axes = plotArea.axes;\n                    var axis;\n                    var range;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        axis = axes[idx];\n                        if (position == X && !axis.options.vertical || position == Y && axis.options.vertical) {\n                            range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this._marquee = $('<div class=\\'k-marquee\\'><div class=\\'k-marquee-color\\'></div></div>');\n            },\n            options: {\n                key: 'shift',\n                lock: 'none'\n            },\n            start: function (e) {\n                if (acceptKey(e.event, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._toModelCoordinates(e.x.client, e.y.client);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var elementOffset = this._elementOffset();\n                        clipBox.translate(elementOffset.left, elementOffset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        this._marquee.appendTo(document.body).css({\n                            left: e.x.client + 1,\n                            top: e.y.client + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var chartOffset = chartElement.offset();\n                return {\n                    left: parseInt(chartElement.css('paddingTop'), 10) + chartOffset.left,\n                    top: parseInt(chartElement.css('paddingLeft'), 10) + chartOffset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var selectionPosition = this._selectionPosition(e);\n                    this._marquee.css(selectionPosition);\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset.left;\n                    selectionPosition.top -= elementOffset.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this._marquee.remove();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this._marquee.remove();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        axisRanges.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = math.min(e.x.startLocation, e.x.location);\n                var top = math.min(e.y.startLocation, e.y.location);\n                var width = math.abs(e.x.initialDelta);\n                var height = math.abs(e.y.initialDelta);\n                var clipBox = this._zoomPaneClipBox;\n                if (lock == X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock == Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (e.x.location > clipBox.x2) {\n                    width = clipBox.x2 - e.x.startLocation;\n                }\n                if (e.x.location < clipBox.x1) {\n                    width = e.x.startLocation - clipBox.x1;\n                }\n                if (e.y.location > clipBox.y2) {\n                    height = clipBox.y2 - e.y.startLocation;\n                }\n                if (e.y.location < clipBox.y1) {\n                    height = e.y.startLocation - clipBox.y1;\n                }\n                return {\n                    left: math.max(left, clipBox.x1),\n                    top: math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var SeriesAggregator = function (series, binder, defaultAggregates) {\n            var sa = this, canonicalFields = binder.canonicalFields(series), valueFields = binder.valueFields(series), sourceFields = binder.sourceFields(series, canonicalFields), seriesFields = sa._seriesFields = [], defaults = defaultAggregates.query(series.type), rootAggregate = series.aggregate || defaults, i;\n            sa._series = series;\n            sa._binder = binder;\n            for (i = 0; i < canonicalFields.length; i++) {\n                var field = canonicalFields[i], fieldAggregate;\n                if (typeof rootAggregate === OBJECT) {\n                    fieldAggregate = rootAggregate[field];\n                } else if (i === 0 || inArray(field, valueFields)) {\n                    fieldAggregate = rootAggregate;\n                } else {\n                    break;\n                }\n                if (fieldAggregate) {\n                    seriesFields.push({\n                        canonicalName: field,\n                        name: sourceFields[i],\n                        transform: isFn(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                    });\n                }\n            }\n        };\n        SeriesAggregator.prototype = {\n            aggregatePoints: function (srcPoints, group) {\n                var sa = this, data = sa._bindPoints(srcPoints || []), series = sa._series, seriesFields = sa._seriesFields, i, field, srcValues, value, firstDataItem = data.dataItems[0], result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (i = 0; i < seriesFields.length; i++) {\n                    field = seriesFields[i];\n                    srcValues = sa._bindField(data.values, field.canonicalName);\n                    value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && typeof value === OBJECT && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            ensureTree(field.name, result);\n                            kendo.setter(field.name)(result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var sa = this, binder = sa._binder, series = sa._series, values = [], dataItems = [], i, pointIx;\n                for (i = 0; i < points.length; i++) {\n                    pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [], count = data.length, i, item, value, valueFields;\n                for (i = 0; i < count; i++) {\n                    item = data[i];\n                    valueFields = item.valueFields;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        };\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n            },\n            slot: function (from, to, limit) {\n                if (!defined(limit)) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var result, ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y), ua;\n            if (u_b !== 0) {\n                ua = ua_t / u_b;\n                result = new Point2D(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series, i, seriesLength = series.length, seriesType, seriesDefaults = options.seriesDefaults, commonDefaults = deepExtend({}, options.seriesDefaults), themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {}, commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (i = 0; i < seriesLength; i++) {\n                seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function applySeriesColors(options) {\n            var series = options.series, colors = options.seriesColors || [], i, currentSeries, seriesColor, defaults;\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                seriesColor = colors[i % colors.length];\n                currentSeries.color = currentSeries.color || seriesColor;\n                defaults = currentSeries._defaults;\n                if (defaults) {\n                    defaults.color = defaults.color || seriesColor;\n                }\n            }\n        }\n        function resolveAxisAliases(options) {\n            var alias;\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                alias = this + 'Axes';\n                if (options[alias]) {\n                    options[this + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            });\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                var axisName = this + 'Axis', axes = [].concat(options[axisName]), axisDefaults = options.axisDefaults || {};\n                axes = $.map(axes, function (axisOptions) {\n                    var axisColor = (axisOptions || {}).color;\n                    var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                        line: { color: axisColor },\n                        labels: { color: axisColor },\n                        title: { color: axisColor }\n                    }, axisOptions);\n                    delete result[axisName];\n                    return result;\n                });\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            });\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length, categories = 0, i;\n            for (i = 0; i < seriesCount; i++) {\n                categories = math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        extend($.easing, {\n            easeOutElastic: function (n, d, first, diff) {\n                var s = 1.70158, p = 0, a = diff;\n                if (n === 0) {\n                    return first;\n                }\n                if (n === 1) {\n                    return first + diff;\n                }\n                if (!p) {\n                    p = 0.5;\n                }\n                if (a < math.abs(diff)) {\n                    a = diff;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * math.PI) * math.asin(diff / a);\n                }\n                return a * math.pow(2, -10 * n) * math.sin((n * 1 - s) * (1.1 * math.PI) / p) + diff + first;\n            }\n        });\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        function getDateField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field, value = row[key];\n            if (!value) {\n                value = toDate(getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function toDate(value) {\n            var result, i;\n            if (value instanceof Date) {\n                result = value;\n            } else if (typeof value === STRING) {\n                result = kendo.parseDate(value) || new Date(value);\n            } else if (value) {\n                if (isArray(value)) {\n                    result = [];\n                    for (i = 0; i < value.length; i++) {\n                        result.push(toDate(value[i]));\n                    }\n                } else {\n                    result = new Date(value);\n                }\n            }\n            return result;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                return map(value, toTime);\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function addDuration(date, value, unit, weekStartDay) {\n            var result = date, hours;\n            if (date) {\n                date = toDate(date);\n                hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    kendo.date.adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    date = new Date(date);\n                    date.setUTCMinutes(0, 0, 0);\n                    result = addTicks(date, value * TIME_PER_HOUR);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                }\n                if (result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            var day = date.getDay(), daysToSubtract = 0;\n            if (!isNaN(day)) {\n                weekStartDay = weekStartDay || 0;\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function floorDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            return addDuration(date, 0, unit, weekStartDay);\n        }\n        function ceilDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b, offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var index;\n            var date = toDate(value);\n            var startDate = toDate(start);\n            if (baseUnit == MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit == YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit == DAYS || baseUnit == WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length, box, i, axisBox;\n            if (length > 0) {\n                for (i = 0; i < length; i++) {\n                    axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || Box2D();\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0, high = sortedDates.length - 1, i, currentDate;\n            while (low <= high) {\n                i = math.floor((low + high) / 2);\n                currentDate = sortedDates[i];\n                if (currentDate < date) {\n                    low = i + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = i - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[i - 1], date)) {\n                    i--;\n                }\n                return i;\n            }\n            if (sortedDates[i] <= date) {\n                return i;\n            } else {\n                return i - 1;\n            }\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function countNumbers(values) {\n            var length = values.length, count = 0, i, num;\n            for (i = 0; i < length; i++) {\n                num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        function axisRanges(axes) {\n            var i, axis, axisName, ranges = {};\n            for (i = 0; i < axes.length; i++) {\n                axis = axes[i];\n                axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function evalOptions(options, context, state, dryRun) {\n            var property, propValue, excluded, defaults, depth, needsEval = false;\n            state = state || {};\n            excluded = state.excluded = state.excluded || [];\n            defaults = state.defaults = state.defaults || {};\n            depth = state.depth = state.depth || 0;\n            if (depth > MAX_EXPAND_DEPTH) {\n                return;\n            }\n            for (property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    propValue = options[property];\n                    if (isFn(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (typeof propValue === OBJECT) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!isFn(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        function filterSeriesByType(series, types) {\n            var i, currentSeries, result = [];\n            types = [].concat(types);\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                if (inArray(currentSeries.type, types)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function indexOf(item, arr) {\n            if (item instanceof Date) {\n                for (var i = 0, length = arr.length; i < length; i++) {\n                    if (dateEquals(arr[i], item)) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return $.inArray(item, arr);\n            }\n        }\n        function sortDates(dates, comparer) {\n            comparer = comparer || dateComparer;\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            var i, dates = sortDates(srcDates, comparer), length = dates.length, result = length > 0 ? [dates[0]] : [];\n            comparer = comparer || dateComparer;\n            for (i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type, dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function transpose(rows) {\n            var result = [], rowCount = rows.length, rowIx, row, colIx, colCount;\n            for (rowIx = 0; rowIx < rowCount; rowIx++) {\n                row = rows[rowIx];\n                colCount = row.length;\n                for (colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function ensureTree(fieldName, target) {\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.'), path = '', val;\n                while (parts.length > 1) {\n                    path += parts.shift();\n                    val = kendo.getter(path)(target) || {};\n                    kendo.setter(path)(target, val);\n                    path += '.';\n                }\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (typeof value === STRING) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value) && pointData.fields.visible !== false) {\n                    sum += math.abs(value);\n                }\n            }\n            return sum;\n        }\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient != 'none';\n        }\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            var axisRange;\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var accept = key == 'none' && !(e.ctrlKey || e.shiftKey || e.altKey) || e[key + 'Key'];\n            return accept;\n        }\n        function preloadFonts(options, callback) {\n            var fonts = [];\n            fetchFonts(options, fonts);\n            kendo.util.loadFonts(fonts, callback);\n        }\n        function fetchFonts(options, fonts, state) {\n            var MAX_DEPTH = 5;\n            state = state || { depth: 0 };\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        }\n        function clearMissingValues(originalOptions, options) {\n            var fieldValue, originalValue, field, nullValue;\n            for (field in options) {\n                fieldValue = options[field];\n                originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isPlainObject(fieldValue)) {\n                        if (isPlainObject(fieldValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        dataviz.ui.plugin(Chart);\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        deepExtend(dataviz, {\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            CategoryAxis: CategoryAxis,\n            ChartAxis: ChartAxis,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            ShapeElement: ShapeElement,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            addDuration: addDuration,\n            areNumbers: areNumbers,\n            axisGroupBox: axisGroupBox,\n            categoriesCount: categoriesCount,\n            ceilDate: ceilDate,\n            countNumbers: countNumbers,\n            duration: duration,\n            ensureTree: ensureTree,\n            indexOf: indexOf,\n            isNumber: isNumber,\n            floorDate: floorDate,\n            filterSeriesByType: filterSeriesByType,\n            hasValue: hasValue,\n            lteDateIndex: lteDateIndex,\n            evalOptions: evalOptions,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray,\n            sortDates: sortDates,\n            startOfWeek: startOfWeek,\n            transpose: transpose,\n            toDate: toDate,\n            toTime: toTime,\n            uniqueDates: uniqueDates\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}