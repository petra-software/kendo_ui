{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals","1","10","100","2","20","200","3","30","300","4","40","400","5","50","500","6","60","600","7","70","700","8","80","800","9","90","900","1000","values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","mergeSort","a","cmp","merge","b","ai","bi","slice","left","right","Math","floor","isUnicodeLetter","ch","RX_UNICODE_LETTER","test","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","RegExp","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","Range","start","stop","step","rangeIntegerScale","k","range","j","Utils","sign","Infinity","abs","findRadian","end","sngXComp","sngYComp","y","atan","Easing","Ticker","diagram","isArray","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","parseFloat","isEmpty","simpleExtend","destination","source","initArray","serializePoints","points","res","deserializePoints","s","Point","parseInt","randomInteger","lower","upper","random","DFT","el","func","item","childNodes","getMatrixAngle","atan2","getMatrixScaling","sX","sqrt","sY","number","findAngle","center","forEach","iterator","thisRef","any","predicate","remove","what","ax","indexOf","contains","fold","list","acc","context","initial","find","constraint","insert","position","clear","bisort","sortfunc","addRange","easeInOut","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","caller","onStep","seekTo","to","seekFromTo","from","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","xy","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","shi","clientWidth","clientHeight","SpringLayout","layoutGraph","limitToView","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","createElement","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","connectors","HIT_TEST_DISTANCE","noMeta","meta","ctrlKey","altKey","shiftKey","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","browser","support","proxy","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","SOURCE","TARGET","HANDLE_NAMES","-1","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","enabled","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","selectable","multiple","selector","isSelected","selectArea","_createConnection","_c","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","isActive","handleName","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","msie","version","cssText","disabledShape","isNew","selectedConnections","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","_refreshHandler","ctr","_clearVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","Array","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","preventDefault","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","toConenctor","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","_testRoutePoints","router","passRoute","_shapesQuadTree","hitTestRect","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","_pauseMouseHandlers","_eventPositions","_meta","_createToolBar","ctrlPressed","focused","keyCode","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","_kendoNode","srcElement","themes","themeName","themeOptions","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","viewportVector","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","_popup","showAt","one","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","spriteCssClass","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":"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","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                return id in cache ? cache[id] : cache[id] = f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        function mergeSort(a, cmp) {\n            if (a.length < 2) {\n                return a.slice();\n            }\n            function merge(a, b) {\n                var r = [], ai = 0, bi = 0, i = 0;\n                while (ai < a.length && bi < b.length) {\n                    if (cmp(a[ai], b[bi]) <= 0) {\n                        r[i++] = a[ai++];\n                    } else {\n                        r[i++] = b[bi++];\n                    }\n                }\n                if (ai < a.length) {\n                    r.push.apply(r, a.slice(ai));\n                }\n                if (bi < b.length) {\n                    r.push.apply(r, b.slice(bi));\n                }\n                return r;\n            }\n            return function sort(a) {\n                if (a.length <= 1) {\n                    return a;\n                }\n                var m = Math.floor(a.length / 2);\n                var left = a.slice(0, m);\n                var right = a.slice(m);\n                left = sort(left);\n                right = sort(right);\n                return merge(left, right);\n            }(a);\n        }\n        function isUnicodeLetter(ch) {\n            return RX_UNICODE_LETTER.test(ch);\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode,\n                mergeSort: mergeSort,\n                isUnicodeLetter: isUnicodeLetter\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n        var RX_UNICODE_LETTER = new RegExp('[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]');\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                e = e || {};\n                e.element = this;\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function () {\n                this.trigger('geometryChange', { element: this });\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = $.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if ($.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = kendo.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                options = this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    options = deepExtend({}, options, { fill: { color: options.color } });\n                }\n                return options;\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    var fontOptions = [];\n                    if (options.fontStyle) {\n                        fontOptions.push(options.fontStyle);\n                    }\n                    if (options.fontWeight) {\n                        fontOptions.push(options.fontWeight);\n                    }\n                    fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? 'px' : ''));\n                    fontOptions.push(options.fontFamily);\n                    options.font = fontOptions.join(' ');\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    options = this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize,\n                            fontStyle: options.fontStyle,\n                            fontWeight: options.fontWeight\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = kendo.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, browser = kendo.support.browser, defined = kendo.util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated', SOURCE = 'source', TARGET = 'target', HANDLE_NAMES = {\n                '-1': SOURCE,\n                '1': TARGET\n            };\n        diagram.Cursors = Cursors;\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + 'Key'];\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem;\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function () {\n                var diagram = this.toolService.diagram, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n                if (enabled) {\n                    if (selectable.key && selectable.key != 'none') {\n                        enabled = meta[selectable.key + 'Key'];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, connector = toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == 'touchmove') {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection],\n                    connectionHandle: TARGET\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target, cachedTouchTarget = d._cachedTouchTarget;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n                if (cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = selectable !== false && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n                toolService.selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: name\n                    })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c],\n                        connectionHandle: this.handleName\n                    });\n                    return true;\n                }\n            },\n            end: function (p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection],\n                                connectionHandle: this.handleName\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            selectSingle: function (item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n                if (browser.msie && browser.version == 7) {\n                    element[0].style.cssText = element[0].style.cssText;\n                }\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = kendo.util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n                return handle;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            _clearVisual: function () {\n                var that = this;\n                if (that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n            _keepCachedTouchTarget: function () {\n                var that = this, visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if (i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = kendo.util.defined, isArray = $.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-icontext #=className#\" href=\"\\\\#\"><span class=\"#=iconClass# #=imageClass#\"></span>#=text#</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-i-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-i-update',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            _redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            redrawVisual: function () {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConenctor: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = kendo.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, sourceConnectors, targetConnectors, source = connection.source(), target = connection.target();\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect;\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _interactionDefaults: function () {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({ multiple: mobile ? false : true }, options.selectable);\n                }\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({ key: mobile ? 'none' : 'ctrl' }, options.pannable);\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that)).on('keydown' + NS, proxy(that._keydown, that));\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: proxy(that._tap, that),\n                    start: proxy(that._dragStart, that),\n                    move: proxy(that._drag, that),\n                    end: proxy(that._dragEnd, that),\n                    gesturestart: proxy(that._gestureStart, that),\n                    gesturechange: proxy(that._gestureChange, that),\n                    gestureend: proxy(that._gestureEnd, that)\n                });\n                that.toolService = new ToolService(that);\n                this.scrollable.on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that)).on('mousemove' + NS, proxy(that._mouseMove, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseup' + NS, proxy(that._mouseUp, that));\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _dragStart: function (e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n            _drag: function (e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n            _dragEnd: function (e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n            _mouseMove: function (e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n            _mouseDown: function () {\n                this._pauseMouseHandlers = true;\n            },\n            _mouseUp: function () {\n                this._pauseMouseHandlers = false;\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n                toolService._updateHoveredItem(point);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    this.trigger('click', {\n                        item: item,\n                        point: point\n                    });\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, { addToSelection: multiple && ctrlPressed });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._eventPositions(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey,\n                    type: e.type\n                };\n            },\n            _eventPositions: function (e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? 'startLocation' : 'location';\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    var event = e.originalEvent;\n                    point = new Point(event.pageX, event.pageY);\n                }\n                return this.documentToModel(point);\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this, themes = dataviz.ui.themes || {}, themeName = ((that.options || {}).theme || '').toLowerCase(), themeOptions = (themes[themeName] || {}).diagram;\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.focus();\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this.canvas.surface.hideTooltip();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            getShapeByModelId: function (id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n            getShapeByModelUid: function (uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n            getConnectionByModelId: function (id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function (connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n            getConnectionByModelUid: function (uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _createToolBar: function (preventClosing) {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = Point(shapeBounds.x, shapeBounds.y).minus(Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = Point(connectionBounds.x, connectionBounds.y).minus(Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one('close', preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error('Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.');\n                }\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                if (!isPlainObject(tool)) {\n                    tool = { name: tool };\n                }\n                var toolName = tool.name + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, { attributes: this._setAttributes({ action: tool.name }) }));\n                }\n            },\n            showAt: function (point) {\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-pencil',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotateccw',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotatecw',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action, e.target));\n            },\n            eventData: function (action, target) {\n                var elements = this.selectedElements(), length = elements.length, shapes = [], connections = [], element;\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.focus();\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons k-state-default\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}